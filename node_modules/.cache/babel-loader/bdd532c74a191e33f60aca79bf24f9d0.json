{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoOutput = void 0;\n\nconst CryptoECKey_1 = require(\"./CryptoECKey\");\n\nconst CryptoHDKey_1 = require(\"./CryptoHDKey\");\n\nconst lib_1 = require(\"./lib\");\n\nconst MultiKey_1 = require(\"./MultiKey\");\n\nconst RegistryItem_1 = require(\"./RegistryItem\");\n\nconst RegistryType_1 = require(\"./RegistryType\");\n\nconst ScriptExpression_1 = require(\"./ScriptExpression\");\n\nclass CryptoOutput extends RegistryItem_1.RegistryItem {\n  constructor(scriptExpressions, cryptoKey) {\n    super();\n    this.scriptExpressions = scriptExpressions;\n    this.cryptoKey = cryptoKey;\n\n    this.getRegistryType = () => {\n      return RegistryType_1.RegistryTypes.CRYPTO_OUTPUT;\n    };\n\n    this.getCryptoKey = () => this.cryptoKey;\n\n    this.getHDKey = () => {\n      if (this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {\n        return this.cryptoKey;\n      } else {\n        return undefined;\n      }\n    };\n\n    this.getECKey = () => {\n      if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey) {\n        return this.cryptoKey;\n      } else {\n        return undefined;\n      }\n    };\n\n    this.getMultiKey = () => {\n      if (this.cryptoKey instanceof MultiKey_1.MultiKey) {\n        return this.cryptoKey;\n      } else {\n        return undefined;\n      }\n    };\n\n    this.getScriptExpressions = () => this.scriptExpressions;\n\n    this._toOutputDescriptor = seIndex => {\n      if (seIndex >= this.scriptExpressions.length) {\n        return this.cryptoKey.getOutputDescriptorContent();\n      } else {\n        return `${this.scriptExpressions[seIndex].getExpression()}(${this._toOutputDescriptor(seIndex + 1)})`;\n      }\n    };\n\n    this.toString = () => {\n      return this._toOutputDescriptor(0);\n    };\n\n    this.toDataItem = () => {\n      let dataItem = this.cryptoKey.toDataItem();\n\n      if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey || this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {\n        dataItem.setTag(this.cryptoKey.getRegistryType().getTag());\n      }\n\n      const clonedSe = [...this.scriptExpressions];\n      clonedSe.reverse().forEach(se => {\n        const tagValue = se.getTag();\n\n        if (dataItem.getTag() === undefined) {\n          dataItem.setTag(tagValue);\n        } else {\n          dataItem = new lib_1.DataItem(dataItem, tagValue);\n        }\n      });\n      return dataItem;\n    };\n  }\n\n}\n\nexports.CryptoOutput = CryptoOutput;\n\nCryptoOutput.fromDataItem = dataItem => {\n  const scriptExpressions = [];\n  let _dataItem = dataItem;\n\n  while (true) {\n    let _tag = _dataItem.getTag();\n\n    const se = ScriptExpression_1.ScriptExpression.fromTag(_tag);\n\n    if (se) {\n      scriptExpressions.push(se);\n\n      if (_dataItem.getData() instanceof lib_1.DataItem) {\n        _dataItem = _dataItem.getData();\n        _tag = _dataItem.getTag();\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  }\n\n  const seLength = scriptExpressions.length;\n  const isMultiKey = seLength > 0 && (scriptExpressions[seLength - 1].getExpression() === ScriptExpression_1.ScriptExpressions.MULTISIG.getExpression() || scriptExpressions[seLength - 1].getExpression() === ScriptExpression_1.ScriptExpressions.SORTED_MULTISIG.getExpression());\n\n  if (isMultiKey) {\n    const multiKey = MultiKey_1.MultiKey.fromDataItem(_dataItem);\n    return new CryptoOutput(scriptExpressions, multiKey);\n  }\n\n  if (_dataItem.getTag() === RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getTag()) {\n    const cryptoHDKey = CryptoHDKey_1.CryptoHDKey.fromDataItem(_dataItem);\n    return new CryptoOutput(scriptExpressions, cryptoHDKey);\n  } else {\n    const cryptoECKey = CryptoECKey_1.CryptoECKey.fromDataItem(_dataItem);\n    return new CryptoOutput(scriptExpressions, cryptoECKey);\n  }\n};\n\nCryptoOutput.fromCBOR = _cborPayload => {\n  const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);\n  return CryptoOutput.fromDataItem(dataItem);\n};","map":{"version":3,"mappings":"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","names":["CryptoOutput","RegistryItem_1","constructor","scriptExpressions","cryptoKey","RegistryType_1","CRYPTO_OUTPUT","CryptoHDKey_1","undefined","CryptoECKey_1","MultiKey_1","seIndex","length","getOutputDescriptorContent","getExpression","_toOutputDescriptor","dataItem","toDataItem","setTag","getRegistryType","getTag","clonedSe","reverse","forEach","se","tagValue","lib_1","exports","_dataItem","_tag","ScriptExpression_1","fromTag","push","getData","seLength","isMultiKey","MULTISIG","SORTED_MULTISIG","multiKey","fromDataItem","CRYPTO_HDKEY","cryptoHDKey","cryptoECKey","_cborPayload"],"sourceRoot":"","sources":["../src/CryptoOutput.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}