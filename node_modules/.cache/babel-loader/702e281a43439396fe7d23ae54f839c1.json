{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"./utils\");\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nconst jsbi_1 = __importDefault(require(\"jsbi\"));\n\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\n\nconst rotl = (x, k) => jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k))))));\n\nclass Xoshiro {\n  constructor(seed) {\n    this.next = () => {\n      return new bignumber_js_1.default(this.roll().toString());\n    };\n\n    this.nextDouble = () => {\n      return new bignumber_js_1.default(this.roll().toString()).div(MAX_UINT64 + 1);\n    };\n\n    this.nextInt = (low, high) => {\n      return Math.floor(this.nextDouble().toNumber() * (high - low + 1) + low);\n    };\n\n    this.nextByte = () => this.nextInt(0, 255);\n\n    this.nextData = count => [...new Array(count)].map(() => this.nextByte());\n\n    const digest = utils_1.sha256Hash(seed);\n    this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n    this.setS(digest);\n  }\n\n  setS(digest) {\n    for (let i = 0; i < 4; i++) {\n      let o = i * 8;\n      let v = jsbi_1.default.BigInt(0);\n\n      for (let n = 0; n < 8; n++) {\n        v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n        v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n      }\n\n      this.s[i] = jsbi_1.default.asUintN(64, v);\n    }\n  }\n\n  roll() {\n    const result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n    const t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n    this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n    this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n    this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n    this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n    this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n    this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n    return result;\n  }\n\n}\n\nexports.default = Xoshiro;","map":{"version":3,"mappings":"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","names":["MAX_UINT64","rotl","x","k","jsbi_1","bitwiseXor","asUintN","leftShift","BigInt","signedRightShift","subtract","Xoshiro","constructor","seed","bignumber_js_1","roll","toString","div","low","high","Math","floor","nextDouble","toNumber","nextInt","count","Array","map","nextByte","digest","utils_1","s","setS","i","o","v","n","bitwiseOr","result","multiply","t","exports"],"sourceRoot":"","sources":["../src/xoshiro.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}