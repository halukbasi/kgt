{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVersion = exports.getDeviceId = exports.isHttpUrl = void 0;\n\nconst uuid_1 = require(\"uuid\");\n\nconst HTTP_REGEX = \"^https?:\";\n\nfunction getUrlProtocol(url) {\n  const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n  if (!matches || !matches.length) return;\n  return matches[0];\n}\n\nfunction matchRegexProtocol(url, regex) {\n  const protocol = getUrlProtocol(url);\n  if (typeof protocol === \"undefined\") return false;\n  return new RegExp(regex).test(protocol);\n}\n\nfunction isHttpUrl(url) {\n  return matchRegexProtocol(url, HTTP_REGEX);\n}\n\nexports.isHttpUrl = isHttpUrl;\n\nfunction getDeviceId() {\n  const storeKey = \"pn_device_id\";\n  let deviceId = window.localStorage.getItem(storeKey);\n\n  if (!deviceId) {\n    deviceId = (0, uuid_1.v4)();\n    window.localStorage.setItem(storeKey, deviceId);\n  }\n\n  return deviceId;\n}\n\nexports.getDeviceId = getDeviceId;\n\nfunction getVersion() {\n  return \"web_0.4.0\";\n}\n\nexports.getVersion = getVersion;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAAMA,UAAU,GAAG,UAAnB;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAAmC;EACjC,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAIC,MAAJ,CAAW,OAAX,EAAoB,IAApB,CAAV,CAAhB;EACA,IAAI,CAACF,OAAD,IAAY,CAACA,OAAO,CAACG,MAAzB,EAAiC;EACjC,OAAOH,OAAO,CAAC,CAAD,CAAd;AACD;;AAED,SAASI,kBAAT,CAA4BL,GAA5B,EAAyCM,KAAzC,EAAsD;EACpD,MAAMC,QAAQ,GAAGR,cAAc,CAACC,GAAD,CAA/B;EACA,IAAI,OAAOO,QAAP,KAAoB,WAAxB,EAAqC,OAAO,KAAP;EACrC,OAAO,IAAIJ,MAAJ,CAAWG,KAAX,EAAkBE,IAAlB,CAAuBD,QAAvB,CAAP;AACD;;AAED,SAAgBE,SAAhB,CAA0BT,GAA1B,EAAqC;EACnC,OAAOK,kBAAkB,CAACL,GAAD,EAAMF,UAAN,CAAzB;AACD;;AAFDY;;AAIA,SAAgBC,WAAhB,GAA2B;EACzB,MAAMC,QAAQ,GAAG,cAAjB;EACA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,QAA5B,CAAf;;EACA,IAAI,CAACC,QAAL,EAAe;IACbA,QAAQ,GAAG,gBAAX;IACAC,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4BL,QAA5B,EAAsCC,QAAtC;EACD;;EACD,OAAOA,QAAP;AACD;;AARDH;;AAUA,SAAgBQ,UAAhB,GAA0B;EACxB,OAAO,WAAP;AACD;;AAFDR","names":["HTTP_REGEX","getUrlProtocol","url","matches","match","RegExp","length","matchRegexProtocol","regex","protocol","test","isHttpUrl","exports","getDeviceId","storeKey","deviceId","window","localStorage","getItem","setItem","getVersion"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}