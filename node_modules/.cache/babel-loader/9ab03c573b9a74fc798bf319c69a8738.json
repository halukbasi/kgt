{"ast":null,"code":"var _jsxFileName = \"/home/haluk/react-website-v1/src/App.js\";\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { GlowWalletAdapter, LedgerWalletAdapter, PhantomWalletAdapter, SlopeWalletAdapter, SolflareWalletAdapter, SolletExtensionWalletAdapter, SolletWalletAdapter, TorusWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport './App.css';\nimport mApp from '../mApp'; // import the styles\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nfunction App() {\n  // you can use Mainnet, Devnet or Testnet here\n  const solNetwork = WalletAdapterNetwork.Mainnet;\n  const endpoint = useMemo(() => clusterApiUrl(solNetwork), [solNetwork]); // initialise all the wallets you want to use\n\n  const wallets = useMemo(() => [new PhantomWalletAdapter(), new GlowWalletAdapter(), new SlopeWalletAdapter(), new SolflareWalletAdapter({\n    solNetwork\n  }), new TorusWalletAdapter(), new LedgerWalletAdapter(), new SolletExtensionWalletAdapter(), new SolletWalletAdapter()], [solNetwork]);\n  return /*#__PURE__*/React.createElement(ConnectionProvider, {\n    endpoint: endpoint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WalletProvider, {\n    wallets: wallets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WalletModalProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"mApp\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"names":["clusterApiUrl","WalletAdapterNetwork","GlowWalletAdapter","LedgerWalletAdapter","PhantomWalletAdapter","SlopeWalletAdapter","SolflareWalletAdapter","SolletExtensionWalletAdapter","SolletWalletAdapter","TorusWalletAdapter","ConnectionProvider","WalletProvider","WalletModalProvider","mApp","require","App","solNetwork","Mainnet","endpoint","useMemo","wallets"],"sources":["/home/haluk/react-website-v1/src/App.js"],"sourcesContent":["import { clusterApiUrl } from '@solana/web3.js';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n    GlowWalletAdapter,\n    LedgerWalletAdapter,\n    PhantomWalletAdapter,\n    SlopeWalletAdapter,\n    SolflareWalletAdapter,\n    SolletExtensionWalletAdapter,\n    SolletWalletAdapter,\n    TorusWalletAdapter,\n} from '@solana/wallet-adapter-wallets';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport './App.css';\nimport mApp from '../mApp';\n\n// import the styles\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nfunction App() {\n\t// you can use Mainnet, Devnet or Testnet here\n    const solNetwork = WalletAdapterNetwork.Mainnet;\n    const endpoint = useMemo(() => clusterApiUrl(solNetwork), [solNetwork]);\n    // initialise all the wallets you want to use\n    const wallets = useMemo(\n        () => [\n            new PhantomWalletAdapter(),\n            new GlowWalletAdapter(),\n            new SlopeWalletAdapter(),\n            new SolflareWalletAdapter({ solNetwork }),\n            new TorusWalletAdapter(),\n            new LedgerWalletAdapter(),\n            new SolletExtensionWalletAdapter(),\n            new SolletWalletAdapter(),\n        ],\n        [solNetwork]\n    );\n\n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets}>\n                <WalletModalProvider>\n                    <div className=\"App\">\n                    \t<mApp/>\n                    </div>\n                </WalletModalProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n}\n\nexport default App;"],"mappings":";AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,oBAAT,QAAqC,6BAArC;AACA,SACIC,iBADJ,EAEIC,mBAFJ,EAGIC,oBAHJ,EAIIC,kBAJJ,EAKIC,qBALJ,EAMIC,4BANJ,EAOIC,mBAPJ,EAQIC,kBARJ,QASO,gCATP;AAUA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,8BAAnD;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;;AACAC,OAAO,CAAC,4CAAD,CAAP;;AAEA,SAASC,GAAT,GAAe;EACd;EACG,MAAMC,UAAU,GAAGf,oBAAoB,CAACgB,OAAxC;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,MAAMnB,aAAa,CAACgB,UAAD,CAApB,EAAkC,CAACA,UAAD,CAAlC,CAAxB,CAHW,CAIX;;EACA,MAAMI,OAAO,GAAGD,OAAO,CACnB,MAAM,CACF,IAAIf,oBAAJ,EADE,EAEF,IAAIF,iBAAJ,EAFE,EAGF,IAAIG,kBAAJ,EAHE,EAIF,IAAIC,qBAAJ,CAA0B;IAAEU;EAAF,CAA1B,CAJE,EAKF,IAAIP,kBAAJ,EALE,EAMF,IAAIN,mBAAJ,EANE,EAOF,IAAII,4BAAJ,EAPE,EAQF,IAAIC,mBAAJ,EARE,CADa,EAWnB,CAACQ,UAAD,CAXmB,CAAvB;EAcA,oBACI,oBAAC,kBAAD;IAAoB,QAAQ,EAAEE,QAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,cAAD;IAAgB,OAAO,EAAEE,OAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,mBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD,CADJ,CADJ,CADJ,CADJ;AAWH;;AAED,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}