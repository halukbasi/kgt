{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { setAPIKey, setEmbedHost, post } from '@toruslabs/http-helpers';\nimport stringify from 'json-stable-stringify';\nimport { ec as ec$1 } from 'elliptic';\nimport createKeccakHash from 'keccak';\nimport { encrypt, getPublic, decrypt } from '@toruslabs/eccrypto';\n\nfunction keccak256(a) {\n  return createKeccakHash(\"keccak256\").update(a).digest();\n}\n\nconst ec = new ec$1(\"secp256k1\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass MetadataStorageLayer {\n  // ms\n  constructor() {\n    let metadataHost = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"https://metadata.tor.us\";\n    let serverTimeOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _defineProperty(this, \"metadataHost\", void 0);\n\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n\n    this.metadataHost = metadataHost;\n    this.serverTimeOffset = serverTimeOffset;\n  }\n\n  static setAPIKey(apiKey) {\n    setAPIKey(apiKey);\n  }\n\n  static setEmbedHost(embedHost) {\n    setEmbedHost(embedHost);\n  }\n\n  generateMetadataParams(message, privateKeyHex) {\n    var _ref, _sig$recoveryParam;\n\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    const setData = {\n      data: message,\n      timestamp: Math.floor(this.serverTimeOffset + Date.now() / 1000).toString(16)\n    };\n    const sig = key.sign(keccak256(stringify(setData)));\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n      set_data: setData,\n      signature: Buffer.from((_ref = sig.r.toString(16, 64) + sig.s.toString(16, 64) + ((_sig$recoveryParam = sig.recoveryParam) === null || _sig$recoveryParam === void 0 ? void 0 : _sig$recoveryParam.toString(16).padStart(2, \"0\").slice(-2))) !== null && _ref !== void 0 ? _ref : \"00\", \"hex\").toString(\"base64\")\n    };\n  }\n\n  generatePubKeyParams(privateKeyHex) {\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\")\n    };\n  }\n\n  async setMetadata(data, namespace, options) {\n    const params = namespace !== null ? _objectSpread(_objectSpread({}, data), {}, {\n      namespace\n    }) : data;\n    const metadataResponse = await post(\"\".concat(this.metadataHost, \"/set\"), params, options, {\n      useAPIKey: true\n    });\n    return metadataResponse.message;\n  }\n\n  async getMetadata(pubKey, namespace, options) {\n    const params = namespace !== null ? _objectSpread(_objectSpread({}, pubKey), {}, {\n      namespace\n    }) : pubKey;\n    const metadataResponse = await post(\"\".concat(this.metadataHost, \"/get\"), params, options, {\n      useAPIKey: true\n    });\n    return metadataResponse.message;\n  }\n\n}\n\nconst WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nconst WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\n\nfunction encParamsHexToBuf(encParamsHex) {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\")\n  };\n}\n\nfunction encParamsBufToHex(encParams) {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\")\n  };\n}\n\nasync function encryptData(privKeyHex, d) {\n  const serializedDec = JSON.stringify(d);\n  const serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n  const encParams = await encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n  const encParamsHex = encParamsBufToHex(encParams);\n  const sData = JSON.stringify(encParamsHex);\n  return sData;\n}\n\nasync function decryptData(privKeyHex, d) {\n  const encParamsHex = JSON.parse(d);\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const serializedBuf = await decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedDec = serializedBuf.toString(\"utf-8\");\n  const data = JSON.parse(serializedDec);\n  return data;\n}\n\nasync function getAndDecryptData(m, privKeyHex, namespace) {\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const pubKey = keyPair.getPublic();\n  const serializedData = await m.getMetadata({\n    pub_key_X: pubKey.getX().toString(16),\n    pub_key_Y: pubKey.getY().toString(16)\n  }, namespace);\n\n  if (!serializedData) {\n    return null;\n  }\n\n  const data = await decryptData(privKeyHex, serializedData);\n  return data;\n}\n\nasync function encryptAndSetData(m, privKeyHex, d, namespace) {\n  const sData = await encryptData(privKeyHex, d);\n  const metadataParams = m.generateMetadataParams(sData, privKeyHex);\n  await m.setMetadata(metadataParams, namespace);\n}\n\nasync function setTorusShare(m, webAuthnPubKey, webAuthnRefHex, subspace, subspaceData) {\n  const refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = refKeyPair.getPrivate();\n  const pubKey = ec.keyFromPublic({\n    x: webAuthnPubKey.pub_key_X,\n    y: webAuthnPubKey.pub_key_Y\n  });\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  let d = {};\n  if (data) d = data;\n  const serializedSubspaceData = JSON.stringify(subspaceData);\n  const serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n  const encSubspaceData = await encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n  const encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n  d[subspace] = encSubspaceDataHex;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n}\n\nasync function setDeviceShare(m, webAuthnRefHex, subspace, subspaceData) {\n  const keyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = keyPair.getPrivate();\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  let d = {};\n  if (data) d = data;\n  d[subspace] = subspaceData;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n}\n\nasync function getTorusShare(m, webAuthnKeyHex, webAuthnRefHex, subspace) {\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  if (!data) return null;\n  const encParamsHex = data[subspace];\n  if (!encParamsHex) return null;\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n  const privKey = keyPair.getPrivate();\n  const serializedSubspaceDataBuf = await decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n  const subspaceData = JSON.parse(serializedSubspaceData);\n  return subspaceData;\n}\n\nasync function getDeviceShare(m, webAuthnRefHex, subspace) {\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  if (data) return data[subspace];\n  return null;\n}\n\nexport { decryptData, MetadataStorageLayer as default, ec, encParamsBufToHex, encParamsHexToBuf, encryptAndSetData, encryptData, getAndDecryptData, getDeviceShare, getTorusShare, keccak256, setDeviceShare, setTorusShare };","map":{"version":3,"mappings":"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","names":["keccak256","a","createKeccakHash","update","digest","ec","EC","MetadataStorageLayer","constructor","metadataHost","serverTimeOffset","_defineProperty","setAPIKey","apiKey","setEmbedHost","embedHost","generateMetadataParams","message","privateKeyHex","key","keyFromPrivate","setData","data","timestamp","Math","floor","Date","now","toString","sig","sign","stringify","pub_key_X","getPublic","getX","pub_key_Y","getY","set_data","signature","Buffer","from","r","s","recoveryParam","_sig$recoveryParam","padStart","slice","generatePubKeyParams","setMetadata","namespace","options","params","metadataResponse","post","useAPIKey","getMetadata","pubKey","WEBAUTHN_TORUS_SHARE","WEBAUTHN_DEVICE_SHARE","encParamsHexToBuf","encParamsHex","iv","ephemPublicKey","ciphertext","mac","encParamsBufToHex","encParams","encryptData","privKeyHex","d","serializedDec","JSON","serializedBuf","encrypt","sData","decryptData","parse","keyPair","decrypt","getPrivate","getAndDecryptData","m","serializedData","encryptAndSetData","metadataParams","setTorusShare","webAuthnPubKey","webAuthnRefHex","subspace","subspaceData","refKeyPair","privKey","keyFromPublic","x","y","serializedSubspaceData","serializedSubspaceDataBuf","encSubspaceData","encSubspaceDataHex","setDeviceShare","getTorusShare","webAuthnKeyHex","getDeviceShare"],"sources":["../src/utils.ts","../src/MetadataStorageLayer.ts","../src/webAuthnShareResolver.ts"],"sourcesContent":[null,null,null]},"metadata":{},"sourceType":"module"}