{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signTransaction = exports.getPublicKey = exports.getDerivationPath = void 0;\n\nconst hw_transport_1 = require(\"@ledgerhq/hw-transport\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nrequire(\"./polyfills/index\");\n\nfunction getDerivationPath(account, change) {\n  const length = account !== undefined ? change === undefined ? 3 : 4 : 2;\n  const derivationPath = Buffer.alloc(1 + length * 4);\n  let offset = derivationPath.writeUInt8(length, 0);\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\n\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\n\n  if (account !== undefined) {\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\n\n    if (change !== undefined) {\n      derivationPath.writeUInt32BE(harden(change), offset);\n    }\n  }\n\n  return derivationPath;\n}\n\nexports.getDerivationPath = getDerivationPath;\nconst BIP32_HARDENED_BIT = 1 << 31 >>> 0;\n\nfunction harden(n) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\nconst MAX_PAYLOAD = 255;\nconst LEDGER_CLA = 0xe0;\n/** @internal */\n\nfunction getPublicKey(transport, derivationPath) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const bytes = yield send(transport, INS_GET_PUBKEY, P1_NON_CONFIRM, derivationPath);\n    return new web3_js_1.PublicKey(bytes);\n  });\n}\n\nexports.getPublicKey = getPublicKey;\n/** @internal */\n\nfunction signTransaction(transport, transaction, derivationPath) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const paths = Buffer.alloc(1);\n    paths.writeUInt8(1, 0);\n    const message = transaction.serializeMessage();\n    const data = Buffer.concat([paths, derivationPath, message]);\n    return yield send(transport, INS_SIGN_MESSAGE, P1_CONFIRM, data);\n  });\n}\n\nexports.signTransaction = signTransaction;\n\nfunction send(transport, instruction, p1, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let p2 = 0;\n    let offset = 0;\n\n    if (data.length > MAX_PAYLOAD) {\n      while (data.length - offset > MAX_PAYLOAD) {\n        const buffer = data.slice(offset, offset + MAX_PAYLOAD);\n        const response = yield transport.send(LEDGER_CLA, instruction, p1, p2 | P2_MORE, buffer); // @ts-ignore\n\n        if (response.length !== 2) throw new hw_transport_1.TransportStatusError(hw_transport_1.StatusCodes.INCORRECT_DATA);\n        p2 |= P2_EXTEND;\n        offset += MAX_PAYLOAD;\n      }\n    }\n\n    const buffer = data.slice(offset);\n    const response = yield transport.send(LEDGER_CLA, instruction, p1, p2, buffer);\n    return response.slice(0, response.length - 2);\n  });\n}","map":{"version":3,"mappings":"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","names":["require","getDerivationPath","account","change","length","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","harden","exports","BIP32_HARDENED_BIT","n","INS_GET_PUBKEY","INS_SIGN_MESSAGE","P1_NON_CONFIRM","P1_CONFIRM","P2_EXTEND","P2_MORE","MAX_PAYLOAD","LEDGER_CLA","getPublicKey","transport","bytes","send","web3_js_1","signTransaction","transaction","paths","message","serializeMessage","data","concat","instruction","p1","p2","buffer","slice","response","hw_transport_1","INCORRECT_DATA"],"sourceRoot":"","sources":["../../src/util.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}