{"ast":null,"code":"import { BaseWalletAdapter } from './adapter.mjs';\nimport { WalletSendTransactionError, WalletSignTransactionError } from './errors.mjs';\nexport class BaseSignerWalletAdapter extends BaseWalletAdapter {\n  async sendTransaction(transaction, connection) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let emit = true;\n\n    try {\n      try {\n        const {\n          signers,\n          ...sendOptions\n        } = options;\n        transaction = await this.prepareTransaction(transaction, connection, sendOptions);\n        (signers === null || signers === void 0 ? void 0 : signers.length) && transaction.partialSign(...signers);\n        transaction = await this.signTransaction(transaction);\n        const rawTransaction = transaction.serialize();\n        return await connection.sendRawTransaction(rawTransaction, sendOptions);\n      } catch (error) {\n        // If the error was thrown by `signTransaction`, rethrow it and don't emit a duplicate event\n        if (error instanceof WalletSignTransactionError) {\n          emit = false;\n          throw error;\n        }\n\n        throw new WalletSendTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n      }\n    } catch (error) {\n      if (emit) {\n        this.emit('error', error);\n      }\n\n      throw error;\n    }\n  }\n\n  async signAllTransactions(transactions) {\n    const signedTransactions = [];\n\n    for (const transaction of transactions) {\n      signedTransactions.push(await this.signTransaction(transaction));\n    }\n\n    return signedTransactions;\n  }\n\n}\nexport class BaseMessageSignerWalletAdapter extends BaseSignerWalletAdapter {}","map":{"version":3,"mappings":"AAGA,SAASA,iBAAT,QAAkC,eAAlC;AACA,SAASC,0BAAT,EAAqCC,0BAArC,QAAuE,cAAvE;AASA,OAAM,MAAgBC,uBAAhB,SAAgDH,iBAAhD,CAAiE;EAC9C,MAAfI,eAAe,CACjBC,WADiB,EAEjBC,UAFiB,EAGmB;IAAA,IAApCC,OAAoC,uEAAF,EAAE;IAEpC,IAAIC,IAAI,GAAG,IAAX;;IACA,IAAI;MACA,IAAI;QACA,MAAM;UAAEC,OAAF;UAAW,GAAGC;QAAd,IAA8BH,OAApC;QAEAF,WAAW,GAAG,MAAM,KAAKM,kBAAL,CAAwBN,WAAxB,EAAqCC,UAArC,EAAiDI,WAAjD,CAApB;QAEA,QAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEE,MAAT,KAAmBP,WAAW,CAACQ,WAAZ,CAAwB,GAAGJ,OAA3B,CAAnB;QAEAJ,WAAW,GAAG,MAAM,KAAKS,eAAL,CAAqBT,WAArB,CAApB;QAEA,MAAMU,cAAc,GAAGV,WAAW,CAACW,SAAZ,EAAvB;QAEA,OAAO,MAAMV,UAAU,CAACW,kBAAX,CAA8BF,cAA9B,EAA8CL,WAA9C,CAAb;MACH,CAZD,CAYE,OAAOQ,KAAP,EAAmB;QACjB;QACA,IAAIA,KAAK,YAAYhB,0BAArB,EAAiD;UAC7CM,IAAI,GAAG,KAAP;UACA,MAAMU,KAAN;QACH;;QACD,MAAM,IAAIjB,0BAAJ,CAA+BiB,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEC,OAAtC,EAA+CD,KAA/C,CAAN;MACH;IACJ,CArBD,CAqBE,OAAOA,KAAP,EAAmB;MACjB,IAAIV,IAAJ,EAAU;QACN,KAAKA,IAAL,CAAU,OAAV,EAAmBU,KAAnB;MACH;;MACD,MAAMA,KAAN;IACH;EACJ;;EAIwB,MAAnBE,mBAAmB,CAACC,YAAD,EAA4B;IACjD,MAAMC,kBAAkB,GAAkB,EAA1C;;IACA,KAAK,MAAMjB,WAAX,IAA0BgB,YAA1B,EAAwC;MACpCC,kBAAkB,CAACC,IAAnB,CAAwB,MAAM,KAAKT,eAAL,CAAqBT,WAArB,CAA9B;IACH;;IACD,OAAOiB,kBAAP;EACH;;AA5CkE;AAqDvE,OAAM,MAAgBE,8BAAhB,SACMrB,uBADN,CAC6B","names":["BaseWalletAdapter","WalletSendTransactionError","WalletSignTransactionError","BaseSignerWalletAdapter","sendTransaction","transaction","connection","options","emit","signers","sendOptions","prepareTransaction","length","partialSign","signTransaction","rawTransaction","serialize","sendRawTransaction","error","message","signAllTransactions","transactions","signedTransactions","push","BaseMessageSignerWalletAdapter"],"sourceRoot":"","sources":["../../src/signer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}