{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n\nvar heyListen = require('hey-listen');\n\nvar styleValueTypes = require('style-value-types');\n\nvar tslib = require('tslib');\n\nvar popmotion = require('popmotion');\n\nvar sync = require('framesync');\n\nvar dom = require('@motionone/dom');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n/**\n * Browser-safe usage of process\n */\n\n\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined ? defaultEnvironment : process.env.NODE_ENV || defaultEnvironment;\n\nconst createDefinition = propNames => ({\n  isEnabled: props => propNames.some(name => !!props[name])\n});\n\nconst featureDefinitions = {\n  measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n  animation: createDefinition([\"animate\", \"exit\", \"variants\", \"whileHover\", \"whileTap\", \"whileFocus\", \"whileDrag\", \"whileInView\"]),\n  exit: createDefinition([\"exit\"]),\n  drag: createDefinition([\"drag\", \"dragControls\"]),\n  focus: createDefinition([\"whileFocus\"]),\n  hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n  tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n  pan: createDefinition([\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"]),\n  inView: createDefinition([\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"])\n};\n\nfunction loadFeatures(features) {\n  for (const key in features) {\n    if (features[key] === null) continue;\n\n    if (key === \"projectionNodeConstructor\") {\n      featureDefinitions.projectionNodeConstructor = features[key];\n    } else {\n      featureDefinitions[key].Component = features[key];\n    }\n  }\n}\n\nconst LazyContext = React.createContext({\n  strict: false\n});\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\n\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n  const features = [];\n  const lazyContext = React.useContext(LazyContext);\n  if (!visualElement) return null;\n  /**\n   * If we're in development mode, check to make sure we're not rendering a motion component\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\n   */\n\n  if (env !== \"production\" && preloadedFeatures && lazyContext.strict) {\n    heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n  }\n\n  for (let i = 0; i < numFeatures; i++) {\n    const name = featureNames[i];\n    const {\n      isEnabled,\n      Component\n    } = featureDefinitions[name];\n    /**\n     * It might be possible in the future to use this moment to\n     * dynamically request functionality. In initial tests this\n     * was producing a lot of duplication amongst bundles.\n     */\n\n    if (isEnabled(props) && Component) {\n      features.push(React__namespace.createElement(Component, Object.assign({\n        key: name\n      }, props, {\n        visualElement: visualElement\n      })));\n    }\n  }\n\n  return features;\n}\n/**\n * @public\n */\n\n\nconst MotionConfigContext = React.createContext({\n  transformPagePoint: p => p,\n  isStatic: false,\n  reducedMotion: \"never\"\n});\nconst MotionContext = React.createContext({});\n\nfunction useVisualElementContext() {\n  return React.useContext(MotionContext).visualElement;\n}\n/**\n * @public\n */\n\n\nconst PresenceContext = React.createContext(null);\nconst isBrowser = typeof document !== \"undefined\";\nconst useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect; // Does this device prefer reduced motion? Returns `null` server-side.\n\nconst prefersReducedMotion = {\n  current: null\n};\nlet hasDetected = false;\n\nfunction initPrefersReducedMotion() {\n  hasDetected = true;\n  if (!isBrowser) return;\n\n  if (window.matchMedia) {\n    const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n\n    const setReducedMotionPreferences = () => prefersReducedMotion.current = motionMediaQuery.matches;\n\n    motionMediaQuery.addListener(setReducedMotionPreferences);\n    setReducedMotionPreferences();\n  } else {\n    prefersReducedMotion.current = false;\n  }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\n\n\nfunction useReducedMotion() {\n  /**\n   * Lazy initialisation of prefersReducedMotion\n   */\n  !hasDetected && initPrefersReducedMotion();\n  const [shouldReduceMotion] = React.useState(prefersReducedMotion.current);\n  /**\n   * TODO See if people miss automatically updating shouldReduceMotion setting\n   */\n\n  return shouldReduceMotion;\n}\n\nfunction useReducedMotionConfig() {\n  const reducedMotionPreference = useReducedMotion();\n  const {\n    reducedMotion\n  } = React.useContext(MotionConfigContext);\n\n  if (reducedMotion === \"never\") {\n    return false;\n  } else if (reducedMotion === \"always\") {\n    return true;\n  } else {\n    return reducedMotionPreference;\n  }\n}\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n  const lazyContext = React.useContext(LazyContext);\n  const parent = useVisualElementContext();\n  const presenceContext = React.useContext(PresenceContext);\n  const shouldReduceMotion = useReducedMotionConfig();\n  const visualElementRef = React.useRef(undefined);\n  /**\n   * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n   */\n\n  if (!createVisualElement) createVisualElement = lazyContext.renderer;\n\n  if (!visualElementRef.current && createVisualElement) {\n    visualElementRef.current = createVisualElement(Component, {\n      visualState,\n      parent,\n      props,\n      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n      shouldReduceMotion\n    });\n  }\n\n  const visualElement = visualElementRef.current;\n  useIsomorphicLayoutEffect(() => {\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n  });\n  React.useEffect(() => {\n    var _a;\n\n    (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n  });\n  useIsomorphicLayoutEffect(() => () => visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(), []);\n  return visualElement;\n}\n\nfunction isRefObject(ref) {\n  return typeof ref === \"object\" && Object.prototype.hasOwnProperty.call(ref, \"current\");\n}\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\n\n\nfunction useMotionRef(visualState, visualElement, externalRef) {\n  return React.useCallback(instance => {\n    var _a;\n\n    instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n\n    if (visualElement) {\n      instance ? visualElement.mount(instance) : visualElement.unmount();\n    }\n\n    if (externalRef) {\n      if (typeof externalRef === \"function\") {\n        externalRef(instance);\n      } else if (isRefObject(externalRef)) {\n        externalRef.current = instance;\n      }\n    }\n  },\n  /**\n   * Only pass a new ref callback to React if we've received a visual element\n   * factory. Otherwise we'll be mounting/remounting every time externalRef\n   * or other dependencies change.\n   */\n  [visualElement]);\n}\n/**\n * Decides if the supplied variable is an array of variant labels\n */\n\n\nfunction isVariantLabels(v) {\n  return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\n\n\nfunction isVariantLabel(v) {\n  return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\n\n\nfunction getCurrent(visualElement) {\n  const current = {};\n  visualElement.forEachValue((value, key) => current[key] = value.get());\n  return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\n\n\nfunction getVelocity$1(visualElement) {\n  const velocity = {};\n  visualElement.forEachValue((value, key) => velocity[key] = value.getVelocity());\n  return velocity;\n}\n\nfunction resolveVariantFromProps(props, definition, custom) {\n  let currentValues = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let currentVelocity = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var _a;\n  /**\n   * If the variant definition is a function, resolve.\n   */\n\n\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n  }\n  /**\n   * If the variant definition is a variant label, or\n   * the function returned a variant label, resolve.\n   */\n\n\n  if (typeof definition === \"string\") {\n    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n  }\n  /**\n   * At this point we've resolved both functions and variant labels,\n   * but the resolved variant label might itself have been a function.\n   * If so, resolve. This can only have returned a valid target object.\n   */\n\n\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n  }\n\n  return definition;\n}\n\nfunction resolveVariant(visualElement, definition, custom) {\n  const props = visualElement.getProps();\n  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\n\nfunction checkIfControllingVariants(props) {\n  var _a;\n\n  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);\n}\n\nfunction checkIfVariantNode(props) {\n  return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n  if (checkIfControllingVariants(props)) {\n    const {\n      initial,\n      animate\n    } = props;\n    return {\n      initial: initial === false || isVariantLabel(initial) ? initial : undefined,\n      animate: isVariantLabel(animate) ? animate : undefined\n    };\n  }\n\n  return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props) {\n  const {\n    initial,\n    animate\n  } = getCurrentTreeVariants(props, React.useContext(MotionContext));\n  return React.useMemo(() => ({\n    initial,\n    animate\n  }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\n\nfunction variantLabelsAsDependency(prop) {\n  return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\n\n\nfunction useConstant(init) {\n  const ref = React.useRef(null);\n\n  if (ref.current === null) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\n\n\nconst globalProjectionState = {\n  /**\n   * Global flag as to whether the tree has animated since the last time\n   * we resized the window\n   */\n  hasAnimatedSinceResize: true,\n\n  /**\n   * We set this to true once, on the first update. Any nodes added to the tree beyond that\n   * update will be given a `data-projection-id` attribute.\n   */\n  hasEverUpdated: false\n};\nlet id$1 = 1;\n\nfunction useProjectionId() {\n  return useConstant(() => {\n    if (globalProjectionState.hasEverUpdated) {\n      return id$1++;\n    }\n  });\n}\n\nconst LayoutGroupContext = React.createContext({});\n/**\n * Internal, exported only for usage in Framer\n */\n\nconst SwitchLayoutGroupContext = React.createContext({});\n\nfunction useProjection(projectionId, _ref, visualElement, ProjectionNodeConstructor) {\n  let {\n    layoutId,\n    layout,\n    drag,\n    dragConstraints,\n    layoutScroll\n  } = _ref;\n\n  var _a;\n\n  const initialPromotionConfig = React.useContext(SwitchLayoutGroupContext);\n\n  if (!ProjectionNodeConstructor || !visualElement || (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n    return;\n  }\n\n  visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_a = visualElement.parent) === null || _a === void 0 ? void 0 : _a.projection);\n  visualElement.projection.setOptions({\n    layoutId,\n    layout,\n    alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n    visualElement,\n    scheduleRender: () => visualElement.scheduleRender(),\n\n    /**\n     * TODO: Update options in an effect. This could be tricky as it'll be too late\n     * to update by the time layout animations run.\n     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n     * ensuring it gets called if there's no potential layout animations.\n     *\n     */\n    animationType: typeof layout === \"string\" ? layout : \"both\",\n    initialPromotionConfig,\n    layoutScroll\n  });\n}\n\nclass VisualElementHandler extends React__default[\"default\"].Component {\n  /**\n   * Update visual element props as soon as we know this update is going to be commited.\n   */\n  getSnapshotBeforeUpdate() {\n    this.updateProps();\n    return null;\n  }\n\n  componentDidUpdate() {}\n\n  updateProps() {\n    const {\n      visualElement,\n      props\n    } = this.props;\n    if (visualElement) visualElement.setProps(props);\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\n\n\nfunction createMotionComponent(_ref2) {\n  let {\n    preloadedFeatures,\n    createVisualElement,\n    projectionNodeConstructor,\n    useRender,\n    useVisualState,\n    Component\n  } = _ref2;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n\n  function MotionComponent(props, externalRef) {\n    const layoutId = useLayoutId(props);\n    props = Object.assign(Object.assign({}, props), {\n      layoutId\n    });\n    /**\n     * If we're rendering in a static environment, we only visually update the component\n     * as a result of a React-rerender rather than interactions or animations. This\n     * means we don't need to load additional memory structures like VisualElement,\n     * or any gesture/animation features.\n     */\n\n    const config = React.useContext(MotionConfigContext);\n    let features = null;\n    const context = useCreateMotionContext(props);\n    /**\n     * Create a unique projection ID for this component. If a new component is added\n     * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n     * us to measure it as soon as any layout effect flushes pending layout animations.\n     *\n     * Performance note: It'd be better not to have to search the DOM for these elements.\n     * For newly-entering components it could be enough to only correct treeScale, in which\n     * case we could mount in a scale-correction mode. This wouldn't be enough for\n     * shared element transitions however. Perhaps for those we could revert to a root node\n     * that gets forceRendered and layout animations are triggered on its layout effect.\n     */\n\n    const projectionId = config.isStatic ? undefined : useProjectionId();\n    /**\n     *\n     */\n\n    const visualState = useVisualState(props, config.isStatic);\n\n    if (!config.isStatic && isBrowser) {\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n      context.visualElement = useVisualElement(Component, visualState, Object.assign(Object.assign({}, config), props), createVisualElement);\n      useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor);\n      /**\n       * Load Motion gesture and animation features. These are rendered as renderless\n       * components so each feature can optionally make use of React lifecycle methods.\n       */\n\n      features = useFeatures(props, context.visualElement, preloadedFeatures);\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n\n\n    return React__namespace.createElement(VisualElementHandler, {\n      visualElement: context.visualElement,\n      props: Object.assign(Object.assign({}, config), props)\n    }, features, React__namespace.createElement(MotionContext.Provider, {\n      value: context\n    }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement)));\n  }\n\n  return React.forwardRef(MotionComponent);\n}\n\nfunction useLayoutId(_ref3) {\n  let {\n    layoutId\n  } = _ref3;\n\n  var _a;\n\n  const layoutGroupId = (_a = React.useContext(LayoutGroupContext)) === null || _a === void 0 ? void 0 : _a.id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\n\n\nfunction createMotionProxy(createConfig) {\n  function custom(Component) {\n    let customMotionComponentConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n  }\n\n  if (typeof Proxy === \"undefined\") {\n    return custom;\n  }\n  /**\n   * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n   * Rather than generating them anew every render.\n   */\n\n\n  const componentCache = new Map();\n  return new Proxy(custom, {\n    /**\n     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n     * The prop name is passed through as `key` and we can use that to generate a `motion`\n     * DOM component with that name.\n     */\n    get: (_target, key) => {\n      /**\n       * If this element doesn't exist in the component cache, create it and cache.\n       */\n      if (!componentCache.has(key)) {\n        componentCache.set(key, custom(key));\n      }\n\n      return componentCache.get(key);\n    }\n  });\n}\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\n\n\nconst lowercaseSVGElements = [\"animate\", \"circle\", \"defs\", \"desc\", \"ellipse\", \"g\", \"image\", \"line\", \"filter\", \"marker\", \"mask\", \"metadata\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"rect\", \"stop\", \"svg\", \"switch\", \"symbol\", \"text\", \"tspan\", \"use\", \"view\"];\n\nfunction isSVGComponent(Component) {\n  if (\n  /**\n   * If it's not a string, it's a custom React component. Currently we only support\n   * HTML custom React components.\n   */\n  typeof Component !== \"string\" ||\n  /**\n   * If it contains a dash, the element is a custom HTML webcomponent.\n   */\n  Component.includes(\"-\")) {\n    return false;\n  } else if (\n  /**\n   * If it's in our list of lowercase SVG tags, it's an SVG component\n   */\n  lowercaseSVGElements.indexOf(Component) > -1 ||\n  /**\n   * If it contains a capital letter, it's an SVG component\n   */\n  /[A-Z]/.test(Component)) {\n    return true;\n  }\n\n  return false;\n}\n\nconst scaleCorrectors = {};\n\nfunction addScaleCorrector(correctors) {\n  Object.assign(scaleCorrectors, correctors);\n}\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\n\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\n\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\n\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(operationKey => transformAxes.forEach(axesKey => transformProps.push(operationKey + axesKey)));\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\n\nfunction sortTransformProps(a, b) {\n  return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\n\n\nconst transformPropSet = new Set(transformProps);\n\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\n\n\nconst transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\n\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\n\nfunction isForcedMotionValue(key, _ref4) {\n  let {\n    layout,\n    layoutId\n  } = _ref4;\n  return isTransformProp(key) || isTransformOriginProp(key) || (layout || layoutId !== undefined) && (!!scaleCorrectors[key] || key === \"opacity\");\n}\n\nconst isMotionValue = value => {\n  return Boolean(value !== null && typeof value === \"object\" && value.getVelocity);\n};\n\nconst translateAlias = {\n  x: \"translateX\",\n  y: \"translateY\",\n  z: \"translateZ\",\n  transformPerspective: \"perspective\"\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\n\nfunction buildTransform(_ref5, _ref6, transformIsDefault, transformTemplate) {\n  let {\n    transform,\n    transformKeys\n  } = _ref5;\n  let {\n    enableHardwareAcceleration = true,\n    allowTransformNone = true\n  } = _ref6;\n  // The transform string we're going to build into.\n  let transformString = \"\"; // Transform keys into their default order - this will determine the output order.\n\n  transformKeys.sort(sortTransformProps); // Track whether the defined transform has a defined z so we don't add a\n  // second to enable hardware acceleration\n\n  let transformHasZ = false; // Loop over each transform and build them into transformString\n\n  const numTransformKeys = transformKeys.length;\n\n  for (let i = 0; i < numTransformKeys; i++) {\n    const key = transformKeys[i];\n    transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    if (key === \"z\") transformHasZ = true;\n  }\n\n  if (!transformHasZ && enableHardwareAcceleration) {\n    transformString += \"translateZ(0)\";\n  }\n\n  transformString = transformString.trim(); // If we have a custom `transform` template, pass our transform values and\n  // generated transformString to that before returning\n\n  if (transformTemplate) {\n    transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n  } else if (allowTransformNone && transformIsDefault) {\n    transformString = \"none\";\n  }\n\n  return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\n\n\nfunction buildTransformOrigin(_ref7) {\n  let {\n    originX = \"50%\",\n    originY = \"50%\",\n    originZ = 0\n  } = _ref7;\n  return `${originX} ${originY} ${originZ}`;\n}\n/**\n * Returns true if the provided key is a CSS variable\n */\n\n\nfunction isCSSVariable$1(key) {\n  return key.startsWith(\"--\");\n}\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\n\n\nconst getValueAsType = (value, type) => {\n  return type && typeof value === \"number\" ? type.transform(value) : value;\n};\n\nconst int = Object.assign(Object.assign({}, styleValueTypes.number), {\n  transform: Math.round\n});\nconst numberValueTypes = {\n  // Border props\n  borderWidth: styleValueTypes.px,\n  borderTopWidth: styleValueTypes.px,\n  borderRightWidth: styleValueTypes.px,\n  borderBottomWidth: styleValueTypes.px,\n  borderLeftWidth: styleValueTypes.px,\n  borderRadius: styleValueTypes.px,\n  radius: styleValueTypes.px,\n  borderTopLeftRadius: styleValueTypes.px,\n  borderTopRightRadius: styleValueTypes.px,\n  borderBottomRightRadius: styleValueTypes.px,\n  borderBottomLeftRadius: styleValueTypes.px,\n  // Positioning props\n  width: styleValueTypes.px,\n  maxWidth: styleValueTypes.px,\n  height: styleValueTypes.px,\n  maxHeight: styleValueTypes.px,\n  size: styleValueTypes.px,\n  top: styleValueTypes.px,\n  right: styleValueTypes.px,\n  bottom: styleValueTypes.px,\n  left: styleValueTypes.px,\n  // Spacing props\n  padding: styleValueTypes.px,\n  paddingTop: styleValueTypes.px,\n  paddingRight: styleValueTypes.px,\n  paddingBottom: styleValueTypes.px,\n  paddingLeft: styleValueTypes.px,\n  margin: styleValueTypes.px,\n  marginTop: styleValueTypes.px,\n  marginRight: styleValueTypes.px,\n  marginBottom: styleValueTypes.px,\n  marginLeft: styleValueTypes.px,\n  // Transform props\n  rotate: styleValueTypes.degrees,\n  rotateX: styleValueTypes.degrees,\n  rotateY: styleValueTypes.degrees,\n  rotateZ: styleValueTypes.degrees,\n  scale: styleValueTypes.scale,\n  scaleX: styleValueTypes.scale,\n  scaleY: styleValueTypes.scale,\n  scaleZ: styleValueTypes.scale,\n  skew: styleValueTypes.degrees,\n  skewX: styleValueTypes.degrees,\n  skewY: styleValueTypes.degrees,\n  distance: styleValueTypes.px,\n  translateX: styleValueTypes.px,\n  translateY: styleValueTypes.px,\n  translateZ: styleValueTypes.px,\n  x: styleValueTypes.px,\n  y: styleValueTypes.px,\n  z: styleValueTypes.px,\n  perspective: styleValueTypes.px,\n  transformPerspective: styleValueTypes.px,\n  opacity: styleValueTypes.alpha,\n  originX: styleValueTypes.progressPercentage,\n  originY: styleValueTypes.progressPercentage,\n  originZ: styleValueTypes.px,\n  // Misc\n  zIndex: int,\n  // SVG\n  fillOpacity: styleValueTypes.alpha,\n  strokeOpacity: styleValueTypes.alpha,\n  numOctaves: int\n};\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var _a;\n\n  const {\n    style,\n    vars,\n    transform,\n    transformKeys,\n    transformOrigin\n  } = state; // Empty the transformKeys array. As we're throwing out refs to its items\n  // this might not be as cheap as suspected. Maybe using the array as a buffer\n  // with a manual incrementation would be better.\n\n  transformKeys.length = 0; // Track whether we encounter any transform or transformOrigin values.\n\n  let hasTransform = false;\n  let hasTransformOrigin = false; // Does the calculated transform essentially equal \"none\"?\n\n  let transformIsNone = true;\n  /**\n   * Loop over all our latest animated values and decide whether to handle them\n   * as a style or CSS variable.\n   *\n   * Transforms and transform origins are kept seperately for further processing.\n   */\n\n  for (const key in latestValues) {\n    const value = latestValues[key];\n    /**\n     * If this is a CSS variable we don't do any further processing.\n     */\n\n    if (isCSSVariable$1(key)) {\n      vars[key] = value;\n      continue;\n    } // Convert the value to its default value type, ie 0 -> \"0px\"\n\n\n    const valueType = numberValueTypes[key];\n    const valueAsType = getValueAsType(value, valueType);\n\n    if (isTransformProp(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType;\n      transformKeys.push(key); // If we already know we have a non-default transform, early return\n\n      if (!transformIsNone) continue; // Otherwise check to see if this is a default transform\n\n      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0)) transformIsNone = false;\n    } else if (isTransformOriginProp(key)) {\n      transformOrigin[key] = valueAsType; // If this is a transform origin, flag and enable further transform-origin processing\n\n      hasTransformOrigin = true;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n\n  if (hasTransform) {\n    style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n  } else if (transformTemplate) {\n    style.transform = transformTemplate({}, \"\");\n  } else if (!latestValues.transform && style.transform) {\n    style.transform = \"none\";\n  }\n\n  if (hasTransformOrigin) {\n    style.transformOrigin = buildTransformOrigin(transformOrigin);\n  }\n}\n\nconst createHtmlRenderState = () => ({\n  style: {},\n  transform: {},\n  transformKeys: [],\n  transformOrigin: {},\n  vars: {}\n});\n\nfunction copyRawValuesOnly(target, source, props) {\n  for (const key in source) {\n    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nfunction useInitialMotionValues(_ref8, visualState, isStatic) {\n  let {\n    transformTemplate\n  } = _ref8;\n  return React.useMemo(() => {\n    const state = createHtmlRenderState();\n    buildHTMLStyles(state, visualState, {\n      enableHardwareAcceleration: !isStatic\n    }, transformTemplate);\n    const {\n      vars,\n      style\n    } = state;\n    return Object.assign(Object.assign({}, vars), style);\n  }, [visualState]);\n}\n\nfunction useStyle(props, visualState, isStatic) {\n  const styleProp = props.style || {};\n  let style = {};\n  /**\n   * Copy non-Motion Values straight into style\n   */\n\n  copyRawValuesOnly(style, styleProp, props);\n  Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n\n  if (props.transformValues) {\n    style = props.transformValues(style);\n  }\n\n  return style;\n}\n\nfunction useHTMLProps(props, visualState, isStatic) {\n  // The `any` isn't ideal but it is the type of createElement props argument\n  const htmlProps = {};\n  const style = useStyle(props, visualState, isStatic);\n\n  if (Boolean(props.drag) && props.dragListener !== false) {\n    // Disable the ghost element when a user drags\n    htmlProps.draggable = false; // Disable text selection\n\n    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = \"none\"; // Disable scrolling on the draggable direction\n\n    style.touchAction = props.drag === true ? \"none\" : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n  }\n\n  htmlProps.style = style;\n  return htmlProps;\n}\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\n\n\nconst validMotionProps = new Set([\"initial\", \"animate\", \"exit\", \"style\", \"variants\", \"transition\", \"transformTemplate\", \"transformValues\", \"custom\", \"inherit\", \"layout\", \"layoutId\", \"layoutDependency\", \"onLayoutAnimationStart\", \"onLayoutAnimationComplete\", \"onLayoutMeasure\", \"onBeforeLayoutMeasure\", \"onAnimationStart\", \"onAnimationComplete\", \"onUpdate\", \"onDragStart\", \"onDrag\", \"onDragEnd\", \"onMeasureDragConstraints\", \"onDirectionLock\", \"onDragTransitionEnd\", \"drag\", \"dragControls\", \"dragListener\", \"dragConstraints\", \"dragDirectionLock\", \"dragSnapToOrigin\", \"_dragX\", \"_dragY\", \"dragElastic\", \"dragMomentum\", \"dragPropagation\", \"dragTransition\", \"whileDrag\", \"onPan\", \"onPanStart\", \"onPanEnd\", \"onPanSessionStart\", \"onTap\", \"onTapStart\", \"onTapCancel\", \"onHoverStart\", \"onHoverEnd\", \"whileFocus\", \"whileTap\", \"whileHover\", \"whileInView\", \"onViewportEnter\", \"onViewportLeave\", \"viewport\", \"layoutScroll\"]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\n\nfunction isValidMotionProp(key) {\n  return validMotionProps.has(key);\n}\n\nlet shouldForward = key => !isValidMotionProp(key);\n\nfunction loadExternalIsValidProp(isValidProp) {\n  if (!isValidProp) return; // Explicitly filter our events\n\n  shouldForward = key => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\n\n\ntry {\n  /**\n   * We attempt to import this package but require won't be defined in esm environments, in that case\n   * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n   * in favour of explicit injection.\n   */\n  loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n} catch (_a) {// We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\n\nfunction filterProps(props, isDom, forwardMotionProps) {\n  const filteredProps = {};\n\n  for (const key in props) {\n    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners\n    props[\"draggable\"] && key.startsWith(\"onDrag\")) {\n      filteredProps[key] = props[key];\n    }\n  }\n\n  return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n  return typeof origin === \"string\" ? origin : styleValueTypes.px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\n\n\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n  const pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n  const pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n  return `${pxOriginX} ${pxOriginY}`;\n}\n\nconst dashKeys = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n};\nconst camelKeys = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\n\nfunction buildSVGPath(attrs, length) {\n  let spacing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let useDashCase = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  // Normalise path length by setting SVG attribute pathLength to 1\n  attrs.pathLength = 1; // We use dash case when setting attributes directly to the DOM node and camel case\n  // when defining props on a React component.\n\n  const keys = useDashCase ? dashKeys : camelKeys; // Build the dash offset\n\n  attrs[keys.offset] = styleValueTypes.px.transform(-offset); // Build the dash array\n\n  const pathLength = styleValueTypes.px.transform(length);\n  const pathSpacing = styleValueTypes.px.transform(spacing);\n  attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\n\n\nfunction buildSVGAttrs(state, _a, options, transformTemplate) {\n  var {\n    attrX,\n    attrY,\n    originX,\n    originY,\n    pathLength,\n    pathSpacing = 1,\n    pathOffset = 0\n  } = _a,\n      // This is object creation, which we try to avoid per-frame.\n  latest = tslib.__rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n\n  buildHTMLStyles(state, latest, options, transformTemplate);\n  state.attrs = state.style;\n  state.style = {};\n  const {\n    attrs,\n    style,\n    dimensions\n  } = state;\n  /**\n   * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n   * and copy it into style.\n   */\n\n  if (attrs.transform) {\n    if (dimensions) style.transform = attrs.transform;\n    delete attrs.transform;\n  } // Parse transformOrigin\n\n\n  if (dimensions && (originX !== undefined || originY !== undefined || style.transform)) {\n    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n  } // Treat x/y not as shortcuts but as actual attributes\n\n\n  if (attrX !== undefined) attrs.x = attrX;\n  if (attrY !== undefined) attrs.y = attrY; // Build SVG path if one has been defined\n\n  if (pathLength !== undefined) {\n    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n  }\n}\n\nconst createSvgRenderState = () => Object.assign(Object.assign({}, createHtmlRenderState()), {\n  attrs: {}\n});\n\nfunction useSVGProps(props, visualState) {\n  const visualProps = React.useMemo(() => {\n    const state = createSvgRenderState();\n    buildSVGAttrs(state, visualState, {\n      enableHardwareAcceleration: false\n    }, props.transformTemplate);\n    return Object.assign(Object.assign({}, state.attrs), {\n      style: Object.assign({}, state.style)\n    });\n  }, [visualState]);\n\n  if (props.style) {\n    const rawStyles = {};\n    copyRawValuesOnly(rawStyles, props.style, props);\n    visualProps.style = Object.assign(Object.assign({}, rawStyles), visualProps.style);\n  }\n\n  return visualProps;\n}\n\nfunction createUseRender() {\n  let forwardMotionProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  const useRender = (Component, props, projectionId, ref, _ref9, isStatic) => {\n    let {\n      latestValues\n    } = _ref9;\n    const useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Object.assign(Object.assign(Object.assign({}, filteredProps), visualProps), {\n      ref\n    });\n\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n\n    return React.createElement(Component, elementProps);\n  };\n\n  return useRender;\n}\n\nconst CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nconst REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\n\nconst camelToDash = str => str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n\nfunction renderHTML(element, _ref10, styleProp, projection) {\n  let {\n    style,\n    vars\n  } = _ref10;\n  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp)); // Loop over any CSS variables and assign those.\n\n  for (const key in vars) {\n    element.style.setProperty(key, vars[key]);\n  }\n}\n/**\n * A set of attribute names that are always read/written as camel case.\n */\n\n\nconst camelCaseAttributes = new Set([\"baseFrequency\", \"diffuseConstant\", \"kernelMatrix\", \"kernelUnitLength\", \"keySplines\", \"keyTimes\", \"limitingConeAngle\", \"markerHeight\", \"markerWidth\", \"numOctaves\", \"targetX\", \"targetY\", \"surfaceScale\", \"specularConstant\", \"specularExponent\", \"stdDeviation\", \"tableValues\", \"viewBox\", \"gradientTransform\", \"pathLength\"]);\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n  renderHTML(element, renderState, undefined, projection);\n\n  for (const key in renderState.attrs) {\n    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n  }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n  const {\n    style\n  } = props;\n  const newValues = {};\n\n  for (const key in style) {\n    if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n      newValues[key] = style[key];\n    }\n  }\n\n  return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n  const newValues = scrapeMotionValuesFromProps$1(props);\n\n  for (const key in props) {\n    if (isMotionValue(props[key])) {\n      const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n      newValues[targetKey] = props[key];\n    }\n  }\n\n  return newValues;\n}\n\nfunction isAnimationControls(v) {\n  return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nconst isKeyframesTarget = v => {\n  return Array.isArray(v);\n};\n\nconst isCustomValue = v => {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\n\nconst resolveFinalValueInKeyframes = v => {\n  // TODO maybe throw if v.length - 1 is placeholder token?\n  return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\n\n\nfunction resolveMotionValue(value) {\n  const unwrappedValue = isMotionValue(value) ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n\nfunction makeState(_ref11, props, context, presenceContext) {\n  let {\n    scrapeMotionValuesFromProps,\n    createRenderState,\n    onMount\n  } = _ref11;\n  const state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n\n  if (onMount) {\n    state.mount = instance => onMount(props, instance, state);\n  }\n\n  return state;\n}\n\nconst makeUseVisualState = config => (props, isStatic) => {\n  const context = React.useContext(MotionContext);\n  const presenceContext = React.useContext(PresenceContext);\n  return isStatic ? makeState(config, props, context, presenceContext) : useConstant(() => makeState(config, props, context, presenceContext));\n};\n\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  const values = {};\n  const blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n  const motionValues = scrapeMotionValues(props);\n\n  for (const key in motionValues) {\n    values[key] = resolveMotionValue(motionValues[key]);\n  }\n\n  let {\n    initial,\n    animate\n  } = props;\n  const isControllingVariants = checkIfControllingVariants(props);\n  const isVariantNode = checkIfVariantNode(props);\n\n  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {\n    initial !== null && initial !== void 0 ? initial : initial = context.initial;\n    animate !== null && animate !== void 0 ? animate : animate = context.animate;\n  }\n\n  const initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n  const variantToSet = initialAnimationIsBlocked ? animate : initial;\n\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(definition => {\n      const resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n\n      const {\n        transitionEnd,\n        transition\n      } = resolved,\n            target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n\n      for (const key in target) {\n        let valueTarget = target[key];\n\n        if (Array.isArray(valueTarget)) {\n          /**\n           * Take final keyframe if the initial animation is blocked because\n           * we want to initialise at the end of that blocked animation.\n           */\n          const index = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n\n      for (const key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n\n  return values;\n}\n\nconst svgMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n    onMount: (props, instance, _ref12) => {\n      let {\n        renderState,\n        latestValues\n      } = _ref12;\n\n      try {\n        renderState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n      } catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      buildSVGAttrs(renderState, latestValues, {\n        enableHardwareAcceleration: false\n      }, props.transformTemplate);\n      renderSVG(instance, renderState);\n    }\n  })\n};\nconst htmlMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n    createRenderState: createHtmlRenderState\n  })\n};\n\nfunction createDomMotionConfig(Component, _ref13, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n  let {\n    forwardMotionProps = false\n  } = _ref13;\n  const baseConfig = isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig;\n  return Object.assign(Object.assign({}, baseConfig), {\n    preloadedFeatures,\n    useRender: createUseRender(forwardMotionProps),\n    createVisualElement,\n    projectionNodeConstructor,\n    Component\n  });\n}\n\nexports.AnimationType = void 0;\n\n(function (AnimationType) {\n  AnimationType[\"Animate\"] = \"animate\";\n  AnimationType[\"Hover\"] = \"whileHover\";\n  AnimationType[\"Tap\"] = \"whileTap\";\n  AnimationType[\"Drag\"] = \"whileDrag\";\n  AnimationType[\"Focus\"] = \"whileFocus\";\n  AnimationType[\"InView\"] = \"whileInView\";\n  AnimationType[\"Exit\"] = \"exit\";\n})(exports.AnimationType || (exports.AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    passive: true\n  };\n  target.addEventListener(eventName, handler, options);\n  return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\n\n\nfunction useDomEvent(ref, eventName, handler, options) {\n  React.useEffect(() => {\n    const element = ref.current;\n\n    if (handler && element) {\n      return addDomEvent(element, eventName, handler, options);\n    }\n  }, [ref, eventName, handler, options]);\n}\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\n\n\nfunction useFocusGesture(_ref14) {\n  let {\n    whileFocus,\n    visualElement\n  } = _ref14;\n\n  const onFocus = () => {\n    var _a;\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, true);\n  };\n\n  const onBlur = () => {\n    var _a;\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, false);\n  };\n\n  useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n  useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n  // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n  if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof MouseEvent;\n}\n\nfunction isTouchEvent(event) {\n  const hasTouches = !!event.touches;\n  return hasTouches;\n}\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\n\n\nfunction filterPrimaryPointer(eventHandler) {\n  return event => {\n    const isMouseEvent = event instanceof MouseEvent;\n    const isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\n\nconst defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\n\nfunction pointFromTouch(e) {\n  let pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  const primaryTouch = e.touches[0] || e.changedTouches[0];\n  const point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction pointFromMouse(point) {\n  let pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction extractEventInfo(event) {\n  let pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\n\nconst wrapHandler = function (handler) {\n  let shouldFilterPrimaryPointer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  const listener = event => handler(event, extractEventInfo(event));\n\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n}; // We check for event support via functions in case they've been mocked by a testing suite.\n\n\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\n\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\n\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nconst mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nconst touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\n\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  } else if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  } else if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n\n  return name;\n}\n\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction usePointerEvent(ref, eventName, handler, options) {\n  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n  let lock = null;\n  return () => {\n    const openLock = () => {\n      lock = null;\n    };\n\n    if (lock === null) {\n      lock = name;\n      return openLock;\n    }\n\n    return false;\n  };\n}\n\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\n\nfunction getGlobalLock(drag) {\n  let lock = false;\n\n  if (drag === \"y\") {\n    lock = globalVerticalLock();\n  } else if (drag === \"x\") {\n    lock = globalHorizontalLock();\n  } else {\n    const openHorizontal = globalHorizontalLock();\n    const openVertical = globalVerticalLock();\n\n    if (openHorizontal && openVertical) {\n      lock = () => {\n        openHorizontal();\n        openVertical();\n      };\n    } else {\n      // Release the locks because we don't use them\n      if (openHorizontal) openHorizontal();\n      if (openVertical) openVertical();\n    }\n  }\n\n  return lock;\n}\n\nfunction isDragActive() {\n  // Check the gesture lock - if we get it, it means no drag gesture is active\n  // and we can safely fire the tap gesture.\n  const openGestureLock = getGlobalLock(true);\n  if (!openGestureLock) return true;\n  openGestureLock();\n  return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n  return (event, info) => {\n    var _a;\n\n    if (!isMouseEvent(event) || isDragActive()) return;\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Hover, isActive);\n    callback === null || callback === void 0 ? void 0 : callback(event, info);\n  };\n}\n\nfunction useHoverGesture(_ref15) {\n  let {\n    onHoverStart,\n    onHoverEnd,\n    whileHover,\n    visualElement\n  } = _ref15;\n  usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover ? createHoverEvent(visualElement, true, onHoverStart) : undefined, {\n    passive: !onHoverStart\n  });\n  usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover ? createHoverEvent(visualElement, false, onHoverEnd) : undefined, {\n    passive: !onHoverEnd\n  });\n}\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\n\n\nconst isNodeOrChild = (parent, child) => {\n  if (!child) {\n    return false;\n  } else if (parent === child) {\n    return true;\n  } else {\n    return isNodeOrChild(parent, child.parentElement);\n  }\n};\n\nfunction useUnmountEffect(callback) {\n  return React.useEffect(() => () => callback(), []);\n}\n/**\n * @param handlers -\n * @internal\n */\n\n\nfunction useTapGesture(_ref16) {\n  let {\n    onTap,\n    onTapStart,\n    onTapCancel,\n    whileTap,\n    visualElement\n  } = _ref16;\n  const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n  const isPressing = React.useRef(false);\n  const cancelPointerEndListeners = React.useRef(null);\n  /**\n   * Only set listener to passive if there are no external listeners.\n   */\n\n  const eventOptions = {\n    passive: !(onTapStart || onTap || onTapCancel || onPointerDown)\n  };\n\n  function removePointerEndListener() {\n    var _a;\n\n    (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n    cancelPointerEndListeners.current = null;\n  }\n\n  function checkPointerEnd() {\n    var _a;\n\n    removePointerEndListener();\n    isPressing.current = false;\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, false);\n    return !isDragActive();\n  }\n\n  function onPointerUp(event, info) {\n    if (!checkPointerEnd()) return;\n    /**\n     * We only count this as a tap gesture if the event.target is the same\n     * as, or a child of, this component's element\n     */\n\n    !isNodeOrChild(visualElement.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n  }\n\n  function onPointerCancel(event, info) {\n    if (!checkPointerEnd()) return;\n    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n  }\n\n  function onPointerDown(event, info) {\n    var _a;\n\n    removePointerEndListener();\n    if (isPressing.current) return;\n    isPressing.current = true;\n    cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, true);\n    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n  }\n\n  usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n  useUnmountEffect(removePointerEndListener);\n}\n\nconst warned = new Set();\n\nfunction warnOnce(condition, message, element) {\n  if (condition || warned.has(message)) return;\n  console.warn(message);\n  if (element) console.warn(element);\n  warned.add(message);\n}\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\n\n\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\n\nconst observers = new WeakMap();\n\nconst fireObserverCallback = entry => {\n  var _a;\n\n  (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n};\n\nconst fireAllObserverCallbacks = entries => {\n  entries.forEach(fireObserverCallback);\n};\n\nfunction initIntersectionObserver(_a) {\n  var {\n    root\n  } = _a,\n      options = tslib.__rest(_a, [\"root\"]);\n\n  const lookupRoot = root || document;\n  /**\n   * If we don't have an observer lookup map for this root, create one.\n   */\n\n  if (!observers.has(lookupRoot)) {\n    observers.set(lookupRoot, {});\n  }\n\n  const rootObservers = observers.get(lookupRoot);\n  const key = JSON.stringify(options);\n  /**\n   * If we don't have an observer for this combination of root and settings,\n   * create one.\n   */\n\n  if (!rootObservers[key]) {\n    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, Object.assign({\n      root\n    }, options));\n  }\n\n  return rootObservers[key];\n}\n\nfunction observeIntersection(element, options, callback) {\n  const rootInteresectionObserver = initIntersectionObserver(options);\n  observerCallbacks.set(element, callback);\n  rootInteresectionObserver.observe(element);\n  return () => {\n    observerCallbacks.delete(element);\n    rootInteresectionObserver.unobserve(element);\n  };\n}\n\nfunction useViewport(_ref17) {\n  let {\n    visualElement,\n    whileInView,\n    onViewportEnter,\n    onViewportLeave,\n    viewport = {}\n  } = _ref17;\n  const state = React.useRef({\n    hasEnteredView: false,\n    isInView: false\n  });\n  let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n  if (viewport.once && state.current.hasEnteredView) shouldObserve = false;\n  const useObserver = typeof IntersectionObserver === \"undefined\" ? useMissingIntersectionObserver : useIntersectionObserver;\n  useObserver(shouldObserve, state.current, visualElement, viewport);\n}\n\nconst thresholdNames = {\n  some: 0,\n  all: 1\n};\n\nfunction useIntersectionObserver(shouldObserve, state, visualElement, _ref18) {\n  let {\n    root,\n    margin: rootMargin,\n    amount = \"some\",\n    once\n  } = _ref18;\n  React.useEffect(() => {\n    if (!shouldObserve) return;\n    const options = {\n      root: root === null || root === void 0 ? void 0 : root.current,\n      rootMargin,\n      threshold: typeof amount === \"number\" ? amount : thresholdNames[amount]\n    };\n\n    const intersectionCallback = entry => {\n      var _a;\n\n      const {\n        isIntersecting\n      } = entry;\n      /**\n       * If there's been no change in the viewport state, early return.\n       */\n\n      if (state.isInView === isIntersecting) return;\n      state.isInView = isIntersecting;\n      /**\n       * Handle hasEnteredView. If this is only meant to run once, and\n       * element isn't visible, early return. Otherwise set hasEnteredView to true.\n       */\n\n      if (once && !isIntersecting && state.hasEnteredView) {\n        return;\n      } else if (isIntersecting) {\n        state.hasEnteredView = true;\n      }\n\n      (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, isIntersecting);\n      /**\n       * Use the latest committed props rather than the ones in scope\n       * when this observer is created\n       */\n\n      const props = visualElement.getProps();\n      const callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;\n      callback === null || callback === void 0 ? void 0 : callback(entry);\n    };\n\n    return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n  }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\n\n\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, _ref19) {\n  let {\n    fallback = true\n  } = _ref19;\n  React.useEffect(() => {\n    if (!shouldObserve || !fallback) return;\n\n    if (env !== \"production\") {\n      warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n    }\n    /**\n     * Fire this in an rAF because, at this point, the animation state\n     * won't have flushed for the first time and there's certain logic in\n     * there that behaves differently on the initial animation.\n     *\n     * This hook should be quite rarely called so setting this in an rAF\n     * is preferred to changing the behaviour of the animation state.\n     */\n\n\n    requestAnimationFrame(() => {\n      var _a;\n\n      state.hasEnteredView = true;\n      const {\n        onViewportEnter\n      } = visualElement.getProps();\n      onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n      (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, true);\n    });\n  }, [shouldObserve]);\n}\n\nconst makeRenderlessComponent = hook => props => {\n  hook(props);\n  return null;\n};\n\nconst gestureAnimations = {\n  inView: makeRenderlessComponent(useViewport),\n  tap: makeRenderlessComponent(useTapGesture),\n  focus: makeRenderlessComponent(useFocusGesture),\n  hover: makeRenderlessComponent(useHoverGesture)\n};\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\n\nfunction usePresence() {\n  const context = React.useContext(PresenceContext);\n  if (context === null) return [true, null];\n  const {\n    isPresent,\n    onExitComplete,\n    register\n  } = context; // It's safe to call the following hooks conditionally (after an early return) because the context will always\n  // either be null or non-null for the lifespan of the component.\n  // Replace with useId when released in React\n\n  const id = React.useId();\n  React.useEffect(() => register(id), []);\n\n  const safeToRemove = () => onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id);\n\n  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\n\n\nfunction useIsPresent() {\n  return isPresent(React.useContext(PresenceContext));\n}\n\nfunction isPresent(context) {\n  return context === null ? true : context.isPresent;\n}\n\nfunction shallowCompare(next, prev) {\n  if (!Array.isArray(prev)) return false;\n  const prevLength = prev.length;\n  if (prevLength !== next.length) return false;\n\n  for (let i = 0; i < prevLength; i++) {\n    if (prev[i] !== next[i]) return false;\n  }\n\n  return true;\n}\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n\n\nconst secondsToMilliseconds = seconds => seconds * 1000;\n\nconst easingLookup = {\n  linear: popmotion.linear,\n  easeIn: popmotion.easeIn,\n  easeInOut: popmotion.easeInOut,\n  easeOut: popmotion.easeOut,\n  circIn: popmotion.circIn,\n  circInOut: popmotion.circInOut,\n  circOut: popmotion.circOut,\n  backIn: popmotion.backIn,\n  backInOut: popmotion.backInOut,\n  backOut: popmotion.backOut,\n  anticipate: popmotion.anticipate,\n  bounceIn: popmotion.bounceIn,\n  bounceInOut: popmotion.bounceInOut,\n  bounceOut: popmotion.bounceOut\n};\n\nconst easingDefinitionToFunction = definition => {\n  if (Array.isArray(definition)) {\n    // If cubic bezier definition, create bezier curve\n    heyListen.invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n    const [x1, y1, x2, y2] = definition;\n    return popmotion.cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    // Else lookup from table\n    heyListen.invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n    return easingLookup[definition];\n  }\n\n  return definition;\n};\n\nconst isEasingArray = ease => {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\n\n\nconst isAnimatable = (key, value) => {\n  // If the list of keys tat might be non-animatable grows, replace with Set\n  if (key === \"zIndex\") return false; // If it's a number or a keyframes array, we can animate it. We might at some point\n  // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n  // but for now lets leave it like this for performance reasons\n\n  if (typeof value === \"number\" || Array.isArray(value)) return true;\n\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst underDampedSpring = () => ({\n  type: \"spring\",\n  stiffness: 500,\n  damping: 25,\n  restSpeed: 10\n});\n\nconst criticallyDampedSpring = to => ({\n  type: \"spring\",\n  stiffness: 550,\n  damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n  restSpeed: 10\n});\n\nconst linearTween = () => ({\n  type: \"keyframes\",\n  ease: \"linear\",\n  duration: 0.3\n});\n\nconst keyframes = values => ({\n  type: \"keyframes\",\n  duration: 0.8,\n  values\n});\n\nconst defaultTransitions = {\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: criticallyDampedSpring,\n  scaleY: criticallyDampedSpring,\n  scale: criticallyDampedSpring,\n  opacity: linearTween,\n  backgroundColor: linearTween,\n  color: linearTween,\n  default: criticallyDampedSpring\n};\n\nconst getDefaultTransition = (valueKey, to) => {\n  let transitionFactory;\n\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n\n  return Object.assign({\n    to\n  }, transitionFactory(to));\n};\n/**\n * A map of default value types for common values\n */\n\n\nconst defaultValueTypes = Object.assign(Object.assign({}, numberValueTypes), {\n  // Color props\n  color: styleValueTypes.color,\n  backgroundColor: styleValueTypes.color,\n  outlineColor: styleValueTypes.color,\n  fill: styleValueTypes.color,\n  stroke: styleValueTypes.color,\n  // Border props\n  borderColor: styleValueTypes.color,\n  borderTopColor: styleValueTypes.color,\n  borderRightColor: styleValueTypes.color,\n  borderBottomColor: styleValueTypes.color,\n  borderLeftColor: styleValueTypes.color,\n  filter: styleValueTypes.filter,\n  WebkitFilter: styleValueTypes.filter\n});\n/**\n * Gets the default ValueType for the provided value key\n */\n\nconst getDefaultValueType = key => defaultValueTypes[key];\n\nfunction getAnimatableNone(key, value) {\n  var _a;\n\n  let defaultValueType = getDefaultValueType(key);\n  if (defaultValueType !== styleValueTypes.filter) defaultValueType = styleValueTypes.complex; // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n\n  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nconst instantAnimationState = {\n  current: false\n};\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\n\nfunction isTransitionDefined(_a) {\n  var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n\n  return !!Object.keys(transition).length;\n}\n\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\n\nfunction convertTransitionToAnimationOptions(_a) {\n  var {\n    ease,\n    times,\n    yoyo,\n    flip,\n    loop\n  } = _a,\n      transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n\n  const options = Object.assign({}, transition);\n  if (times) options[\"offset\"] = times;\n  /**\n   * Convert any existing durations from seconds to milliseconds\n   */\n\n  if (transition.duration) options[\"duration\"] = secondsToMilliseconds(transition.duration);\n  if (transition.repeatDelay) options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n  /**\n   * Map easing names to Popmotion's easing functions\n   */\n\n  if (ease) {\n    options[\"ease\"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  }\n  /**\n   * Support legacy transition API\n   */\n\n\n  if (transition.type === \"tween\") options.type = \"keyframes\";\n  /**\n   * TODO: These options are officially removed from the API.\n   */\n\n  if (yoyo || loop || flip) {\n    heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n    legacyRepeatWarning = true;\n\n    if (yoyo) {\n      options.repeatType = \"reverse\";\n    } else if (loop) {\n      options.repeatType = \"loop\";\n    } else if (flip) {\n      options.repeatType = \"mirror\";\n    }\n\n    options.repeat = loop || yoyo || flip || transition.repeat;\n  }\n  /**\n   * TODO: Popmotion 9 has the ability to automatically detect whether to use\n   * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n   * It'd be good to introduce a similar thing here.\n   */\n\n\n  if (transition.type !== \"spring\") options.type = \"keyframes\";\n  return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\n\n\nfunction getDelayFromTransition(transition, key) {\n  var _a, _b;\n\n  const valueTransition = getValueTransition(transition, key) || {};\n  return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\n\nfunction hydrateKeyframes(options) {\n  if (Array.isArray(options.to) && options.to[0] === null) {\n    options.to = [...options.to];\n    options.to[0] = options.from;\n  }\n\n  return options;\n}\n\nfunction getPopmotionAnimationOptions(transition, options, key) {\n  var _a;\n\n  if (Array.isArray(options.to)) {\n    (_a = transition.duration) !== null && _a !== void 0 ? _a : transition.duration = 0.8;\n  }\n\n  hydrateKeyframes(options);\n  /**\n   * Get a default transition if none is determined to be defined.\n   */\n\n  if (!isTransitionDefined(transition)) {\n    transition = Object.assign(Object.assign({}, transition), getDefaultTransition(key, options.to));\n  }\n\n  return Object.assign(Object.assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\n\n\nfunction getAnimation(key, value, target, transition, onComplete) {\n  var _a;\n\n  const valueTransition = getValueTransition(transition, key);\n  let origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n  const isTargetAnimatable = isAnimatable(key, target);\n\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n    /**\n     * If we're trying to animate from \"none\", try and get an animatable version\n     * of the target. This could be improved to work both ways.\n     */\n    origin = getAnimatableNone(key, target);\n  } else if (isZero(origin) && typeof target === \"string\") {\n    origin = getZeroUnit(target);\n  } else if (!Array.isArray(target) && isZero(target) && typeof origin === \"string\") {\n    target = getZeroUnit(origin);\n  }\n\n  const isOriginAnimatable = isAnimatable(key, origin);\n  heyListen.warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n\n  function start() {\n    const options = {\n      from: origin,\n      to: target,\n      velocity: value.getVelocity(),\n      onComplete,\n      onUpdate: v => value.set(v)\n    };\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? popmotion.inertia(Object.assign(Object.assign({}, options), valueTransition)) : popmotion.animate(Object.assign(Object.assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), {\n      onUpdate: v => {\n        var _a;\n\n        options.onUpdate(v);\n        (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n      },\n      onComplete: () => {\n        var _a;\n\n        options.onComplete();\n        (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n      }\n    }));\n  }\n\n  function set() {\n    var _a, _b;\n\n    const finalTarget = resolveFinalValueInKeyframes(target);\n    value.set(finalTarget);\n    onComplete();\n    (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);\n    (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);\n    return {\n      stop: () => {}\n    };\n  }\n\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\n}\n\nfunction isZero(value) {\n  return value === 0 || typeof value === \"string\" && parseFloat(value) === 0 && value.indexOf(\" \") === -1;\n}\n\nfunction getZeroUnit(potentialUnitType) {\n  return typeof potentialUnitType === \"number\" ? 0 : getAnimatableNone(\"\", potentialUnitType);\n}\n\nfunction getValueTransition(transition, key) {\n  return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\n\n\nfunction startAnimation(key, value, target) {\n  let transition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (instantAnimationState.current) {\n    transition = {\n      type: false\n    };\n  }\n\n  return value.start(onComplete => {\n    let delayTimer;\n    let controls;\n    const animation = getAnimation(key, value, target, transition, onComplete);\n    const delay = getDelayFromTransition(transition, key);\n\n    const start = () => controls = animation();\n\n    if (delay) {\n      delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));\n    } else {\n      start();\n    }\n\n    return () => {\n      clearTimeout(delayTimer);\n      controls === null || controls === void 0 ? void 0 : controls.stop();\n    };\n  });\n}\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\n\n\nconst isNumericalString = v => /^\\-?\\d*\\.?\\d+$/.test(v);\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\n\n\nconst isZeroValueString = v => /^0[^.\\s]+$/.test(v);\n\nfunction addUniqueItem(arr, item) {\n  if (arr.indexOf(item) === -1) arr.push(item);\n}\n\nfunction removeItem(arr, item) {\n  const index = arr.indexOf(item);\n  if (index > -1) arr.splice(index, 1);\n} // Adapted from array-move\n\n\nfunction moveItem(_ref20, fromIndex, toIndex) {\n  let [...arr] = _ref20;\n  const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n\n  if (startIndex >= 0 && startIndex < arr.length) {\n    const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n    const [item] = arr.splice(fromIndex, 1);\n    arr.splice(endIndex, 0, item);\n  }\n\n  return arr;\n}\n\nclass SubscriptionManager {\n  constructor() {\n    this.subscriptions = [];\n  }\n\n  add(handler) {\n    addUniqueItem(this.subscriptions, handler);\n    return () => removeItem(this.subscriptions, handler);\n  }\n\n  notify(a, b, c) {\n    const numSubscriptions = this.subscriptions.length;\n    if (!numSubscriptions) return;\n\n    if (numSubscriptions === 1) {\n      /**\n       * If there's only a single handler we can just call it without invoking a loop.\n       */\n      this.subscriptions[0](a, b, c);\n    } else {\n      for (let i = 0; i < numSubscriptions; i++) {\n        /**\n         * Check whether the handler exists before firing as it's possible\n         * the subscriptions were modified during this loop running.\n         */\n        const handler = this.subscriptions[i];\n        handler && handler(a, b, c);\n      }\n    }\n  }\n\n  getSize() {\n    return this.subscriptions.length;\n  }\n\n  clear() {\n    this.subscriptions.length = 0;\n  }\n\n}\n\nconst isFloat = value => {\n  return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\n\n\nclass MotionValue {\n  /**\n   * @param init - The initiating value\n   * @param config - Optional configuration options\n   *\n   * -  `transformer`: A function to transform incoming values with.\n   *\n   * @internal\n   */\n  constructor(init) {\n    var _this = this;\n\n    /**\n     * This will be replaced by the build step with the latest version number.\n     * When MotionValues are provided to motion components, warn if versions are mixed.\n     */\n    this.version = \"7.2.0\";\n    /**\n     * Duration, in milliseconds, since last updating frame.\n     *\n     * @internal\n     */\n\n    this.timeDelta = 0;\n    /**\n     * Timestamp of the last time this `MotionValue` was updated.\n     *\n     * @internal\n     */\n\n    this.lastUpdated = 0;\n    /**\n     * Functions to notify when the `MotionValue` updates.\n     *\n     * @internal\n     */\n\n    this.updateSubscribers = new SubscriptionManager();\n    /**\n     * Functions to notify when the velocity updates.\n     *\n     * @internal\n     */\n\n    this.velocityUpdateSubscribers = new SubscriptionManager();\n    /**\n     * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n     *\n     * @internal\n     */\n\n    this.renderSubscribers = new SubscriptionManager();\n    /**\n     * Tracks whether this value can output a velocity. Currently this is only true\n     * if the value is numerical, but we might be able to widen the scope here and support\n     * other value types.\n     *\n     * @internal\n     */\n\n    this.canTrackVelocity = false;\n\n    this.updateAndNotify = function (v) {\n      let render = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      _this.prev = _this.current;\n      _this.current = v; // Update timestamp\n\n      const {\n        delta,\n        timestamp\n      } = sync.getFrameData();\n\n      if (_this.lastUpdated !== timestamp) {\n        _this.timeDelta = delta;\n        _this.lastUpdated = timestamp;\n        sync__default[\"default\"].postRender(_this.scheduleVelocityCheck);\n      } // Update update subscribers\n\n\n      if (_this.prev !== _this.current) {\n        _this.updateSubscribers.notify(_this.current);\n      } // Update velocity subscribers\n\n\n      if (_this.velocityUpdateSubscribers.getSize()) {\n        _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n      } // Update render subscribers\n\n\n      if (render) {\n        _this.renderSubscribers.notify(_this.current);\n      }\n    };\n    /**\n     * Schedule a velocity check for the next frame.\n     *\n     * This is an instanced and bound function to prevent generating a new\n     * function once per frame.\n     *\n     * @internal\n     */\n\n\n    this.scheduleVelocityCheck = () => sync__default[\"default\"].postRender(this.velocityCheck);\n    /**\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\n     * This ensures velocity calculations return `0`.\n     *\n     * This is an instanced and bound function to prevent generating a new\n     * function once per frame.\n     *\n     * @internal\n     */\n\n\n    this.velocityCheck = _ref21 => {\n      let {\n        timestamp\n      } = _ref21;\n\n      if (timestamp !== this.lastUpdated) {\n        this.prev = this.current;\n        this.velocityUpdateSubscribers.notify(this.getVelocity());\n      }\n    };\n\n    this.hasAnimated = false;\n    this.prev = this.current = init;\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   *\n   * When calling `onChange` inside a React component, it should be wrapped with the\n   * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n   * from the `useEffect` function to ensure you don't add duplicate subscribers..\n   *\n   * ```jsx\n   * export const MyComponent = () => {\n   *   const x = useMotionValue(0)\n   *   const y = useMotionValue(0)\n   *   const opacity = useMotionValue(1)\n   *\n   *   useEffect(() => {\n   *     function updateOpacity() {\n   *       const maxXY = Math.max(x.get(), y.get())\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n   *       opacity.set(newOpacity)\n   *     }\n   *\n   *     const unsubscribeX = x.onChange(updateOpacity)\n   *     const unsubscribeY = y.onChange(updateOpacity)\n   *\n   *     return () => {\n   *       unsubscribeX()\n   *       unsubscribeY()\n   *     }\n   *   }, [])\n   *\n   *   return <motion.div style={{ x }} />\n   * }\n   * ```\n   *\n   * @privateRemarks\n   *\n   * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n   *\n   * ```jsx\n   * useOnChange(x, () => {})\n   * ```\n   *\n   * @param subscriber - A function that receives the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @public\n   */\n\n\n  onChange(subscription) {\n    return this.updateSubscribers.add(subscription);\n  }\n\n  clearListeners() {\n    this.updateSubscribers.clear();\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` requests a render.\n   *\n   * @param subscriber - A function that's provided the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @internal\n   */\n\n\n  onRenderRequest(subscription) {\n    // Render immediately\n    subscription(this.get());\n    return this.renderSubscribers.add(subscription);\n  }\n  /**\n   * Attaches a passive effect to the `MotionValue`.\n   *\n   * @internal\n   */\n\n\n  attach(passiveEffect) {\n    this.passiveEffect = passiveEffect;\n  }\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @remarks\n   *\n   * ```jsx\n   * const x = useMotionValue(0)\n   * x.set(10)\n   * ```\n   *\n   * @param latest - Latest value to set.\n   * @param render - Whether to notify render subscribers. Defaults to `true`\n   *\n   * @public\n   */\n\n\n  set(v) {\n    let render = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!render || !this.passiveEffect) {\n      this.updateAndNotify(v, render);\n    } else {\n      this.passiveEffect(v, this.updateAndNotify);\n    }\n  }\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   *\n   * @public\n   */\n\n\n  get() {\n    return this.current;\n  }\n  /**\n   * @public\n   */\n\n\n  getPrevious() {\n    return this.prev;\n  }\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   *\n   * @public\n   */\n\n\n  getVelocity() {\n    // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n    return this.canTrackVelocity ? // These casts could be avoided if parseFloat would be typed better\n    popmotion.velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  }\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   *\n   * ```jsx\n   * value.start()\n   * ```\n   *\n   * @param animation - A function that starts the provided animation\n   *\n   * @internal\n   */\n\n\n  start(animation) {\n    this.stop();\n    return new Promise(resolve => {\n      this.hasAnimated = true;\n      this.stopAnimation = animation(resolve);\n    }).then(() => this.clearAnimation());\n  }\n  /**\n   * Stop the currently active animation.\n   *\n   * @public\n   */\n\n\n  stop() {\n    if (this.stopAnimation) this.stopAnimation();\n    this.clearAnimation();\n  }\n  /**\n   * Returns `true` if this value is currently animating.\n   *\n   * @public\n   */\n\n\n  isAnimating() {\n    return !!this.stopAnimation;\n  }\n\n  clearAnimation() {\n    this.stopAnimation = null;\n  }\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   *\n   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n   * created a `MotionValue` via the `motionValue` function.\n   *\n   * @public\n   */\n\n\n  destroy() {\n    this.updateSubscribers.clear();\n    this.renderSubscribers.clear();\n    this.stop();\n  }\n\n}\n\nfunction motionValue(init) {\n  return new MotionValue(init);\n}\n/**\n * Tests a provided value against a ValueType\n */\n\n\nconst testValueType = v => type => type.test(v);\n/**\n * ValueType for \"auto\"\n */\n\n\nconst auto = {\n  test: v => v === \"auto\",\n  parse: v => v\n};\n/**\n * A list of value types commonly used for dimensions\n */\n\nconst dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\n\nconst findDimensionValueType = v => dimensionValueTypes.find(testValueType(v));\n/**\n * A list of all ValueTypes\n */\n\n\nconst valueTypes = [...dimensionValueTypes, styleValueTypes.color, styleValueTypes.complex];\n/**\n * Tests a value against the list of ValueTypes\n */\n\nconst findValueType = v => valueTypes.find(testValueType(v));\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\n\n\nfunction setMotionValue(visualElement, key, value) {\n  if (visualElement.hasValue(key)) {\n    visualElement.getValue(key).set(value);\n  } else {\n    visualElement.addValue(key, motionValue(value));\n  }\n}\n\nfunction setTarget(visualElement, definition) {\n  const resolved = resolveVariant(visualElement, definition);\n\n  let _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {},\n      {\n    transitionEnd = {},\n    transition = {}\n  } = _a,\n      target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n\n  target = Object.assign(Object.assign({}, target), transitionEnd);\n\n  for (const key in target) {\n    const value = resolveFinalValueInKeyframes(target[key]);\n    setMotionValue(visualElement, key, value);\n  }\n}\n\nfunction setVariants(visualElement, variantLabels) {\n  const reversedLabels = [...variantLabels].reverse();\n  reversedLabels.forEach(key => {\n    var _a;\n\n    const variant = visualElement.getVariant(key);\n    variant && setTarget(visualElement, variant);\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(child => {\n      setVariants(child, variantLabels);\n    });\n  });\n}\n\nfunction setValues(visualElement, definition) {\n  if (Array.isArray(definition)) {\n    return setVariants(visualElement, definition);\n  } else if (typeof definition === \"string\") {\n    return setVariants(visualElement, [definition]);\n  } else {\n    setTarget(visualElement, definition);\n  }\n}\n\nfunction checkTargetForNewValues(visualElement, target, origin) {\n  var _a, _b, _c;\n\n  var _d;\n\n  const newValueKeys = Object.keys(target).filter(key => !visualElement.hasValue(key));\n  const numNewValues = newValueKeys.length;\n  if (!numNewValues) return;\n\n  for (let i = 0; i < numNewValues; i++) {\n    const key = newValueKeys[i];\n    const targetValue = target[key];\n    let value = null;\n    /**\n     * If the target is a series of keyframes, we can use the first value\n     * in the array. If this first value is null, we'll still need to read from the DOM.\n     */\n\n    if (Array.isArray(targetValue)) {\n      value = targetValue[0];\n    }\n    /**\n     * If the target isn't keyframes, or the first keyframe was null, we need to\n     * first check if an origin value was explicitly defined in the transition as \"from\",\n     * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n     */\n\n\n    if (value === null) {\n      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n    }\n    /**\n     * If value is still undefined or null, ignore it. Preferably this would throw,\n     * but this was causing issues in Framer.\n     */\n\n\n    if (value === undefined || value === null) continue;\n\n    if (typeof value === \"string\" && (isNumericalString(value) || isZeroValueString(value))) {\n      // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n      value = parseFloat(value);\n    } else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n      value = getAnimatableNone(key, targetValue);\n    }\n\n    visualElement.addValue(key, motionValue(value));\n    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;\n    visualElement.setBaseTarget(key, value);\n  }\n}\n\nfunction getOriginFromTransition(key, transition) {\n  if (!transition) return;\n  const valueTransition = transition[key] || transition[\"default\"] || transition;\n  return valueTransition.from;\n}\n\nfunction getOrigin(target, transition, visualElement) {\n  var _a, _b;\n\n  const origin = {};\n\n  for (const key in target) {\n    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n  }\n\n  return origin;\n}\n\nfunction isWillChangeMotionValue(value) {\n  return Boolean(isMotionValue(value) && value.add);\n}\n\nfunction animateVisualElement(visualElement, definition) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  visualElement.notifyAnimationStart(definition);\n  let animation;\n\n  if (Array.isArray(definition)) {\n    const animations = definition.map(variant => animateVariant(visualElement, variant, options));\n    animation = Promise.all(animations);\n  } else if (typeof definition === \"string\") {\n    animation = animateVariant(visualElement, definition, options);\n  } else {\n    const resolvedDefinition = typeof definition === \"function\" ? resolveVariant(visualElement, definition, options.custom) : definition;\n    animation = animateTarget(visualElement, resolvedDefinition, options);\n  }\n\n  return animation.then(() => visualElement.notifyAnimationComplete(definition));\n}\n\nfunction animateVariant(visualElement, variant) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _a;\n\n  const resolved = resolveVariant(visualElement, variant, options.custom);\n  let {\n    transition = visualElement.getDefaultTransition() || {}\n  } = resolved || {};\n\n  if (options.transitionOverride) {\n    transition = options.transitionOverride;\n  }\n  /**\n   * If we have a variant, create a callback that runs it as an animation.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n\n  const getAnimation = resolved ? () => animateTarget(visualElement, resolved, options) : () => Promise.resolve();\n  /**\n   * If we have children, create a callback that runs all their animations.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n  const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function () {\n    let forwardDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const {\n      delayChildren = 0,\n      staggerChildren,\n      staggerDirection\n    } = transition;\n    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n  } : () => Promise.resolve();\n  /**\n   * If the transition explicitly defines a \"when\" option, we need to resolve either\n   * this animation or all children animations before playing the other.\n   */\n\n  const {\n    when\n  } = transition;\n\n  if (when) {\n    const [first, last] = when === \"beforeChildren\" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];\n    return first().then(last);\n  } else {\n    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction animateTarget(visualElement, definition) {\n  let {\n    delay = 0,\n    transitionOverride,\n    type\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _a;\n\n  let _b = visualElement.makeTargetAnimatable(definition),\n      {\n    transition = visualElement.getDefaultTransition(),\n    transitionEnd\n  } = _b,\n      target = tslib.__rest(_b, [\"transition\", \"transitionEnd\"]);\n\n  const willChange = visualElement.getValue(\"willChange\");\n  if (transitionOverride) transition = transitionOverride;\n  const animations = [];\n  const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n\n  for (const key in target) {\n    const value = visualElement.getValue(key);\n    const valueTarget = target[key];\n\n    if (!value || valueTarget === undefined || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {\n      continue;\n    }\n\n    let valueTransition = Object.assign({\n      delay\n    }, transition);\n    /**\n     * Make animation instant if this is a transform prop and we should reduce motion.\n     */\n\n    if (visualElement.shouldReduceMotion && isTransformProp(key)) {\n      valueTransition = Object.assign(Object.assign({}, valueTransition), {\n        type: false,\n        delay: 0\n      });\n    }\n\n    let animation = startAnimation(key, value, valueTarget, valueTransition);\n\n    if (isWillChangeMotionValue(willChange)) {\n      willChange.add(key);\n      animation = animation.then(() => willChange.remove(key));\n    }\n\n    animations.push(animation);\n  }\n\n  return Promise.all(animations).then(() => {\n    transitionEnd && setTarget(visualElement, transitionEnd);\n  });\n}\n\nfunction animateChildren(visualElement, variant) {\n  let delayChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let staggerChildren = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let staggerDirection = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  let options = arguments.length > 5 ? arguments[5] : undefined;\n  const animations = [];\n  const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n  const generateStaggerDuration = staggerDirection === 1 ? function () {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return i * staggerChildren;\n  } : function () {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return maxStaggerDuration - i * staggerChildren;\n  };\n  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach((child, i) => {\n    animations.push(animateVariant(child, variant, Object.assign(Object.assign({}, options), {\n      delay: delayChildren + generateStaggerDuration(i)\n    })).then(() => child.notifyAnimationComplete(variant)));\n  });\n  return Promise.all(animations);\n}\n\nfunction stopAnimation(visualElement) {\n  visualElement.forEachValue(value => value.stop());\n}\n\nfunction sortByTreeOrder(a, b) {\n  return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\n\n\nfunction shouldBlockAnimation(_ref22, key) {\n  let {\n    protectedKeys,\n    needsAnimating\n  } = _ref22;\n  const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n  needsAnimating[key] = false;\n  return shouldBlock;\n}\n\nconst variantPriorityOrder = [exports.AnimationType.Animate, exports.AnimationType.InView, exports.AnimationType.Focus, exports.AnimationType.Hover, exports.AnimationType.Tap, exports.AnimationType.Drag, exports.AnimationType.Exit];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\n\nfunction animateList(visualElement) {\n  return animations => Promise.all(animations.map(_ref23 => {\n    let {\n      animation,\n      options\n    } = _ref23;\n    return animateVisualElement(visualElement, animation, options);\n  }));\n}\n\nfunction createAnimationState(visualElement) {\n  let animate = animateList(visualElement);\n  const state = createState();\n  let isInitialRender = true;\n  /**\n   * This function will be used to reduce the animation definitions for\n   * each active animation type into an object of resolved values for it.\n   */\n\n  const buildResolvedTypeValues = (acc, definition) => {\n    const resolved = resolveVariant(visualElement, definition);\n\n    if (resolved) {\n      const {\n        transition,\n        transitionEnd\n      } = resolved,\n            target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n\n      acc = Object.assign(Object.assign(Object.assign({}, acc), target), transitionEnd);\n    }\n\n    return acc;\n  };\n  /**\n   * This just allows us to inject mocked animation functions\n   * @internal\n   */\n\n\n  function setAnimateFunction(makeAnimator) {\n    animate = makeAnimator(visualElement);\n  }\n  /**\n   * When we receive new props, we need to:\n   * 1. Create a list of protected keys for each type. This is a directory of\n   *    value keys that are currently being \"handled\" by types of a higher priority\n   *    so that whenever an animation is played of a given type, these values are\n   *    protected from being animated.\n   * 2. Determine if an animation type needs animating.\n   * 3. Determine if any values have been removed from a type and figure out\n   *    what to animate those to.\n   */\n\n\n  function animateChanges(options, changedActiveType) {\n    var _a;\n\n    const props = visualElement.getProps();\n    const context = visualElement.getVariantContext(true) || {};\n    /**\n     * A list of animations that we'll build into as we iterate through the animation\n     * types. This will get executed at the end of the function.\n     */\n\n    const animations = [];\n    /**\n     * Keep track of which values have been removed. Then, as we hit lower priority\n     * animation types, we can check if they contain removed values and animate to that.\n     */\n\n    const removedKeys = new Set();\n    /**\n     * A dictionary of all encountered keys. This is an object to let us build into and\n     * copy it without iteration. Each time we hit an animation type we set its protected\n     * keys - the keys its not allowed to animate - to the latest version of this object.\n     */\n\n    let encounteredKeys = {};\n    /**\n     * If a variant has been removed at a given index, and this component is controlling\n     * variant animations, we want to ensure lower-priority variants are forced to animate.\n     */\n\n    let removedVariantIndex = Infinity;\n    /**\n     * Iterate through all animation types in reverse priority order. For each, we want to\n     * detect which values it's handling and whether or not they've changed (and therefore\n     * need to be animated). If any values have been removed, we want to detect those in\n     * lower priority props and flag for animation.\n     */\n\n    for (let i = 0; i < numAnimationTypes; i++) {\n      const type = reversePriorityOrder[i];\n      const typeState = state[type];\n      const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n      const propIsVariant = isVariantLabel(prop);\n      /**\n       * If this type has *just* changed isActive status, set activeDelta\n       * to that status. Otherwise set to null.\n       */\n\n      const activeDelta = type === changedActiveType ? typeState.isActive : null;\n      if (activeDelta === false) removedVariantIndex = i;\n      /**\n       * If this prop is an inherited variant, rather than been set directly on the\n       * component itself, we want to make sure we allow the parent to trigger animations.\n       *\n       * TODO: Can probably change this to a !isControllingVariants check\n       */\n\n      let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n      /**\n       *\n       */\n\n      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {\n        isInherited = false;\n      }\n      /**\n       * Set all encountered keys so far as the protected keys for this type. This will\n       * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n       */\n\n\n      typeState.protectedKeys = Object.assign({}, encounteredKeys); // Check if we can skip analysing this prop early\n\n      if ( // If it isn't active and hasn't *just* been set as inactive\n      !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type\n      !prop && !typeState.prevProp || // Or if the prop doesn't define an animation\n      isAnimationControls(prop) || typeof prop === \"boolean\") {\n        continue;\n      }\n      /**\n       * As we go look through the values defined on this type, if we detect\n       * a changed value or a value that was removed in a higher priority, we set\n       * this to true and add this prop to the animation list.\n       */\n\n\n      const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n      let shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active\n      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)\n      i > removedVariantIndex && propIsVariant;\n      /**\n       * As animations can be set as variant lists, variants or target objects, we\n       * coerce everything to an array if it isn't one already\n       */\n\n      const definitionList = Array.isArray(prop) ? prop : [prop];\n      /**\n       * Build an object of all the resolved values. We'll use this in the subsequent\n       * animateChanges calls to determine whether a value has changed.\n       */\n\n      let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n      if (activeDelta === false) resolvedValues = {};\n      /**\n       * Now we need to loop through all the keys in the prev prop and this prop,\n       * and decide:\n       * 1. If the value has changed, and needs animating\n       * 2. If it has been removed, and needs adding to the removedKeys set\n       * 3. If it has been removed in a higher priority type and needs animating\n       * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n       *    needs adding to the type's protectedKeys list.\n       */\n\n      const {\n        prevResolvedValues = {}\n      } = typeState;\n      const allKeys = Object.assign(Object.assign({}, prevResolvedValues), resolvedValues);\n\n      const markToAnimate = key => {\n        shouldAnimateType = true;\n        removedKeys.delete(key);\n        typeState.needsAnimating[key] = true;\n      };\n\n      for (const key in allKeys) {\n        const next = resolvedValues[key];\n        const prev = prevResolvedValues[key]; // If we've already handled this we can just skip ahead\n\n        if (encounteredKeys.hasOwnProperty(key)) continue;\n        /**\n         * If the value has changed, we probably want to animate it.\n         */\n\n        if (next !== prev) {\n          /**\n           * If both values are keyframes, we need to shallow compare them to\n           * detect whether any value has changed. If it has, we animate it.\n           */\n          if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n            if (!shallowCompare(next, prev) || variantDidChange) {\n              markToAnimate(key);\n            } else {\n              /**\n               * If it hasn't changed, we want to ensure it doesn't animate by\n               * adding it to the list of protected keys.\n               */\n              typeState.protectedKeys[key] = true;\n            }\n          } else if (next !== undefined) {\n            // If next is defined and doesn't equal prev, it needs animating\n            markToAnimate(key);\n          } else {\n            // If it's undefined, it's been removed.\n            removedKeys.add(key);\n          }\n        } else if (next !== undefined && removedKeys.has(key)) {\n          /**\n           * If next hasn't changed and it isn't undefined, we want to check if it's\n           * been removed by a higher priority\n           */\n          markToAnimate(key);\n        } else {\n          /**\n           * If it hasn't changed, we add it to the list of protected values\n           * to ensure it doesn't get animated.\n           */\n          typeState.protectedKeys[key] = true;\n        }\n      }\n      /**\n       * Update the typeState so next time animateChanges is called we can compare the\n       * latest prop and resolvedValues to these.\n       */\n\n\n      typeState.prevProp = prop;\n      typeState.prevResolvedValues = resolvedValues;\n      /**\n       *\n       */\n\n      if (typeState.isActive) {\n        encounteredKeys = Object.assign(Object.assign({}, encounteredKeys), resolvedValues);\n      }\n\n      if (isInitialRender && visualElement.blockInitialAnimation) {\n        shouldAnimateType = false;\n      }\n      /**\n       * If this is an inherited prop we want to hard-block animations\n       * TODO: Test as this should probably still handle animations triggered\n       * by removed values?\n       */\n\n\n      if (shouldAnimateType && !isInherited) {\n        animations.push(...definitionList.map(animation => ({\n          animation: animation,\n          options: Object.assign({\n            type\n          }, options)\n        })));\n      }\n    }\n    /**\n     * If there are some removed value that haven't been dealt with,\n     * we need to create a new animation that falls back either to the value\n     * defined in the style prop, or the last read value.\n     */\n\n\n    if (removedKeys.size) {\n      const fallbackAnimation = {};\n      removedKeys.forEach(key => {\n        const fallbackTarget = visualElement.getBaseTarget(key);\n\n        if (fallbackTarget !== undefined) {\n          fallbackAnimation[key] = fallbackTarget;\n        }\n      });\n      animations.push({\n        animation: fallbackAnimation\n      });\n    }\n\n    let shouldAnimate = Boolean(animations.length);\n\n    if (isInitialRender && props.initial === false && !visualElement.manuallyAnimateOnMount) {\n      shouldAnimate = false;\n    }\n\n    isInitialRender = false;\n    return shouldAnimate ? animate(animations) : Promise.resolve();\n  }\n  /**\n   * Change whether a certain animation type is active.\n   */\n\n\n  function setActive(type, isActive, options) {\n    var _a; // If the active state hasn't changed, we can safely do nothing here\n\n\n    if (state[type].isActive === isActive) return Promise.resolve(); // Propagate active change to children\n\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(child => {\n      var _a;\n\n      return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive);\n    });\n    state[type].isActive = isActive;\n    const animations = animateChanges(options, type);\n\n    for (const key in state) {\n      state[key].protectedKeys = {};\n    }\n\n    return animations;\n  }\n\n  return {\n    animateChanges,\n    setActive,\n    setAnimateFunction,\n    getState: () => state\n  };\n}\n\nfunction checkVariantsDidChange(prev, next) {\n  if (typeof next === \"string\") {\n    return next !== prev;\n  } else if (isVariantLabels(next)) {\n    return !shallowCompare(next, prev);\n  }\n\n  return false;\n}\n\nfunction createTypeState() {\n  let isActive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return {\n    isActive,\n    protectedKeys: {},\n    needsAnimating: {},\n    prevResolvedValues: {}\n  };\n}\n\nfunction createState() {\n  return {\n    [exports.AnimationType.Animate]: createTypeState(true),\n    [exports.AnimationType.InView]: createTypeState(),\n    [exports.AnimationType.Hover]: createTypeState(),\n    [exports.AnimationType.Tap]: createTypeState(),\n    [exports.AnimationType.Drag]: createTypeState(),\n    [exports.AnimationType.Focus]: createTypeState(),\n    [exports.AnimationType.Exit]: createTypeState()\n  };\n}\n\nconst animations = {\n  animation: makeRenderlessComponent(_ref24 => {\n    let {\n      visualElement,\n      animate\n    } = _ref24;\n\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n\n    if (isAnimationControls(animate)) {\n      React.useEffect(() => animate.subscribe(visualElement), [animate]);\n    }\n  }),\n  exit: makeRenderlessComponent(props => {\n    const {\n      custom,\n      visualElement\n    } = props;\n    const [isPresent, safeToRemove] = usePresence();\n    const presenceContext = React.useContext(PresenceContext);\n    React.useEffect(() => {\n      var _a, _b;\n\n      visualElement.isPresent = isPresent;\n      const animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Exit, !isPresent, {\n        custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom\n      });\n      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n    }, [isPresent]);\n  })\n};\n/**\n * @internal\n */\n\nclass PanSession {\n  constructor(event, handlers) {\n    let {\n      transformPagePoint\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    /**\n     * @internal\n     */\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = () => {\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const info = getPanInfo(this.lastMoveEventInfo, this.history);\n      const isPanStarted = this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      const isDistancePastThreshold = popmotion.distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      const {\n        point\n      } = info;\n      const {\n        timestamp\n      } = sync.getFrameData();\n      this.history.push(Object.assign(Object.assign({}, point), {\n        timestamp\n      }));\n      const {\n        onStart,\n        onMove\n      } = this.handlers;\n\n      if (!isPanStarted) {\n        onStart && onStart(this.lastMoveEvent, info);\n        this.startEvent = this.lastMoveEvent;\n      }\n\n      onMove && onMove(this.lastMoveEvent, info);\n    };\n\n    this.handlePointerMove = (event, info) => {\n      this.lastMoveEvent = event;\n      this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint); // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n      if (isMouseEvent(event) && event.buttons === 0) {\n        this.handlePointerUp(event, info);\n        return;\n      } // Throttle mouse move event to once per frame\n\n\n      sync__default[\"default\"].update(this.updatePoint, true);\n    };\n\n    this.handlePointerUp = (event, info) => {\n      this.end();\n      const {\n        onEnd,\n        onSessionEnd\n      } = this.handlers;\n      const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n\n      if (this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n\n      onSessionEnd && onSessionEnd(event, panInfo);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (isTouchEvent(event) && event.touches.length > 1) return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    const info = extractEventInfo(event);\n    const initialInfo = transformPoint(info, this.transformPagePoint);\n    const {\n      point\n    } = initialInfo;\n    const {\n      timestamp\n    } = sync.getFrameData();\n    this.history = [Object.assign(Object.assign({}, point), {\n      timestamp\n    })];\n    const {\n      onSessionStart\n    } = handlers;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = popmotion.pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n  }\n\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n\n  end() {\n    this.removeListeners && this.removeListeners();\n    sync.cancelSync.update(this.updatePoint);\n  }\n\n}\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(_ref25, history) {\n  let {\n    point\n  } = _ref25;\n  return {\n    point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nfunction calcLength(axis) {\n  return axis.max - axis.min;\n}\n\nfunction isNear(value) {\n  let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let maxDistance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.01;\n  return popmotion.distance(value, target) < maxDistance;\n}\n\nfunction calcAxisDelta(delta, source, target) {\n  let origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n  delta.origin = origin;\n  delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n  delta.scale = calcLength(target) / calcLength(source);\n  if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale)) delta.scale = 1;\n  delta.translate = popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n  if (isNear(delta.translate) || isNaN(delta.translate)) delta.translate = 0;\n}\n\nfunction calcBoxDelta(delta, source, target, origin) {\n  calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n  calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\n\nfunction calcRelativeAxis(target, relative, parent) {\n  target.min = parent.min + relative.min;\n  target.max = target.min + calcLength(relative);\n}\n\nfunction calcRelativeBox(target, relative, parent) {\n  calcRelativeAxis(target.x, relative.x, parent.x);\n  calcRelativeAxis(target.y, relative.y, parent.y);\n}\n\nfunction calcRelativeAxisPosition(target, layout, parent) {\n  target.min = layout.min - parent.min;\n  target.max = target.min + calcLength(layout);\n}\n\nfunction calcRelativePosition(target, layout, parent) {\n  calcRelativeAxisPosition(target.x, layout.x, parent.x);\n  calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\n\n\nfunction applyConstraints(point, _ref26, elastic) {\n  let {\n    min,\n    max\n  } = _ref26;\n\n  if (min !== undefined && point < min) {\n    // If we have a min point defined, and this is outside of that, constrain\n    point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);\n  } else if (max !== undefined && point > max) {\n    // If we have a max point defined, and this is outside of that, constrain\n    point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);\n  }\n\n  return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\n\n\nfunction calcRelativeAxisConstraints(axis, min, max) {\n  return {\n    min: min !== undefined ? axis.min + min : undefined,\n    max: max !== undefined ? axis.max + max - (axis.max - axis.min) : undefined\n  };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\n\n\nfunction calcRelativeConstraints(layoutBox, _ref27) {\n  let {\n    top,\n    left,\n    bottom,\n    right\n  } = _ref27;\n  return {\n    x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)\n  };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\n\n\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n  let min = constraintsAxis.min - layoutAxis.min;\n  let max = constraintsAxis.max - layoutAxis.max; // If the constraints axis is actually smaller than the layout axis then we can\n  // flip the constraints\n\n  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {\n    [min, max] = [max, min];\n  }\n\n  return {\n    min,\n    max\n  };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\n\n\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n  return {\n    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)\n  };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\n\n\nfunction calcOrigin(source, target) {\n  let origin = 0.5;\n  const sourceLength = calcLength(source);\n  const targetLength = calcLength(target);\n\n  if (targetLength > sourceLength) {\n    origin = popmotion.progress(target.min, target.max - sourceLength, source.min);\n  } else if (sourceLength > targetLength) {\n    origin = popmotion.progress(source.min, source.max - targetLength, target.min);\n  }\n\n  return popmotion.clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\n\n\nfunction rebaseAxisConstraints(layout, constraints) {\n  const relativeConstraints = {};\n\n  if (constraints.min !== undefined) {\n    relativeConstraints.min = constraints.min - layout.min;\n  }\n\n  if (constraints.max !== undefined) {\n    relativeConstraints.max = constraints.max - layout.min;\n  }\n\n  return relativeConstraints;\n}\n\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\n\nfunction resolveDragElastic() {\n  let dragElastic = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultElastic;\n\n  if (dragElastic === false) {\n    dragElastic = 0;\n  } else if (dragElastic === true) {\n    dragElastic = defaultElastic;\n  }\n\n  return {\n    x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n    y: resolveAxisElastic(dragElastic, \"top\", \"bottom\")\n  };\n}\n\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n  return {\n    min: resolvePointElastic(dragElastic, minLabel),\n    max: resolvePointElastic(dragElastic, maxLabel)\n  };\n}\n\nfunction resolvePointElastic(dragElastic, label) {\n  var _a;\n\n  return typeof dragElastic === \"number\" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nconst createAxisDelta = () => ({\n  translate: 0,\n  scale: 1,\n  origin: 0,\n  originPoint: 0\n});\n\nconst createDelta = () => ({\n  x: createAxisDelta(),\n  y: createAxisDelta()\n});\n\nconst createAxis = () => ({\n  min: 0,\n  max: 0\n});\n\nconst createBox = () => ({\n  x: createAxis(),\n  y: createAxis()\n});\n\nfunction eachAxis(callback) {\n  return [callback(\"x\"), callback(\"y\")];\n}\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\n\n\nfunction convertBoundingBoxToBox(_ref28) {\n  let {\n    top,\n    left,\n    right,\n    bottom\n  } = _ref28;\n  return {\n    x: {\n      min: left,\n      max: right\n    },\n    y: {\n      min: top,\n      max: bottom\n    }\n  };\n}\n\nfunction convertBoxToBoundingBox(_ref29) {\n  let {\n    x,\n    y\n  } = _ref29;\n  return {\n    top: y.min,\n    right: x.max,\n    bottom: y.max,\n    left: x.min\n  };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\n\n\nfunction transformBoxPoints(point, transformPoint) {\n  if (!transformPoint) return point;\n  const topLeft = transformPoint({\n    x: point.left,\n    y: point.top\n  });\n  const bottomRight = transformPoint({\n    x: point.right,\n    y: point.bottom\n  });\n  return {\n    top: topLeft.y,\n    left: topLeft.x,\n    bottom: bottomRight.y,\n    right: bottomRight.x\n  };\n}\n\nfunction isIdentityScale(scale) {\n  return scale === undefined || scale === 1;\n}\n\nfunction hasScale(_ref30) {\n  let {\n    scale,\n    scaleX,\n    scaleY\n  } = _ref30;\n  return !isIdentityScale(scale) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);\n}\n\nfunction hasTransform(values) {\n  return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;\n}\n\nfunction hasTranslate(value) {\n  return value && value !== \"0%\";\n}\n/**\n * Scales a point based on a factor and an originPoint\n */\n\n\nfunction scalePoint(point, scale, originPoint) {\n  const distanceFromOrigin = point - originPoint;\n  const scaled = scale * distanceFromOrigin;\n  return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\n\n\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n  if (boxScale !== undefined) {\n    point = scalePoint(point, boxScale, originPoint);\n  }\n\n  return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\n\n\nfunction applyAxisDelta(axis) {\n  let translate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let scale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let originPoint = arguments.length > 3 ? arguments[3] : undefined;\n  let boxScale = arguments.length > 4 ? arguments[4] : undefined;\n  axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n  axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\n\n\nfunction applyBoxDelta(box, _ref31) {\n  let {\n    x,\n    y\n  } = _ref31;\n  applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n  applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\n\n\nfunction applyTreeDeltas(box, treeScale, treePath) {\n  let isSharedTransition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  var _a, _b;\n\n  const treeLength = treePath.length;\n  if (!treeLength) return; // Reset the treeScale\n\n  treeScale.x = treeScale.y = 1;\n  let node;\n  let delta;\n\n  for (let i = 0; i < treeLength; i++) {\n    node = treePath[i];\n    delta = node.projectionDelta;\n    if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\") continue;\n\n    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {\n      transformBox(box, {\n        x: -node.scroll.x,\n        y: -node.scroll.y\n      });\n    }\n\n    if (delta) {\n      // Incoporate each ancestor's scale into a culmulative treeScale for this component\n      treeScale.x *= delta.x.scale;\n      treeScale.y *= delta.y.scale; // Apply each ancestor's calculated delta into this component's recorded layout box\n\n      applyBoxDelta(box, delta);\n    }\n\n    if (isSharedTransition && hasTransform(node.latestValues)) {\n      transformBox(box, node.latestValues);\n    }\n  }\n}\n\nfunction translateAxis(axis, distance) {\n  axis.min = axis.min + distance;\n  axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\n\n\nfunction transformAxis(axis, transforms, _ref32) {\n  let [key, scaleKey, originKey] = _ref32;\n  const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n  const originPoint = popmotion.mix(axis.min, axis.max, axisOrigin); // Apply the axis delta to the final axis\n\n  applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\n\n\nconst xKeys$1 = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys$1 = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\n\nfunction transformBox(box, transform) {\n  transformAxis(box.x, transform, xKeys$1);\n  transformAxis(box.y, transform, yKeys$1);\n}\n\nfunction measureViewportBox(instance, transformPoint) {\n  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\n\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n  const viewportBox = measureViewportBox(element, transformPagePoint);\n  const {\n    scroll\n  } = rootProjectionNode;\n\n  if (scroll) {\n    translateAxis(viewportBox.x, scroll.x);\n    translateAxis(viewportBox.y, scroll.y);\n  }\n\n  return viewportBox;\n}\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\n\nclass VisualElementDragControls {\n  constructor(visualElement) {\n    // This is a reference to the global drag gesture lock, ensuring only one component\n    // can \"capture\" the drag of one or both axes.\n    // TODO: Look into moving this into pansession?\n    this.openGlobalLock = null;\n    this.isDragging = false;\n    this.currentDirection = null;\n    this.originPoint = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * The permitted boundaries of travel, in pixels.\n     */\n\n    this.constraints = false;\n    this.hasMutatedConstraints = false;\n    /**\n     * The per-axis resolved elastic values.\n     */\n\n    this.elastic = createBox();\n    this.visualElement = visualElement;\n  }\n\n  start(originEvent) {\n    let {\n      snapToCursor = false\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    /**\n     * Don't start dragging if this component is exiting\n     */\n    if (this.visualElement.isPresent === false) return;\n\n    const onSessionStart = event => {\n      // Stop any animations on both axis values immediately. This allows the user to throw and catch\n      // the component.\n      this.stopAnimation();\n\n      if (snapToCursor) {\n        this.snapToCursor(extractEventInfo(event, \"page\").point);\n      }\n    };\n\n    const onStart = (event, info) => {\n      var _a; // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n\n\n      const {\n        drag,\n        dragPropagation,\n        onDragStart\n      } = this.getProps();\n\n      if (drag && !dragPropagation) {\n        if (this.openGlobalLock) this.openGlobalLock();\n        this.openGlobalLock = getGlobalLock(drag); // If we don 't have the lock, don't start dragging\n\n        if (!this.openGlobalLock) return;\n      }\n\n      this.isDragging = true;\n      this.currentDirection = null;\n      this.resolveConstraints();\n\n      if (this.visualElement.projection) {\n        this.visualElement.projection.isAnimationBlocked = true;\n        this.visualElement.projection.target = undefined;\n      }\n      /**\n       * Record gesture origin\n       */\n\n\n      eachAxis(axis => {\n        var _a, _b;\n\n        let current = this.getAxisMotionValue(axis).get() || 0;\n        /**\n         * If the MotionValue is a percentage value convert to px\n         */\n\n        if (styleValueTypes.percent.test(current)) {\n          const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n\n          if (measuredAxis) {\n            const length = calcLength(measuredAxis);\n            current = length * (parseFloat(current) / 100);\n          }\n        }\n\n        this.originPoint[axis] = current;\n      }); // Fire onDragStart event\n\n      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n      (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Drag, true);\n    };\n\n    const onMove = (event, info) => {\n      // latestPointerEvent = event\n      const {\n        dragPropagation,\n        dragDirectionLock,\n        onDirectionLock,\n        onDrag\n      } = this.getProps(); // If we didn't successfully receive the gesture lock, early return.\n\n      if (!dragPropagation && !this.openGlobalLock) return;\n      const {\n        offset\n      } = info; // Attempt to detect drag direction if directionLock is true\n\n      if (dragDirectionLock && this.currentDirection === null) {\n        this.currentDirection = getCurrentDirection(offset); // If we've successfully set a direction, notify listener\n\n        if (this.currentDirection !== null) {\n          onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n        }\n\n        return;\n      } // Update each point with the latest position\n\n\n      this.updateAxis(\"x\", info.point, offset);\n      this.updateAxis(\"y\", info.point, offset);\n      /**\n       * Ideally we would leave the renderer to fire naturally at the end of\n       * this frame but if the element is about to change layout as the result\n       * of a re-render we want to ensure the browser can read the latest\n       * bounding box to ensure the pointer and element don't fall out of sync.\n       */\n\n      this.visualElement.syncRender();\n      /**\n       * This must fire after the syncRender call as it might trigger a state\n       * change which itself might trigger a layout update.\n       */\n\n      onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n    };\n\n    const onSessionEnd = (event, info) => this.stop(event, info);\n\n    this.panSession = new PanSession(originEvent, {\n      onSessionStart,\n      onStart,\n      onMove,\n      onSessionEnd\n    }, {\n      transformPagePoint: this.visualElement.getTransformPagePoint()\n    });\n  }\n\n  stop(event, info) {\n    const isDragging = this.isDragging;\n    this.cancel();\n    if (!isDragging) return;\n    const {\n      velocity\n    } = info;\n    this.startAnimation(velocity);\n    const {\n      onDragEnd\n    } = this.getProps();\n    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n  }\n\n  cancel() {\n    var _a, _b;\n\n    this.isDragging = false;\n\n    if (this.visualElement.projection) {\n      this.visualElement.projection.isAnimationBlocked = false;\n    }\n\n    (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n    this.panSession = undefined;\n    const {\n      dragPropagation\n    } = this.getProps();\n\n    if (!dragPropagation && this.openGlobalLock) {\n      this.openGlobalLock();\n      this.openGlobalLock = null;\n    }\n\n    (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(exports.AnimationType.Drag, false);\n  }\n\n  updateAxis(axis, _point, offset) {\n    const {\n      drag\n    } = this.getProps(); // If we're not dragging this axis, do an early return.\n\n    if (!offset || !shouldDrag(axis, drag, this.currentDirection)) return;\n    const axisValue = this.getAxisMotionValue(axis);\n    let next = this.originPoint[axis] + offset[axis]; // Apply constraints\n\n    if (this.constraints && this.constraints[axis]) {\n      next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n    }\n\n    axisValue.set(next);\n  }\n\n  resolveConstraints() {\n    const {\n      dragConstraints,\n      dragElastic\n    } = this.getProps();\n    const {\n      layout\n    } = this.visualElement.projection || {};\n    const prevConstraints = this.constraints;\n\n    if (dragConstraints && isRefObject(dragConstraints)) {\n      if (!this.constraints) {\n        this.constraints = this.resolveRefConstraints();\n      }\n    } else {\n      if (dragConstraints && layout) {\n        this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n      } else {\n        this.constraints = false;\n      }\n    }\n\n    this.elastic = resolveDragElastic(dragElastic);\n    /**\n     * If we're outputting to external MotionValues, we want to rebase the measured constraints\n     * from viewport-relative to component-relative.\n     */\n\n    if (prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints) {\n      eachAxis(axis => {\n        if (this.getAxisMotionValue(axis)) {\n          this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], this.constraints[axis]);\n        }\n      });\n    }\n  }\n\n  resolveRefConstraints() {\n    const {\n      dragConstraints: constraints,\n      onMeasureDragConstraints\n    } = this.getProps();\n    if (!constraints || !isRefObject(constraints)) return false;\n    const constraintsElement = constraints.current;\n    heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n    const {\n      projection\n    } = this.visualElement; // TODO\n\n    if (!projection || !projection.layout) return false;\n    const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n    let measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n    /**\n     * If there's an onMeasureDragConstraints listener we call it and\n     * if different constraints are returned, set constraints to that\n     */\n\n    if (onMeasureDragConstraints) {\n      const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n      this.hasMutatedConstraints = !!userConstraints;\n\n      if (userConstraints) {\n        measuredConstraints = convertBoundingBoxToBox(userConstraints);\n      }\n    }\n\n    return measuredConstraints;\n  }\n\n  startAnimation(velocity) {\n    const {\n      drag,\n      dragMomentum,\n      dragElastic,\n      dragTransition,\n      dragSnapToOrigin,\n      onDragTransitionEnd\n    } = this.getProps();\n    const constraints = this.constraints || {};\n    const momentumAnimations = eachAxis(axis => {\n      var _a;\n\n      if (!shouldDrag(axis, drag, this.currentDirection)) {\n        return;\n      }\n\n      let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n      if (dragSnapToOrigin) transition = {\n        min: 0,\n        max: 0\n      };\n      /**\n       * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n       * of spring animations so we should look into adding a disable spring option to `inertia`.\n       * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n       * using the value of `dragElastic`.\n       */\n\n      const bounceStiffness = dragElastic ? 200 : 1000000;\n      const bounceDamping = dragElastic ? 40 : 10000000;\n      const inertia = Object.assign(Object.assign({\n        type: \"inertia\",\n        velocity: dragMomentum ? velocity[axis] : 0,\n        bounceStiffness,\n        bounceDamping,\n        timeConstant: 750,\n        restDelta: 1,\n        restSpeed: 10\n      }, dragTransition), transition); // If we're not animating on an externally-provided `MotionValue` we can use the\n      // component's animation controls which will handle interactions with whileHover (etc),\n      // otherwise we just have to animate the `MotionValue` itself.\n\n      return this.startAxisValueAnimation(axis, inertia);\n    }); // Run all animations and then resolve the new drag constraints.\n\n    return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n  }\n\n  startAxisValueAnimation(axis, transition) {\n    const axisValue = this.getAxisMotionValue(axis);\n    return startAnimation(axis, axisValue, 0, transition);\n  }\n\n  stopAnimation() {\n    eachAxis(axis => this.getAxisMotionValue(axis).stop());\n  }\n  /**\n   * Drag works differently depending on which props are provided.\n   *\n   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n   * - Otherwise, we apply the delta to the x/y motion values.\n   */\n\n\n  getAxisMotionValue(axis) {\n    var _a, _b;\n\n    const dragKey = \"_drag\" + axis.toUpperCase();\n    const externalMotionValue = this.visualElement.getProps()[dragKey];\n    return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n  }\n\n  snapToCursor(point) {\n    eachAxis(axis => {\n      const {\n        drag\n      } = this.getProps(); // If we're not dragging this axis, do an early return.\n\n      if (!shouldDrag(axis, drag, this.currentDirection)) return;\n      const {\n        projection\n      } = this.visualElement;\n      const axisValue = this.getAxisMotionValue(axis);\n\n      if (projection && projection.layout) {\n        const {\n          min,\n          max\n        } = projection.layout.actual[axis];\n        axisValue.set(point[axis] - popmotion.mix(min, max, 0.5));\n      }\n    });\n  }\n  /**\n   * When the viewport resizes we want to check if the measured constraints\n   * have changed and, if so, reposition the element within those new constraints\n   * relative to where it was before the resize.\n   */\n\n\n  scalePositionWithinConstraints() {\n    var _a;\n\n    const {\n      drag,\n      dragConstraints\n    } = this.getProps();\n    const {\n      projection\n    } = this.visualElement;\n    if (!isRefObject(dragConstraints) || !projection || !this.constraints) return;\n    /**\n     * Stop current animations as there can be visual glitching if we try to do\n     * this mid-animation\n     */\n\n    this.stopAnimation();\n    /**\n     * Record the relative position of the dragged element relative to the\n     * constraints box and save as a progress value.\n     */\n\n    const boxProgress = {\n      x: 0,\n      y: 0\n    };\n    eachAxis(axis => {\n      const axisValue = this.getAxisMotionValue(axis);\n\n      if (axisValue) {\n        const latest = axisValue.get();\n        boxProgress[axis] = calcOrigin({\n          min: latest,\n          max: latest\n        }, this.constraints[axis]);\n      }\n    });\n    /**\n     * Update the layout of this element and resolve the latest drag constraints\n     */\n\n    const {\n      transformTemplate\n    } = this.visualElement.getProps();\n    this.visualElement.getInstance().style.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\";\n    (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n    projection.updateLayout();\n    this.resolveConstraints();\n    /**\n     * For each axis, calculate the current progress of the layout axis\n     * within the new constraints.\n     */\n\n    eachAxis(axis => {\n      if (!shouldDrag(axis, drag, null)) return;\n      /**\n       * Calculate a new transform based on the previous box progress\n       */\n\n      const axisValue = this.getAxisMotionValue(axis);\n      const {\n        min,\n        max\n      } = this.constraints[axis];\n      axisValue.set(popmotion.mix(min, max, boxProgress[axis]));\n    });\n  }\n\n  addListeners() {\n    var _a;\n\n    elementDragControls.set(this.visualElement, this);\n    const element = this.visualElement.getInstance();\n    /**\n     * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n     */\n\n    const stopPointerListener = addPointerEvent(element, \"pointerdown\", event => {\n      const {\n        drag,\n        dragListener = true\n      } = this.getProps();\n      drag && dragListener && this.start(event);\n    });\n\n    const measureDragConstraints = () => {\n      const {\n        dragConstraints\n      } = this.getProps();\n\n      if (isRefObject(dragConstraints)) {\n        this.constraints = this.resolveRefConstraints();\n      }\n    };\n\n    const {\n      projection\n    } = this.visualElement;\n    const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n\n    if (projection && !projection.layout) {\n      (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n      projection.updateLayout();\n    }\n\n    measureDragConstraints();\n    /**\n     * Attach a window resize listener to scale the draggable target within its defined\n     * constraints as the window resizes.\n     */\n\n    const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n    /**\n     * If the element's layout changes, calculate the delta and apply that to\n     * the drag gesture's origin point.\n     */\n\n    const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", _ref33 => {\n      let {\n        delta,\n        hasLayoutChanged\n      } = _ref33;\n\n      if (this.isDragging && hasLayoutChanged) {\n        eachAxis(axis => {\n          const motionValue = this.getAxisMotionValue(axis);\n          if (!motionValue) return;\n          this.originPoint[axis] += delta[axis].translate;\n          motionValue.set(motionValue.get() + delta[axis].translate);\n        });\n        this.visualElement.syncRender();\n      }\n    });\n    return () => {\n      stopResizeListener();\n      stopPointerListener();\n      stopMeasureLayoutListener();\n      stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n    };\n  }\n\n  getProps() {\n    const props = this.visualElement.getProps();\n    const {\n      drag = false,\n      dragDirectionLock = false,\n      dragPropagation = false,\n      dragConstraints = false,\n      dragElastic = defaultElastic,\n      dragMomentum = true\n    } = props;\n    return Object.assign(Object.assign({}, props), {\n      drag,\n      dragDirectionLock,\n      dragPropagation,\n      dragConstraints,\n      dragElastic,\n      dragMomentum\n    });\n  }\n\n}\n\nfunction shouldDrag(direction, drag, currentDirection) {\n  return (drag === true || drag === direction) && (currentDirection === null || currentDirection === direction);\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\n\n\nfunction getCurrentDirection(offset) {\n  let lockThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  let direction = null;\n\n  if (Math.abs(offset.y) > lockThreshold) {\n    direction = \"y\";\n  } else if (Math.abs(offset.x) > lockThreshold) {\n    direction = \"x\";\n  }\n\n  return direction;\n}\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\n\n\nfunction useDrag(props) {\n  const {\n    dragControls: groupDragControls,\n    visualElement\n  } = props;\n  const dragControls = useConstant(() => new VisualElementDragControls(visualElement)); // If we've been provided a DragControls for manual control over the drag gesture,\n  // subscribe this component to it on mount.\n\n  React.useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]); // Apply the event listeners to the element\n\n  React.useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\n\n\nfunction usePanGesture(_ref34) {\n  let {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    visualElement\n  } = _ref34;\n  const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n  const panSession = React.useRef(null);\n  const {\n    transformPagePoint\n  } = React.useContext(MotionConfigContext);\n  const handlers = {\n    onSessionStart: onPanSessionStart,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: (event, info) => {\n      panSession.current = null;\n      onPanEnd && onPanEnd(event, info);\n    }\n  };\n  React.useEffect(() => {\n    if (panSession.current !== null) {\n      panSession.current.updateHandlers(handlers);\n    }\n  });\n\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, {\n      transformPagePoint\n    });\n  }\n\n  usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n  useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nconst drag = {\n  pan: makeRenderlessComponent(usePanGesture),\n  drag: makeRenderlessComponent(useDrag)\n};\nconst names = [\"LayoutMeasure\", \"BeforeLayoutMeasure\", \"LayoutUpdate\", \"ViewportBoxUpdate\", \"Update\", \"Render\", \"AnimationComplete\", \"LayoutAnimationComplete\", \"AnimationStart\", \"LayoutAnimationStart\", \"SetAxisTarget\", \"Unmount\"];\n\nfunction createLifecycles() {\n  const managers = names.map(() => new SubscriptionManager());\n  const propSubscriptions = {};\n  const lifecycles = {\n    clearAllListeners: () => managers.forEach(manager => manager.clear()),\n    updatePropListeners: props => {\n      names.forEach(name => {\n        var _a;\n\n        const on = \"on\" + name;\n        const propListener = props[on]; // Unsubscribe existing subscription\n\n        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions); // Add new subscription\n\n        if (propListener) {\n          propSubscriptions[name] = lifecycles[on](propListener);\n        }\n      });\n    }\n  };\n  managers.forEach((manager, i) => {\n    lifecycles[\"on\" + names[i]] = handler => manager.add(handler);\n\n    lifecycles[\"notify\" + names[i]] = function () {\n      return manager.notify(...arguments);\n    };\n  });\n  return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n  var _a;\n\n  const {\n    willChange\n  } = next;\n\n  for (const key in next) {\n    const nextValue = next[key];\n    const prevValue = prev[key];\n\n    if (isMotionValue(nextValue)) {\n      /**\n       * If this is a motion value found in props or style, we want to add it\n       * to our visual element's motion value map.\n       */\n      element.addValue(key, nextValue);\n\n      if (isWillChangeMotionValue(willChange)) {\n        willChange.add(key);\n      }\n      /**\n       * Check the version of the incoming motion value with this version\n       * and warn against mismatches.\n       */\n\n\n      if (process.env.NODE_ENV === \"development\") {\n        warnOnce(nextValue.version === \"7.2.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.2.0 may not work as expected.`);\n      }\n    } else if (isMotionValue(prevValue)) {\n      /**\n       * If we're swapping from a motion value to a static value,\n       * create a new motion value from that\n       */\n      element.addValue(key, motionValue(nextValue));\n\n      if (isWillChangeMotionValue(willChange)) {\n        willChange.remove(key);\n      }\n    } else if (prevValue !== nextValue) {\n      /**\n       * If this is a flat value that has changed, update the motion value\n       * or create one if it doesn't exist. We only want to do this if we're\n       * not handling the value with our animation state.\n       */\n      if (element.hasValue(key)) {\n        const existingValue = element.getValue(key); // TODO: Only update values that aren't being animated or even looked at\n\n        !existingValue.hasAnimated && existingValue.set(nextValue);\n      } else {\n        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n      }\n    }\n  } // Handle removed values\n\n\n  for (const key in prev) {\n    if (next[key] === undefined) element.removeValue(key);\n  }\n\n  return next;\n}\n\nconst visualElement = _ref35 => {\n  let {\n    treeType = \"\",\n    build,\n    getBaseTarget,\n    makeTargetAnimatable,\n    measureViewportBox,\n    render: renderInstance,\n    readValueFromInstance,\n    removeValueFromRenderState,\n    sortNodePosition,\n    scrapeMotionValuesFromProps\n  } = _ref35;\n  return function (_ref36) {\n    let {\n      parent,\n      props,\n      presenceId,\n      blockInitialAnimation,\n      visualState,\n      shouldReduceMotion\n    } = _ref36;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let isMounted = false;\n    const {\n      latestValues,\n      renderState\n    } = visualState;\n    /**\n     * The instance of the render-specific node that will be hydrated by the\n     * exposed React ref. So for example, this visual element can host a\n     * HTMLElement, plain object, or Three.js object. The functions provided\n     * in VisualElementConfig allow us to interface with this instance.\n     */\n\n    let instance;\n    /**\n     * Manages the subscriptions for a visual element's lifecycle, for instance\n     * onRender\n     */\n\n    const lifecycles = createLifecycles();\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n\n    const values = new Map();\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n\n    const valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n\n    let prevMotionValues = {};\n    /**\n     * When values are removed from all animation props we need to search\n     * for a fallback value to animate to. These values are tracked in baseTarget.\n     */\n\n    const baseTarget = Object.assign({}, latestValues); // Internal methods ========================\n\n    /**\n     * On mount, this will be hydrated with a callback to disconnect\n     * this visual element from its parent on unmount.\n     */\n\n    let removeFromVariantTree;\n    /**\n     * Render the element with the latest styles outside of the React\n     * render lifecycle\n     */\n\n    function render() {\n      if (!instance || !isMounted) return;\n      triggerBuild();\n      renderInstance(instance, renderState, props.style, element.projection);\n    }\n\n    function triggerBuild() {\n      build(element, renderState, latestValues, options, props);\n    }\n\n    function update() {\n      lifecycles.notifyUpdate(latestValues);\n    }\n    /**\n     *\n     */\n\n\n    function bindToMotionValue(key, value) {\n      const removeOnChange = value.onChange(latestValue => {\n        latestValues[key] = latestValue;\n        props.onUpdate && sync__default[\"default\"].update(update, false, true);\n      });\n      const removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n      valueSubscriptions.set(key, () => {\n        removeOnChange();\n        removeOnRenderRequest();\n      });\n    }\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n\n\n    const _a = scrapeMotionValuesFromProps(props),\n          {\n      willChange\n    } = _a,\n          initialMotionValues = tslib.__rest(_a, [\"willChange\"]);\n\n    for (const key in initialMotionValues) {\n      const value = initialMotionValues[key];\n\n      if (latestValues[key] !== undefined && isMotionValue(value)) {\n        value.set(latestValues[key], false);\n\n        if (isWillChangeMotionValue(willChange)) {\n          willChange.add(key);\n        }\n      }\n    }\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n\n\n    const isControllingVariants = checkIfControllingVariants(props);\n    const isVariantNode = checkIfVariantNode(props);\n    const element = Object.assign(Object.assign({\n      treeType,\n\n      /**\n       * This is a mirror of the internal instance prop, which keeps\n       * VisualElement type-compatible with React's RefObject.\n       */\n      current: null,\n\n      /**\n       * The depth of this visual element within the visual element tree.\n       */\n      depth: parent ? parent.depth + 1 : 0,\n      parent,\n      children: new Set(),\n\n      /**\n       *\n       */\n      presenceId,\n      shouldReduceMotion,\n\n      /**\n       * If this component is part of the variant tree, it should track\n       * any children that are also part of the tree. This is essentially\n       * a shadow tree to simplify logic around how to stagger over children.\n       */\n      variantChildren: isVariantNode ? new Set() : undefined,\n\n      /**\n       * Whether this instance is visible. This can be changed imperatively\n       * by the projection tree, is analogous to CSS's visibility in that\n       * hidden elements should take up layout, and needs enacting by the configured\n       * render function.\n       */\n      isVisible: undefined,\n\n      /**\n       * Normally, if a component is controlled by a parent's variants, it can\n       * rely on that ancestor to trigger animations further down the tree.\n       * However, if a component is created after its parent is mounted, the parent\n       * won't trigger that mount animation so the child needs to.\n       *\n       * TODO: This might be better replaced with a method isParentMounted\n       */\n      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),\n\n      /**\n       * This can be set by AnimatePresence to force components that mount\n       * at the same time as it to mount as if they have initial={false} set.\n       */\n      blockInitialAnimation,\n\n      /**\n       * Determine whether this component has mounted yet. This is mostly used\n       * by variant children to determine whether they need to trigger their\n       * own animations on mount.\n       */\n      isMounted: () => Boolean(instance),\n\n      mount(newInstance) {\n        isMounted = true;\n        instance = element.current = newInstance;\n\n        if (element.projection) {\n          element.projection.mount(newInstance);\n        }\n\n        if (isVariantNode && parent && !isControllingVariants) {\n          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n        }\n\n        values.forEach((value, key) => bindToMotionValue(key, value));\n        parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n        element.setProps(props);\n      },\n\n      /**\n       *\n       */\n      unmount() {\n        var _a;\n\n        (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        sync.cancelSync.update(update);\n        sync.cancelSync.render(render);\n        valueSubscriptions.forEach(remove => remove());\n        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n        lifecycles.clearAllListeners();\n        instance = undefined;\n        isMounted = false;\n      },\n\n      /**\n       * Add a child visual element to our set of children.\n       */\n      addVariantChild(child) {\n        var _a;\n\n        const closestVariantNode = element.getClosestVariantNode();\n\n        if (closestVariantNode) {\n          (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n          return () => closestVariantNode.variantChildren.delete(child);\n        }\n      },\n\n      sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!sortNodePosition || treeType !== other.treeType) return 0;\n        return sortNodePosition(element.getInstance(), other.getInstance());\n      },\n\n      /**\n       * Returns the closest variant node in the tree starting from\n       * this visual element.\n       */\n      getClosestVariantNode: () => isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode(),\n\n      /**\n       * Expose the latest layoutId prop.\n       */\n      getLayoutId: () => props.layoutId,\n\n      /**\n       * Returns the current instance.\n       */\n      getInstance: () => instance,\n\n      /**\n       * Get/set the latest static values.\n       */\n      getStaticValue: key => latestValues[key],\n      setStaticValue: (key, value) => latestValues[key] = value,\n\n      /**\n       * Returns the latest motion value state. Currently only used to take\n       * a snapshot of the visual element - perhaps this can return the whole\n       * visual state\n       */\n      getLatestValues: () => latestValues,\n\n      /**\n       * Set the visiblity of the visual element. If it's changed, schedule\n       * a render to reflect these changes.\n       */\n      setVisibility(visibility) {\n        if (element.isVisible === visibility) return;\n        element.isVisible = visibility;\n        element.scheduleRender();\n      },\n\n      /**\n       * Make a target animatable by Popmotion. For instance, if we're\n       * trying to animate width from 100px to 100vw we need to measure 100vw\n       * in pixels to determine what we really need to animate to. This is also\n       * pluggable to support Framer's custom value types like Color,\n       * and CSS variables.\n       */\n      makeTargetAnimatable(target) {\n        let canMutate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return makeTargetAnimatable(element, target, props, canMutate);\n      },\n\n      /**\n       * Measure the current viewport box with or without transforms.\n       * Only measures axis-aligned boxes, rotate and skew must be manually\n       * removed with a re-render to work.\n       */\n      measureViewportBox() {\n        return measureViewportBox(instance, props);\n      },\n\n      // Motion values ========================\n\n      /**\n       * Add a motion value and bind it to this visual element.\n       */\n      addValue(key, value) {\n        // Remove existing value if it exists\n        if (element.hasValue(key)) element.removeValue(key);\n        values.set(key, value);\n        latestValues[key] = value.get();\n        bindToMotionValue(key, value);\n      },\n\n      /**\n       * Remove a motion value and unbind any active subscriptions.\n       */\n      removeValue(key) {\n        var _a;\n\n        values.delete(key);\n        (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        valueSubscriptions.delete(key);\n        delete latestValues[key];\n        removeValueFromRenderState(key, renderState);\n      },\n\n      /**\n       * Check whether we have a motion value for this key\n       */\n      hasValue: key => values.has(key),\n\n      /**\n       * Get a motion value for this key. If called with a default\n       * value, we'll create one if none exists.\n       */\n      getValue(key, defaultValue) {\n        let value = values.get(key);\n\n        if (value === undefined && defaultValue !== undefined) {\n          value = motionValue(defaultValue);\n          element.addValue(key, value);\n        }\n\n        return value;\n      },\n\n      /**\n       * Iterate over our motion values.\n       */\n      forEachValue: callback => values.forEach(callback),\n\n      /**\n       * If we're trying to animate to a previously unencountered value,\n       * we need to check for it in our state and as a last resort read it\n       * directly from the instance (which might have performance implications).\n       */\n      readValue: key => {\n        var _a;\n\n        return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n      },\n\n      /**\n       * Set the base target to later animate back to. This is currently\n       * only hydrated on creation and when we first read a value.\n       */\n      setBaseTarget(key, value) {\n        baseTarget[key] = value;\n      },\n\n      /**\n       * Find the base target for a value thats been removed from all animation\n       * props.\n       */\n      getBaseTarget(key) {\n        if (getBaseTarget) {\n          const target = getBaseTarget(props, key);\n          if (target !== undefined && !isMotionValue(target)) return target;\n        }\n\n        return baseTarget[key];\n      }\n\n    }, lifecycles), {\n      /**\n       * Build the renderer state based on the latest visual state.\n       */\n      build() {\n        triggerBuild();\n        return renderState;\n      },\n\n      /**\n       * Schedule a render on the next animation frame.\n       */\n      scheduleRender() {\n        sync__default[\"default\"].render(render, false, true);\n      },\n\n      /**\n       * Synchronously fire render. It's prefered that we batch renders but\n       * in many circumstances, like layout measurement, we need to run this\n       * synchronously. However in those instances other measures should be taken\n       * to batch reads/writes.\n       */\n      syncRender: render,\n\n      /**\n       * Update the provided props. Ensure any newly-added motion values are\n       * added to our map, old ones removed, and listeners updated.\n       */\n      setProps(newProps) {\n        if (newProps.transformTemplate || props.transformTemplate) {\n          element.scheduleRender();\n        }\n\n        props = newProps;\n        lifecycles.updatePropListeners(newProps);\n        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n      },\n\n      getProps: () => props,\n      // Variants ==============================\n\n      /**\n       * Returns the variant definition with a given name.\n       */\n      getVariant: name => {\n        var _a;\n\n        return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name];\n      },\n\n      /**\n       * Returns the defined default transition on this component.\n       */\n      getDefaultTransition: () => props.transition,\n      getTransformPagePoint: () => {\n        return props.transformPagePoint;\n      },\n\n      /**\n       * Used by child variant nodes to get the closest ancestor variant props.\n       */\n      getVariantContext() {\n        let startAtParent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (startAtParent) return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n\n        if (!isControllingVariants) {\n          const context = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n\n          if (props.initial !== undefined) {\n            context.initial = props.initial;\n          }\n\n          return context;\n        }\n\n        const context = {};\n\n        for (let i = 0; i < numVariantProps; i++) {\n          const name = variantProps[i];\n          const prop = props[name];\n\n          if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n          }\n        }\n\n        return context;\n      }\n\n    });\n    return element;\n  };\n};\n\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nfunction isCSSVariable(value) {\n  return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\n\n\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\n\nfunction parseCSSVariable(current) {\n  const match = cssVariableRegex.exec(current);\n  if (!match) return [,];\n  const [, token, fallback] = match;\n  return [token, fallback];\n}\n\nconst maxDepth = 4;\n\nfunction getVariableValue(current, element) {\n  let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  heyListen.invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n  const [token, fallback] = parseCSSVariable(current); // No CSS variable detected\n\n  if (!token) return; // Attempt to read this CSS variable off the element\n\n  const resolved = window.getComputedStyle(element).getPropertyValue(token);\n\n  if (resolved) {\n    return resolved.trim();\n  } else if (isCSSVariable(fallback)) {\n    // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n    return getVariableValue(fallback, element, depth + 1);\n  } else {\n    return fallback;\n  }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\n\n\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n  var _b;\n\n  var target = tslib.__rest(_a, []);\n\n  const element = visualElement.getInstance();\n  if (!(element instanceof Element)) return {\n    target,\n    transitionEnd\n  }; // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n  // only if they change but I think this reads clearer and this isn't a performance-critical path.\n\n  if (transitionEnd) {\n    transitionEnd = Object.assign({}, transitionEnd);\n  } // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n\n\n  visualElement.forEachValue(value => {\n    const current = value.get();\n    if (!isCSSVariable(current)) return;\n    const resolved = getVariableValue(current, element);\n    if (resolved) value.set(resolved);\n  }); // Cycle through every target property and resolve CSS variables. Currently\n  // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n\n  for (const key in target) {\n    const current = target[key];\n    if (!isCSSVariable(current)) continue;\n    const resolved = getVariableValue(current, element);\n    if (!resolved) continue; // Clone target if it hasn't already been\n\n    target[key] = resolved; // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n    // CSS variable. This will ensure that after the animation the component will reflect\n    // changes in the value of the CSS variable.\n\n    if (transitionEnd) (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : transitionEnd[key] = current;\n  }\n\n  return {\n    target,\n    transitionEnd\n  };\n}\n\nconst positionalKeys = new Set([\"width\", \"height\", \"top\", \"left\", \"right\", \"bottom\", \"x\", \"y\"]);\n\nconst isPositionalKey = key => positionalKeys.has(key);\n\nconst hasPositionalKey = target => {\n  return Object.keys(target).some(isPositionalKey);\n};\n\nconst setAndResetVelocity = (value, to) => {\n  // Looks odd but setting it twice doesn't render, it'll just\n  // set both prev and current to the latest value\n  value.set(to, false);\n  value.set(to);\n};\n\nconst isNumOrPxType = v => v === styleValueTypes.number || v === styleValueTypes.px;\n\nvar BoundingBoxDimension;\n\n(function (BoundingBoxDimension) {\n  BoundingBoxDimension[\"width\"] = \"width\";\n  BoundingBoxDimension[\"height\"] = \"height\";\n  BoundingBoxDimension[\"left\"] = \"left\";\n  BoundingBoxDimension[\"right\"] = \"right\";\n  BoundingBoxDimension[\"top\"] = \"top\";\n  BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\n\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\n\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, _ref37) => {\n  let {\n    transform\n  } = _ref37;\n  if (transform === \"none\" || !transform) return 0;\n  const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n\n  if (matrix3d) {\n    return getPosFromMatrix(matrix3d[1], pos3);\n  } else {\n    const matrix = transform.match(/^matrix\\((.+)\\)$/);\n\n    if (matrix) {\n      return getPosFromMatrix(matrix[1], pos2);\n    } else {\n      return 0;\n    }\n  }\n};\n\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformProps.filter(key => !transformKeys.has(key));\n\nfunction removeNonTranslationalTransform(visualElement) {\n  const removedTransforms = [];\n  nonTranslationalTransformKeys.forEach(key => {\n    const value = visualElement.getValue(key);\n\n    if (value !== undefined) {\n      removedTransforms.push([key, value.get()]);\n      value.set(key.startsWith(\"scale\") ? 1 : 0);\n    }\n  }); // Apply changes to element before measurement\n\n  if (removedTransforms.length) visualElement.syncRender();\n  return removedTransforms;\n}\n\nconst positionalValues = {\n  // Dimensions\n  width: (_ref38, _ref39) => {\n    let {\n      x\n    } = _ref38;\n    let {\n      paddingLeft = \"0\",\n      paddingRight = \"0\"\n    } = _ref39;\n    return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);\n  },\n  height: (_ref40, _ref41) => {\n    let {\n      y\n    } = _ref40;\n    let {\n      paddingTop = \"0\",\n      paddingBottom = \"0\"\n    } = _ref41;\n    return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);\n  },\n  top: (_bbox, _ref42) => {\n    let {\n      top\n    } = _ref42;\n    return parseFloat(top);\n  },\n  left: (_bbox, _ref43) => {\n    let {\n      left\n    } = _ref43;\n    return parseFloat(left);\n  },\n  bottom: (_ref44, _ref45) => {\n    let {\n      y\n    } = _ref44;\n    let {\n      top\n    } = _ref45;\n    return parseFloat(top) + (y.max - y.min);\n  },\n  right: (_ref46, _ref47) => {\n    let {\n      x\n    } = _ref46;\n    let {\n      left\n    } = _ref47;\n    return parseFloat(left) + (x.max - x.min);\n  },\n  // Transform\n  x: getTranslateFromMatrix(4, 13),\n  y: getTranslateFromMatrix(5, 14)\n};\n\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n  const originBbox = visualElement.measureViewportBox();\n  const element = visualElement.getInstance();\n  const elementComputedStyle = getComputedStyle(element);\n  const {\n    display\n  } = elementComputedStyle;\n  const origin = {}; // If the element is currently set to display: \"none\", make it visible before\n  // measuring the target bounding box\n\n  if (display === \"none\") {\n    visualElement.setStaticValue(\"display\", target.display || \"block\");\n  }\n  /**\n   * Record origins before we render and update styles\n   */\n\n\n  changedKeys.forEach(key => {\n    origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n  }); // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n\n  visualElement.syncRender();\n  const targetBbox = visualElement.measureViewportBox();\n  changedKeys.forEach(key => {\n    // Restore styles to their **calculated computed style**, not their actual\n    // originally set style. This allows us to animate between equivalent pixel units.\n    const value = visualElement.getValue(key);\n    setAndResetVelocity(value, origin[key]);\n    target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n  });\n  return target;\n};\n\nconst checkAndConvertChangedValueTypes = function (visualElement, target) {\n  let origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let transitionEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  target = Object.assign({}, target);\n  transitionEnd = Object.assign({}, transitionEnd);\n  const targetPositionalKeys = Object.keys(target).filter(isPositionalKey); // We want to remove any transform values that could affect the element's bounding box before\n  // it's measured. We'll reapply these later.\n\n  let removedTransformValues = [];\n  let hasAttemptedToRemoveTransformValues = false;\n  const changedValueTypeKeys = [];\n  targetPositionalKeys.forEach(key => {\n    const value = visualElement.getValue(key);\n    if (!visualElement.hasValue(key)) return;\n    let from = origin[key];\n    let fromType = findDimensionValueType(from);\n    const to = target[key];\n    let toType; // TODO: The current implementation of this basically throws an error\n    // if you try and do value conversion via keyframes. There's probably\n    // a way of doing this but the performance implications would need greater scrutiny,\n    // as it'd be doing multiple resize-remeasure operations.\n\n    if (isKeyframesTarget(to)) {\n      const numKeyframes = to.length;\n      const fromIndex = to[0] === null ? 1 : 0;\n      from = to[fromIndex];\n      fromType = findDimensionValueType(from);\n\n      for (let i = fromIndex; i < numKeyframes; i++) {\n        if (!toType) {\n          toType = findDimensionValueType(to[i]);\n          heyListen.invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), \"Keyframes must be of the same dimension as the current value\");\n        } else {\n          heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n        }\n      }\n    } else {\n      toType = findDimensionValueType(to);\n    }\n\n    if (fromType !== toType) {\n      // If they're both just number or px, convert them both to numbers rather than\n      // relying on resize/remeasure to convert (which is wasteful in this situation)\n      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n        const current = value.get();\n\n        if (typeof current === \"string\") {\n          value.set(parseFloat(current));\n        }\n\n        if (typeof to === \"string\") {\n          target[key] = parseFloat(to);\n        } else if (Array.isArray(to) && toType === styleValueTypes.px) {\n          target[key] = to.map(parseFloat);\n        }\n      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from === 0 || to === 0)) {\n        // If one or the other value is 0, it's safe to coerce it to the\n        // type of the other without measurement\n        if (from === 0) {\n          value.set(toType.transform(from));\n        } else {\n          target[key] = fromType.transform(to);\n        }\n      } else {\n        // If we're going to do value conversion via DOM measurements, we first\n        // need to remove non-positional transform values that could affect the bbox measurements.\n        if (!hasAttemptedToRemoveTransformValues) {\n          removedTransformValues = removeNonTranslationalTransform(visualElement);\n          hasAttemptedToRemoveTransformValues = true;\n        }\n\n        changedValueTypeKeys.push(key);\n        transitionEnd[key] = transitionEnd[key] !== undefined ? transitionEnd[key] : target[key];\n        setAndResetVelocity(value, to);\n      }\n    }\n  });\n\n  if (changedValueTypeKeys.length) {\n    const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0 ? window.pageYOffset : null;\n    const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys); // If we removed transform values, reapply them before the next render\n\n    if (removedTransformValues.length) {\n      removedTransformValues.forEach(_ref48 => {\n        let [key, value] = _ref48;\n        visualElement.getValue(key).set(value);\n      });\n    } // Reapply original values\n\n\n    visualElement.syncRender(); // Restore scroll position\n\n    if (isBrowser && scrollY !== null) {\n      window.scrollTo({\n        top: scrollY\n      });\n    }\n\n    return {\n      target: convertedTarget,\n      transitionEnd\n    };\n  } else {\n    return {\n      target,\n      transitionEnd\n    };\n  }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\n\n\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd) : {\n    target,\n    transitionEnd\n  };\n}\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\n\n\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n  const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n  target = resolved.target;\n  transitionEnd = resolved.transitionEnd;\n  return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nfunction getComputedStyle$1(element) {\n  return window.getComputedStyle(element);\n}\n\nconst htmlConfig = {\n  treeType: \"dom\",\n\n  readValueFromInstance(domElement, key) {\n    if (isTransformProp(key)) {\n      const defaultType = getDefaultValueType(key);\n      return defaultType ? defaultType.default || 0 : 0;\n    } else {\n      const computedStyle = getComputedStyle$1(domElement);\n      const value = (isCSSVariable$1(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;\n      return typeof value === \"string\" ? value.trim() : value;\n    }\n  },\n\n  sortNodePosition(a, b) {\n    /**\n     * compareDocumentPosition returns a bitmask, by using the bitwise &\n     * we're returning true if 2 in that bitmask is set to true. 2 is set\n     * to true if b preceeds a.\n     */\n    return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n  },\n\n  getBaseTarget(props, key) {\n    var _a;\n\n    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n  },\n\n  measureViewportBox(element, _ref49) {\n    let {\n      transformPagePoint\n    } = _ref49;\n    return measureViewportBox(element, transformPagePoint);\n  },\n\n  /**\n   * Reset the transform on the current Element. This is called as part\n   * of a batched process across the entire layout tree. To remove this write\n   * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n   * works\n   */\n  resetTransform(element, domElement, props) {\n    const {\n      transformTemplate\n    } = props;\n    domElement.style.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\"; // Ensure that whatever happens next, we restore our transform on the next frame\n\n    element.scheduleRender();\n  },\n\n  restoreTransform(instance, mutableState) {\n    instance.style.transform = mutableState.style.transform;\n  },\n\n  removeValueFromRenderState(key, _ref50) {\n    let {\n      vars,\n      style\n    } = _ref50;\n    delete vars[key];\n    delete style[key];\n  },\n\n  /**\n   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n   * can be animated by Motion.\n   */\n  makeTargetAnimatable(element, _a, _b, isMounted) {\n    var {\n      transition,\n      transitionEnd\n    } = _a,\n        target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    var transformValues = _b.transformValues;\n\n    if (isMounted === void 0) {\n      isMounted = true;\n    }\n\n    let origin = getOrigin(target, transition || {}, element);\n    /**\n     * If Framer has provided a function to convert `Color` etc value types, convert them\n     */\n\n    if (transformValues) {\n      if (transitionEnd) transitionEnd = transformValues(transitionEnd);\n      if (target) target = transformValues(target);\n      if (origin) origin = transformValues(origin);\n    }\n\n    if (isMounted) {\n      checkTargetForNewValues(element, target, origin);\n      const parsed = parseDomVariant(element, target, origin, transitionEnd);\n      transitionEnd = parsed.transitionEnd;\n      target = parsed.target;\n    }\n\n    return Object.assign({\n      transition,\n      transitionEnd\n    }, target);\n  },\n\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n\n  build(element, renderState, latestValues, options, props) {\n    if (element.isVisible !== undefined) {\n      renderState.style.visibility = element.isVisible ? \"visible\" : \"hidden\";\n    }\n\n    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n  },\n\n  render: renderHTML\n};\nconst htmlVisualElement = visualElement(htmlConfig);\nconst svgVisualElement = visualElement(Object.assign(Object.assign({}, htmlConfig), {\n  getBaseTarget(props, key) {\n    return props[key];\n  },\n\n  readValueFromInstance(domElement, key) {\n    var _a;\n\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n\n  scrapeMotionValuesFromProps,\n\n  build(_element, renderState, latestValues, options, props) {\n    buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n  },\n\n  render: renderSVG\n}));\n\nconst createDomVisualElement = (Component, options) => {\n  return isSVGComponent(Component) ? svgVisualElement(options, {\n    enableHardwareAcceleration: false\n  }) : htmlVisualElement(options, {\n    enableHardwareAcceleration: true\n  });\n};\n\nfunction pixelsToPercent(pixels, axis) {\n  if (axis.max === axis.min) return 0;\n  return pixels / (axis.max - axis.min) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\n\n\nconst correctBorderRadius = {\n  correct: (latest, node) => {\n    if (!node.target) return latest;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n\n    if (typeof latest === \"string\") {\n      if (styleValueTypes.px.test(latest)) {\n        latest = parseFloat(latest);\n      } else {\n        return latest;\n      }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n\n\n    const x = pixelsToPercent(latest, node.target.x);\n    const y = pixelsToPercent(latest, node.target.y);\n    return `${x}% ${y}%`;\n  }\n};\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n  correct: (latest, _ref51) => {\n    let {\n      treeScale,\n      projectionDelta\n    } = _ref51;\n    const original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n\n    const containsCSSVariables = latest.includes(\"var(\");\n    const cssVariables = [];\n\n    if (containsCSSVariables) {\n      latest = latest.replace(cssVariableRegex, match => {\n        cssVariables.push(match);\n        return varToken;\n      });\n    }\n\n    const shadow = styleValueTypes.complex.parse(latest); // TODO: Doesn't support multiple shadows\n\n    if (shadow.length > 5) return original;\n    const template = styleValueTypes.complex.createTransformer(latest);\n    const offset = typeof shadow[0] !== \"number\" ? 1 : 0; // Calculate the overall context scale\n\n    const xScale = projectionDelta.x.scale * treeScale.x;\n    const yScale = projectionDelta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n\n    const averageScale = popmotion.mix(xScale, yScale, 0.5); // Blur\n\n    if (typeof shadow[2 + offset] === \"number\") shadow[2 + offset] /= averageScale; // Spread\n\n    if (typeof shadow[3 + offset] === \"number\") shadow[3 + offset] /= averageScale;\n    let output = template(shadow);\n\n    if (containsCSSVariables) {\n      let i = 0;\n      output = output.replace(varToken, () => {\n        const cssVariable = cssVariables[i];\n        i++;\n        return cssVariable;\n      });\n    }\n\n    return output;\n  }\n};\n\nclass MeasureLayoutWithContext extends React__default[\"default\"].Component {\n  /**\n   * This only mounts projection nodes for components that\n   * need measuring, we might want to do it for all components\n   * in order to incorporate transforms\n   */\n  componentDidMount() {\n    const {\n      visualElement,\n      layoutGroup,\n      switchLayoutGroup,\n      layoutId\n    } = this.props;\n    const {\n      projection\n    } = visualElement;\n    addScaleCorrector(defaultScaleCorrectors);\n\n    if (projection) {\n      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group) layoutGroup.group.add(projection);\n\n      if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n        switchLayoutGroup.register(projection);\n      }\n\n      projection.root.didUpdate();\n      projection.addEventListener(\"animationComplete\", () => {\n        this.safeToRemove();\n      });\n      projection.setOptions(Object.assign(Object.assign({}, projection.options), {\n        onExitComplete: () => this.safeToRemove()\n      }));\n    }\n\n    globalProjectionState.hasEverUpdated = true;\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    const {\n      layoutDependency,\n      visualElement,\n      drag,\n      isPresent\n    } = this.props;\n    const projection = visualElement.projection;\n    if (!projection) return null;\n    /**\n     * TODO: We use this data in relegate to determine whether to\n     * promote a previous element. There's no guarantee its presence data\n     * will have updated by this point - if a bug like this arises it will\n     * have to be that we markForRelegation and then find a new lead some other way,\n     * perhaps in didUpdate\n     */\n\n    projection.isPresent = isPresent;\n\n    if (drag || prevProps.layoutDependency !== layoutDependency || layoutDependency === undefined) {\n      projection.willUpdate();\n    } else {\n      this.safeToRemove();\n    }\n\n    if (prevProps.isPresent !== isPresent) {\n      if (isPresent) {\n        projection.promote();\n      } else if (!projection.relegate()) {\n        /**\n         * If there's another stack member taking over from this one,\n         * it's in charge of the exit animation and therefore should\n         * be in charge of the safe to remove. Otherwise we call it here.\n         */\n        sync__default[\"default\"].postRender(() => {\n          var _a;\n\n          if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n            this.safeToRemove();\n          }\n        });\n      }\n    }\n\n    return null;\n  }\n\n  componentDidUpdate() {\n    const {\n      projection\n    } = this.props.visualElement;\n\n    if (projection) {\n      projection.root.didUpdate();\n\n      if (!projection.currentAnimation && projection.isLead()) {\n        this.safeToRemove();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      visualElement,\n      layoutGroup,\n      switchLayoutGroup: promoteContext\n    } = this.props;\n    const {\n      projection\n    } = visualElement;\n\n    if (projection) {\n      projection.scheduleCheckAfterUnmount();\n      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group) layoutGroup.group.remove(projection);\n      if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister) promoteContext.deregister(projection);\n    }\n  }\n\n  safeToRemove() {\n    const {\n      safeToRemove\n    } = this.props;\n    safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nfunction MeasureLayout(props) {\n  const [isPresent, safeToRemove] = usePresence();\n  const layoutGroup = React.useContext(LayoutGroupContext);\n  return React__default[\"default\"].createElement(MeasureLayoutWithContext, Object.assign({}, props, {\n    layoutGroup: layoutGroup,\n    switchLayoutGroup: React.useContext(SwitchLayoutGroupContext),\n    isPresent: isPresent,\n    safeToRemove: safeToRemove\n  }));\n}\n\nconst defaultScaleCorrectors = {\n  borderRadius: Object.assign(Object.assign({}, correctBorderRadius), {\n    applyTo: [\"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomLeftRadius\", \"borderBottomRightRadius\"]\n  }),\n  borderTopLeftRadius: correctBorderRadius,\n  borderTopRightRadius: correctBorderRadius,\n  borderBottomLeftRadius: correctBorderRadius,\n  borderBottomRightRadius: correctBorderRadius,\n  boxShadow: correctBoxShadow\n};\nconst layoutFeatures = {\n  measureLayout: MeasureLayout\n};\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\n\nfunction animate(from, to) {\n  let transition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const value = isMotionValue(from) ? from : motionValue(from);\n  startAnimation(\"\", value, to, transition);\n  return {\n    stop: () => value.stop(),\n    isAnimating: () => value.isAnimating()\n  };\n}\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\n\nconst asNumber = value => typeof value === \"string\" ? parseFloat(value) : value;\n\nconst isPx = value => typeof value === \"number\" || styleValueTypes.px.test(value);\n\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n  var _a, _b, _c, _d;\n\n  if (shouldCrossfadeOpacity) {\n    target.opacity = popmotion.mix(0, // (follow?.opacity as number) ?? 0,\n    // TODO Reinstate this if only child\n    (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n    target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n  } else if (isOnlyMember) {\n    target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n  }\n  /**\n   * Mix border radius\n   */\n\n\n  for (let i = 0; i < numBorders; i++) {\n    const borderLabel = `border${borders[i]}Radius`;\n    let followRadius = getRadius(follow, borderLabel);\n    let leadRadius = getRadius(lead, borderLabel);\n    if (followRadius === undefined && leadRadius === undefined) continue;\n    followRadius || (followRadius = 0);\n    leadRadius || (leadRadius = 0);\n    const canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);\n\n    if (canMix) {\n      target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n\n      if (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) {\n        target[borderLabel] += \"%\";\n      }\n    } else {\n      target[borderLabel] = leadRadius;\n    }\n  }\n  /**\n   * Mix rotation\n   */\n\n\n  if (follow.rotate || lead.rotate) {\n    target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress);\n  }\n}\n\nfunction getRadius(values, radiusName) {\n  var _a;\n\n  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n} // /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\n\n\nconst easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\n\nfunction compress(min, max, easing) {\n  return p => {\n    // Could replace ifs with clamp\n    if (p < min) return 0;\n    if (p > max) return 1;\n    return easing(popmotion.progress(min, max, p));\n  };\n}\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\n\n\nfunction copyAxisInto(axis, originAxis) {\n  axis.min = originAxis.min;\n  axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\n\n\nfunction copyBoxInto(box, originBox) {\n  copyAxisInto(box.x, originBox.x);\n  copyAxisInto(box.y, originBox.y);\n}\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\n\n\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n  point -= translate;\n  point = scalePoint(point, 1 / scale, originPoint);\n\n  if (boxScale !== undefined) {\n    point = scalePoint(point, 1 / boxScale, originPoint);\n  }\n\n  return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\n\n\nfunction removeAxisDelta(axis) {\n  let translate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let scale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n  let boxScale = arguments.length > 4 ? arguments[4] : undefined;\n  let originAxis = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : axis;\n  let sourceAxis = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : axis;\n\n  if (styleValueTypes.percent.test(translate)) {\n    translate = parseFloat(translate);\n    const relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);\n    translate = relativeProgress - sourceAxis.min;\n  }\n\n  if (typeof translate !== \"number\") return;\n  let originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);\n  if (axis === originAxis) originPoint -= translate;\n  axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n  axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\n\nfunction removeAxisTransforms(axis, transforms, _ref52, origin, sourceAxis) {\n  let [key, scaleKey, originKey] = _ref52;\n  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\n\n\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n  removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n  removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nfunction isAxisDeltaZero(delta) {\n  return delta.translate === 0 && delta.scale === 1;\n}\n\nfunction isDeltaZero(delta) {\n  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\n\nfunction boxEquals(a, b) {\n  return a.x.min === b.x.min && a.x.max === b.x.max && a.y.min === b.y.min && a.y.max === b.y.max;\n}\n\nclass NodeStack {\n  constructor() {\n    this.members = [];\n  }\n\n  add(node) {\n    addUniqueItem(this.members, node);\n    node.scheduleRender();\n  }\n\n  remove(node) {\n    removeItem(this.members, node);\n\n    if (node === this.prevLead) {\n      this.prevLead = undefined;\n    }\n\n    if (node === this.lead) {\n      const prevLead = this.members[this.members.length - 1];\n\n      if (prevLead) {\n        this.promote(prevLead);\n      }\n    }\n  }\n\n  relegate(node) {\n    const indexOfNode = this.members.findIndex(member => node === member);\n    if (indexOfNode === 0) return false;\n    /**\n     * Find the next projection node that is present\n     */\n\n    let prevLead;\n\n    for (let i = indexOfNode; i >= 0; i--) {\n      const member = this.members[i];\n\n      if (member.isPresent !== false) {\n        prevLead = member;\n        break;\n      }\n    }\n\n    if (prevLead) {\n      this.promote(prevLead);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  promote(node, preserveFollowOpacity) {\n    var _a;\n\n    const prevLead = this.lead;\n    if (node === prevLead) return;\n    this.prevLead = prevLead;\n    this.lead = node;\n    node.show();\n\n    if (prevLead) {\n      prevLead.instance && prevLead.scheduleRender();\n      node.scheduleRender();\n      node.resumeFrom = prevLead;\n\n      if (preserveFollowOpacity) {\n        node.resumeFrom.preserveOpacity = true;\n      }\n\n      if (prevLead.snapshot) {\n        node.snapshot = prevLead.snapshot;\n        node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;\n        node.snapshot.isShared = true;\n      }\n\n      if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n        node.isLayoutDirty = true;\n      }\n\n      const {\n        crossfade\n      } = node.options;\n\n      if (crossfade === false) {\n        prevLead.hide();\n      }\n      /**\n       * TODO:\n       *   - Test border radius when previous node was deleted\n       *   - boxShadow mixing\n       *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n       *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n       *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n       * ---\n       *   - Crossfade opacity of root nodes\n       *   - layoutId changes after animation\n       *   - layoutId changes mid animation\n       */\n\n    }\n  }\n\n  exitAnimationComplete() {\n    this.members.forEach(node => {\n      var _a, _b, _c, _d, _e;\n\n      (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n    });\n  }\n\n  scheduleRender() {\n    this.members.forEach(node => {\n      node.instance && node.scheduleRender(false);\n    });\n  }\n  /**\n   * Clear any leads that have been removed this render to prevent them from being\n   * used in future animations and to prevent memory leaks\n   */\n\n\n  removeLeadSnapshot() {\n    if (this.lead && this.lead.snapshot) {\n      this.lead.snapshot = undefined;\n    }\n  }\n\n}\n\nconst identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\n\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n  /**\n   * The translations we use to calculate are always relative to the viewport coordinate space.\n   * But when we apply scales, we also scale the coordinate space of an element and its children.\n   * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n   * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n   */\n  const xTranslate = delta.x.translate / treeScale.x;\n  const yTranslate = delta.y.translate / treeScale.y;\n  let transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n  /**\n   * Apply scale correction for the tree transform.\n   * This will apply scale to the screen-orientated axes.\n   */\n\n  transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n\n  if (latestTransform) {\n    const {\n      rotate,\n      rotateX,\n      rotateY\n    } = latestTransform;\n    if (rotate) transform += `rotate(${rotate}deg) `;\n    if (rotateX) transform += `rotateX(${rotateX}deg) `;\n    if (rotateY) transform += `rotateY(${rotateY}deg) `;\n  }\n  /**\n   * Apply scale to match the size of the element to the size we want it.\n   * This will apply scale to the element-orientated axes.\n   */\n\n\n  const elementScaleX = delta.x.scale * treeScale.x;\n  const elementScaleY = delta.y.scale * treeScale.y;\n  transform += `scale(${elementScaleX}, ${elementScaleY})`;\n  return transform === identityProjection ? \"none\" : transform;\n}\n\nconst compareByDepth = (a, b) => a.depth - b.depth;\n\nclass FlatTree {\n  constructor() {\n    this.children = [];\n    this.isDirty = false;\n  }\n\n  add(child) {\n    addUniqueItem(this.children, child);\n    this.isDirty = true;\n  }\n\n  remove(child) {\n    removeItem(this.children, child);\n    this.isDirty = true;\n  }\n\n  forEach(callback) {\n    this.isDirty && this.children.sort(compareByDepth);\n    this.isDirty = false;\n    this.children.forEach(callback);\n  }\n\n}\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\n\n\nconst animationTarget = 1000;\n\nfunction createProjectionNode(_ref53) {\n  let {\n    attachResizeListener,\n    defaultParent,\n    measureScroll,\n    checkIsScrollRoot,\n    resetTransform\n  } = _ref53;\n  return class ProjectionNode {\n    constructor(id) {\n      let latestValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();\n\n      /**\n       * A Set containing all this component's children. This is used to iterate\n       * through the children.\n       *\n       * TODO: This could be faster to iterate as a flat array stored on the root node.\n       */\n      this.children = new Set();\n      /**\n       * Options for the node. We use this to configure what kind of layout animations\n       * we should perform (if any).\n       */\n\n      this.options = {};\n      /**\n       * We use this to detect when its safe to shut down part of a projection tree.\n       * We have to keep projecting children for scale correction and relative projection\n       * until all their parents stop performing layout animations.\n       */\n\n      this.isTreeAnimating = false;\n      this.isAnimationBlocked = false;\n      /**\n       * Flag to true if we think this layout has been changed. We can't always know this,\n       * currently we set it to true every time a component renders, or if it has a layoutDependency\n       * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n       * and if one node is dirtied, they all are.\n       */\n\n      this.isLayoutDirty = false;\n      /**\n       * Block layout updates for instant layout transitions throughout the tree.\n       */\n\n      this.updateManuallyBlocked = false;\n      this.updateBlockedByResize = false;\n      /**\n       * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n       * call.\n       */\n\n      this.isUpdating = false;\n      /**\n       * If this is an SVG element we currently disable projection transforms\n       */\n\n      this.isSVG = false;\n      /**\n       * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n       * its projection styles.\n       */\n\n      this.needsReset = false;\n      /**\n       * Flags whether this node should have its transform reset prior to measuring.\n       */\n\n      this.shouldResetTransform = false;\n      /**\n       * An object representing the calculated contextual/accumulated/tree scale.\n       * This will be used to scale calculcated projection transforms, as these are\n       * calculated in screen-space but need to be scaled for elements to actually\n       * make it to their calculated destinations.\n       *\n       * TODO: Lazy-init\n       */\n\n      this.treeScale = {\n        x: 1,\n        y: 1\n      };\n      /**\n       *\n       */\n\n      this.eventHandlers = new Map(); // Note: Currently only running on root node\n\n      this.potentialNodes = new Map();\n\n      this.checkUpdateFailed = () => {\n        if (this.isUpdating) {\n          this.isUpdating = false;\n          this.clearAllSnapshots();\n        }\n      };\n\n      this.updateProjection = () => {\n        this.nodes.forEach(resolveTargetDelta);\n        this.nodes.forEach(calcProjection);\n      };\n\n      this.hasProjected = false;\n      this.isVisible = true;\n      this.animationProgress = 0;\n      /**\n       * Shared layout\n       */\n      // TODO Only running on root node\n\n      this.sharedNodes = new Map();\n      this.id = id;\n      this.latestValues = latestValues;\n      this.root = parent ? parent.root || parent : this;\n      this.path = parent ? [...parent.path, parent] : [];\n      this.parent = parent;\n      this.depth = parent ? parent.depth + 1 : 0;\n      id && this.root.registerPotentialNode(id, this);\n\n      for (let i = 0; i < this.path.length; i++) {\n        this.path[i].shouldResetTransform = true;\n      }\n\n      if (this.root === this) this.nodes = new FlatTree();\n    }\n\n    addEventListener(name, handler) {\n      if (!this.eventHandlers.has(name)) {\n        this.eventHandlers.set(name, new SubscriptionManager());\n      }\n\n      return this.eventHandlers.get(name).add(handler);\n    }\n\n    notifyListeners(name) {\n      const subscriptionManager = this.eventHandlers.get(name);\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n    }\n\n    hasListeners(name) {\n      return this.eventHandlers.has(name);\n    }\n\n    registerPotentialNode(id, node) {\n      this.potentialNodes.set(id, node);\n    }\n    /**\n     * Lifecycles\n     */\n\n\n    mount(instance) {\n      let isLayoutDirty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _a;\n\n      if (this.instance) return;\n      this.isSVG = instance instanceof SVGElement && instance.tagName !== \"svg\";\n      this.instance = instance;\n      const {\n        layoutId,\n        layout,\n        visualElement\n      } = this.options;\n\n      if (visualElement && !visualElement.getInstance()) {\n        visualElement.mount(instance);\n      }\n\n      this.root.nodes.add(this);\n      (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n      this.id && this.root.potentialNodes.delete(this.id);\n\n      if (isLayoutDirty && (layout || layoutId)) {\n        this.isLayoutDirty = true;\n      }\n\n      if (attachResizeListener) {\n        let unblockTimeout;\n\n        const resizeUnblockUpdate = () => this.root.updateBlockedByResize = false;\n\n        attachResizeListener(instance, () => {\n          this.root.updateBlockedByResize = true;\n          clearTimeout(unblockTimeout);\n          unblockTimeout = window.setTimeout(resizeUnblockUpdate, 250);\n\n          if (globalProjectionState.hasAnimatedSinceResize) {\n            globalProjectionState.hasAnimatedSinceResize = false;\n            this.nodes.forEach(finishAnimation);\n          }\n        });\n      }\n\n      if (layoutId) {\n        this.root.registerSharedNode(layoutId, this);\n      } // Only register the handler if it requires layout animation\n\n\n      if (this.options.animate !== false && visualElement && (layoutId || layout)) {\n        this.addEventListener(\"didUpdate\", _ref54 => {\n          let {\n            delta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n            layout: newLayout\n          } = _ref54;\n\n          var _a, _b, _c, _d, _e;\n\n          if (this.isTreeAnimationBlocked()) {\n            this.target = undefined;\n            this.relativeTarget = undefined;\n            return;\n          } // TODO: Check here if an animation exists\n\n\n          const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n          const {\n            onLayoutAnimationStart,\n            onLayoutAnimationComplete\n          } = visualElement.getProps();\n          /**\n           * The target layout of the element might stay the same,\n           * but its position relative to its parent has changed.\n           */\n\n          const targetChanged = !this.targetLayout || !boxEquals(this.targetLayout, newLayout) || hasRelativeTargetChanged;\n          /**\n           * If the layout hasn't seemed to have changed, it might be that the\n           * element is visually in the same place in the document but its position\n           * relative to its parent has indeed changed. So here we check for that.\n           */\n\n          const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n\n          if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !this.currentAnimation)) {\n            if (this.resumeFrom) {\n              this.resumingFrom = this.resumeFrom;\n              this.resumingFrom.resumingFrom = undefined;\n            }\n\n            this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n            const animationOptions = Object.assign(Object.assign({}, getValueTransition(layoutTransition, \"layout\")), {\n              onPlay: onLayoutAnimationStart,\n              onComplete: onLayoutAnimationComplete\n            });\n\n            if (visualElement.shouldReduceMotion) {\n              animationOptions.delay = 0;\n              animationOptions.type = false;\n            }\n\n            this.startAnimation(animationOptions);\n          } else {\n            /**\n             * If the layout hasn't changed and we have an animation that hasn't started yet,\n             * finish it immediately. Otherwise it will be animating from a location\n             * that was probably never commited to screen and look like a jumpy box.\n             */\n            if (!hasLayoutChanged && this.animationProgress === 0) {\n              this.finishAnimation();\n            }\n\n            this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n          }\n\n          this.targetLayout = newLayout;\n        });\n      }\n    }\n\n    unmount() {\n      var _a, _b;\n\n      this.options.layoutId && this.willUpdate();\n      this.root.nodes.remove(this);\n      (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n      (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n      this.instance = undefined;\n      sync.cancelSync.preRender(this.updateProjection);\n    } // only on the root\n\n\n    blockUpdate() {\n      this.updateManuallyBlocked = true;\n    }\n\n    unblockUpdate() {\n      this.updateManuallyBlocked = false;\n    }\n\n    isUpdateBlocked() {\n      return this.updateManuallyBlocked || this.updateBlockedByResize;\n    }\n\n    isTreeAnimationBlocked() {\n      var _a;\n\n      return this.isAnimationBlocked || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) || false;\n    } // Note: currently only running on root node\n\n\n    startUpdate() {\n      var _a;\n\n      if (this.isUpdateBlocked()) return;\n      this.isUpdating = true;\n      (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n    }\n\n    willUpdate() {\n      let shouldNotifyListeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var _a, _b, _c;\n\n      if (this.root.isUpdateBlocked()) {\n        (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n        return;\n      }\n\n      !this.root.isUpdating && this.root.startUpdate();\n      if (this.isLayoutDirty) return;\n      this.isLayoutDirty = true;\n\n      for (let i = 0; i < this.path.length; i++) {\n        const node = this.path[i];\n        node.shouldResetTransform = true;\n        /**\n         * TODO: Check we haven't updated the scroll\n         * since the last didUpdate\n         */\n\n        node.updateScroll();\n      }\n\n      const {\n        layoutId,\n        layout\n      } = this.options;\n      if (layoutId === undefined && !layout) return;\n      const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n      this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n      this.updateSnapshot();\n      shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n    } // Note: Currently only running on root node\n\n\n    didUpdate() {\n      const updateWasBlocked = this.isUpdateBlocked(); // When doing an instant transition, we skip the layout update,\n      // but should still clean up the measurements so that the next\n      // snapshot could be taken correctly.\n\n      if (updateWasBlocked) {\n        this.unblockUpdate();\n        this.clearAllSnapshots();\n        this.nodes.forEach(clearMeasurements);\n        return;\n      }\n\n      if (!this.isUpdating) return;\n      this.isUpdating = false;\n      /**\n       * Search for and mount newly-added projection elements.\n       *\n       * TODO: Every time a new component is rendered we could search up the tree for\n       * the closest mounted node and query from there rather than document.\n       */\n\n      if (this.potentialNodes.size) {\n        this.potentialNodes.forEach(mountNodeEarly);\n        this.potentialNodes.clear();\n      }\n      /**\n       * Write\n       */\n\n\n      this.nodes.forEach(resetTransformStyle);\n      /**\n       * Read ==================\n       */\n      // Update layout measurements of updated children\n\n      this.nodes.forEach(updateLayout);\n      /**\n       * Write\n       */\n      // Notify listeners that the layout is updated\n\n      this.nodes.forEach(notifyLayoutUpdate);\n      this.clearAllSnapshots(); // Flush any scheduled updates\n\n      sync.flushSync.update();\n      sync.flushSync.preRender();\n      sync.flushSync.render();\n    }\n\n    clearAllSnapshots() {\n      this.nodes.forEach(clearSnapshot);\n      this.sharedNodes.forEach(removeLeadSnapshots);\n    }\n\n    scheduleUpdateProjection() {\n      sync__default[\"default\"].preRender(this.updateProjection, false, true);\n    }\n\n    scheduleCheckAfterUnmount() {\n      /**\n       * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n       * we manually call didUpdate to give a chance to the siblings to animate.\n       * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n       */\n      sync__default[\"default\"].postRender(() => {\n        if (this.isLayoutDirty) {\n          this.root.didUpdate();\n        } else {\n          this.root.checkUpdateFailed();\n        }\n      });\n    }\n    /**\n     * Update measurements\n     */\n\n\n    updateSnapshot() {\n      if (this.snapshot || !this.instance) return;\n      const measured = this.measure();\n      const layout = this.removeTransform(this.removeElementScroll(measured));\n      roundBox(layout);\n      this.snapshot = {\n        measured,\n        layout,\n        latestValues: {}\n      };\n    }\n\n    updateLayout() {\n      var _a;\n\n      if (!this.instance) return; // TODO: Incorporate into a forwarded scroll offset\n\n      this.updateScroll();\n\n      if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {\n        return;\n      }\n      /**\n       * When a node is mounted, it simply resumes from the prevLead's\n       * snapshot instead of taking a new one, but the ancestors scroll\n       * might have updated while the prevLead is unmounted. We need to\n       * update the scroll again to make sure the layout we measure is\n       * up to date.\n       */\n\n\n      if (this.resumeFrom && !this.resumeFrom.instance) {\n        for (let i = 0; i < this.path.length; i++) {\n          const node = this.path[i];\n          node.updateScroll();\n        }\n      }\n\n      const measured = this.measure();\n      roundBox(measured);\n      const prevLayout = this.layout;\n      this.layout = {\n        measured,\n        actual: this.removeElementScroll(measured)\n      };\n      this.layoutCorrected = createBox();\n      this.isLayoutDirty = false;\n      this.projectionDelta = undefined;\n      this.notifyListeners(\"measure\", this.layout.actual);\n      (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n    }\n\n    updateScroll() {\n      if (this.options.layoutScroll && this.instance) {\n        this.isScrollRoot = checkIsScrollRoot(this.instance);\n        this.scroll = measureScroll(this.instance);\n      }\n    }\n\n    resetTransform() {\n      var _a;\n\n      if (!resetTransform) return;\n      const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n      const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n      const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n      const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n      const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n\n      if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {\n        resetTransform(this.instance, transformTemplateValue);\n        this.shouldResetTransform = false;\n        this.scheduleRender();\n      }\n    }\n\n    measure() {\n      const {\n        visualElement\n      } = this.options;\n      if (!visualElement) return createBox();\n      const box = visualElement.measureViewportBox(); // Remove viewport scroll to give page-relative coordinates\n\n      const {\n        scroll\n      } = this.root;\n\n      if (scroll) {\n        translateAxis(box.x, scroll.x);\n        translateAxis(box.y, scroll.y);\n      }\n\n      return box;\n    }\n\n    removeElementScroll(box) {\n      const boxWithoutScroll = createBox();\n      copyBoxInto(boxWithoutScroll, box);\n      /**\n       * Performance TODO: Keep a cumulative scroll offset down the tree\n       * rather than loop back up the path.\n       */\n\n      for (let i = 0; i < this.path.length; i++) {\n        const node = this.path[i];\n        const {\n          scroll,\n          options,\n          isScrollRoot\n        } = node;\n\n        if (node !== this.root && scroll && options.layoutScroll) {\n          /**\n           * If this is a new scroll root, we want to remove all previous scrolls\n           * from the viewport box.\n           */\n          if (isScrollRoot) {\n            copyBoxInto(boxWithoutScroll, box);\n            const {\n              scroll: rootScroll\n            } = this.root;\n            /**\n             * Undo the application of page scroll that was originally added\n             * to the measured bounding box.\n             */\n\n            if (rootScroll) {\n              translateAxis(boxWithoutScroll.x, -rootScroll.x);\n              translateAxis(boxWithoutScroll.y, -rootScroll.y);\n            }\n          }\n\n          translateAxis(boxWithoutScroll.x, scroll.x);\n          translateAxis(boxWithoutScroll.y, scroll.y);\n        }\n      }\n\n      return boxWithoutScroll;\n    }\n\n    applyTransform(box) {\n      let transformOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const withTransforms = createBox();\n      copyBoxInto(withTransforms, box);\n\n      for (let i = 0; i < this.path.length; i++) {\n        const node = this.path[i];\n\n        if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {\n          transformBox(withTransforms, {\n            x: -node.scroll.x,\n            y: -node.scroll.y\n          });\n        }\n\n        if (!hasTransform(node.latestValues)) continue;\n        transformBox(withTransforms, node.latestValues);\n      }\n\n      if (hasTransform(this.latestValues)) {\n        transformBox(withTransforms, this.latestValues);\n      }\n\n      return withTransforms;\n    }\n\n    removeTransform(box) {\n      var _a;\n\n      const boxWithoutTransform = createBox();\n      copyBoxInto(boxWithoutTransform, box);\n\n      for (let i = 0; i < this.path.length; i++) {\n        const node = this.path[i];\n        if (!node.instance) continue;\n        if (!hasTransform(node.latestValues)) continue;\n        hasScale(node.latestValues) && node.updateSnapshot();\n        const sourceBox = createBox();\n        const nodeBox = node.measure();\n        copyBoxInto(sourceBox, nodeBox);\n        removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n      }\n\n      if (hasTransform(this.latestValues)) {\n        removeBoxTransforms(boxWithoutTransform, this.latestValues);\n      }\n\n      return boxWithoutTransform;\n    }\n    /**\n     *\n     */\n\n\n    setTargetDelta(delta) {\n      this.targetDelta = delta;\n      this.root.scheduleUpdateProjection();\n    }\n\n    setOptions(options) {\n      var _a;\n\n      this.options = Object.assign(Object.assign(Object.assign({}, this.options), options), {\n        crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true\n      });\n    }\n\n    clearMeasurements() {\n      this.scroll = undefined;\n      this.layout = undefined;\n      this.snapshot = undefined;\n      this.prevTransformTemplateValue = undefined;\n      this.targetDelta = undefined;\n      this.target = undefined;\n      this.isLayoutDirty = false;\n    }\n    /**\n     * Frame calculations\n     */\n\n\n    resolveTargetDelta() {\n      var _a;\n\n      const {\n        layout,\n        layoutId\n      } = this.options;\n      /**\n       * If we have no layout, we can't perform projection, so early return\n       */\n\n      if (!this.layout || !(layout || layoutId)) return;\n      /**\n       * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n       * a relativeParent. This will allow a component to perform scale correction\n       * even if no animation has started.\n       */\n      // TODO If this is unsuccessful this currently happens every frame\n\n      if (!this.targetDelta && !this.relativeTarget) {\n        // TODO: This is a semi-repetition of further down this function, make DRY\n        this.relativeParent = this.getClosestProjectingParent();\n\n        if (this.relativeParent && this.relativeParent.layout) {\n          this.relativeTarget = createBox();\n          this.relativeTargetOrigin = createBox();\n          calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n        }\n      }\n      /**\n       * If we have no relative target or no target delta our target isn't valid\n       * for this frame.\n       */\n\n\n      if (!this.relativeTarget && !this.targetDelta) return;\n      /**\n       * Lazy-init target data structure\n       */\n\n      if (!this.target) {\n        this.target = createBox();\n        this.targetWithTransforms = createBox();\n      }\n      /**\n       * If we've got a relative box for this component, resolve it into a target relative to the parent.\n       */\n\n\n      if (this.relativeTarget && this.relativeTargetOrigin && ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n        calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n        /**\n         * If we've only got a targetDelta, resolve it into a target\n         */\n      } else if (this.targetDelta) {\n        if (Boolean(this.resumingFrom)) {\n          // TODO: This is creating a new object every frame\n          this.target = this.applyTransform(this.layout.actual);\n        } else {\n          copyBoxInto(this.target, this.layout.actual);\n        }\n\n        applyBoxDelta(this.target, this.targetDelta);\n      } else {\n        /**\n         * If no target, use own layout as target\n         */\n        copyBoxInto(this.target, this.layout.actual);\n      }\n      /**\n       * If we've been told to attempt to resolve a relative target, do so.\n       */\n\n\n      if (this.attemptToResolveRelativeTarget) {\n        this.attemptToResolveRelativeTarget = false;\n        this.relativeParent = this.getClosestProjectingParent();\n\n        if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {\n          this.relativeTarget = createBox();\n          this.relativeTargetOrigin = createBox();\n          calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n        }\n      }\n    }\n\n    getClosestProjectingParent() {\n      if (!this.parent || hasTransform(this.parent.latestValues)) return undefined;\n\n      if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {\n        return this.parent;\n      } else {\n        return this.parent.getClosestProjectingParent();\n      }\n    }\n\n    calcProjection() {\n      var _a;\n\n      const {\n        layout,\n        layoutId\n      } = this.options;\n      /**\n       * If this section of the tree isn't animating we can\n       * delete our target sources for the following frame.\n       */\n\n      this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);\n\n      if (!this.isTreeAnimating) {\n        this.targetDelta = this.relativeTarget = undefined;\n      }\n\n      if (!this.layout || !(layout || layoutId)) return;\n      const lead = this.getLead();\n      /**\n       * Reset the corrected box with the latest values from box, as we're then going\n       * to perform mutative operations on it.\n       */\n\n      copyBoxInto(this.layoutCorrected, this.layout.actual);\n      /**\n       * Apply all the parent deltas to this box to produce the corrected box. This\n       * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n       */\n\n      applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n      const {\n        target\n      } = lead;\n      if (!target) return;\n\n      if (!this.projectionDelta) {\n        this.projectionDelta = createDelta();\n        this.projectionDeltaWithTransform = createDelta();\n      }\n\n      const prevTreeScaleX = this.treeScale.x;\n      const prevTreeScaleY = this.treeScale.y;\n      const prevProjectionTransform = this.projectionTransform;\n      /**\n       * Update the delta between the corrected box and the target box before user-set transforms were applied.\n       * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n       * for our layout reprojection, but still allow them to be scaled correctly by the user.\n       * It might be that to simplify this we may want to accept that user-set scale is also corrected\n       * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n       * to allow people to choose whether these styles are corrected based on just the\n       * layout reprojection or the final bounding box.\n       */\n\n      calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n      this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n\n      if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {\n        this.hasProjected = true;\n        this.scheduleRender();\n        this.notifyListeners(\"projectionUpdate\", target);\n      }\n    }\n\n    hide() {\n      this.isVisible = false; // TODO: Schedule render\n    }\n\n    show() {\n      this.isVisible = true; // TODO: Schedule render\n    }\n\n    scheduleRender() {\n      let notifyAll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var _a, _b, _c;\n\n      (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n      notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n\n      if (this.resumingFrom && !this.resumingFrom.instance) {\n        this.resumingFrom = undefined;\n      }\n    }\n\n    setAnimationOrigin(delta) {\n      let hasOnlyRelativeTargetChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _a;\n\n      const snapshot = this.snapshot;\n      const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n      const mixedValues = Object.assign({}, this.latestValues);\n      const targetDelta = createDelta();\n      this.relativeTarget = this.relativeTargetOrigin = undefined;\n      this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n      const relativeLayout = createBox();\n      const isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n      const isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n      const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));\n      this.animationProgress = 0;\n\n      this.mixTargetDelta = latest => {\n        var _a;\n\n        const progress = latest / 1000;\n        mixAxisDelta(targetDelta.x, delta.x, progress);\n        mixAxisDelta(targetDelta.y, delta.y, progress);\n        this.setTargetDelta(targetDelta);\n\n        if (this.relativeTarget && this.relativeTargetOrigin && this.layout && ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n          calcRelativePosition(relativeLayout, this.layout.actual, this.relativeParent.layout.actual);\n          mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n        }\n\n        if (isSharedLayoutAnimation) {\n          this.animationValues = mixedValues;\n          mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n        }\n\n        this.root.scheduleUpdateProjection();\n        this.scheduleRender();\n        this.animationProgress = progress;\n      };\n\n      this.mixTargetDelta(0);\n    }\n\n    startAnimation(options) {\n      var _a, _b;\n\n      this.notifyListeners(\"animationStart\");\n      (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n\n      if (this.resumingFrom) {\n        (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n      }\n\n      if (this.pendingAnimation) {\n        sync.cancelSync.update(this.pendingAnimation);\n        this.pendingAnimation = undefined;\n      }\n      /**\n       * Start the animation in the next frame to have a frame with progress 0,\n       * where the target is the same as when the animation started, so we can\n       * calculate the relative positions correctly for instant transitions.\n       */\n\n\n      this.pendingAnimation = sync__default[\"default\"].update(() => {\n        globalProjectionState.hasAnimatedSinceResize = true;\n        this.currentAnimation = animate(0, animationTarget, Object.assign(Object.assign({}, options), {\n          onUpdate: latest => {\n            var _a;\n\n            this.mixTargetDelta(latest);\n            (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n          },\n          onComplete: () => {\n            var _a;\n\n            (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n            this.completeAnimation();\n          }\n        }));\n\n        if (this.resumingFrom) {\n          this.resumingFrom.currentAnimation = this.currentAnimation;\n        }\n\n        this.pendingAnimation = undefined;\n      });\n    }\n\n    completeAnimation() {\n      var _a;\n\n      if (this.resumingFrom) {\n        this.resumingFrom.currentAnimation = undefined;\n        this.resumingFrom.preserveOpacity = undefined;\n      }\n\n      (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n      this.resumingFrom = this.currentAnimation = this.animationValues = undefined;\n      this.notifyListeners(\"animationComplete\");\n    }\n\n    finishAnimation() {\n      var _a;\n\n      if (this.currentAnimation) {\n        (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n        this.currentAnimation.stop();\n      }\n\n      this.completeAnimation();\n    }\n\n    applyTransformsToTarget() {\n      const {\n        targetWithTransforms,\n        target,\n        layout,\n        latestValues\n      } = this.getLead();\n      if (!targetWithTransforms || !target || !layout) return;\n      copyBoxInto(targetWithTransforms, target);\n      /**\n       * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n       * This is the final box that we will then project into by calculating a transform delta and\n       * applying it to the corrected box.\n       */\n\n      transformBox(targetWithTransforms, latestValues);\n      /**\n       * Update the delta between the corrected box and the final target box, after\n       * user-set transforms are applied to it. This will be used by the renderer to\n       * create a transform style that will reproject the element from its actual layout\n       * into the desired bounding box.\n       */\n\n      calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n    }\n\n    registerSharedNode(layoutId, node) {\n      var _a, _b, _c;\n\n      if (!this.sharedNodes.has(layoutId)) {\n        this.sharedNodes.set(layoutId, new NodeStack());\n      }\n\n      const stack = this.sharedNodes.get(layoutId);\n      stack.add(node);\n      node.promote({\n        transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n        preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)\n      });\n    }\n\n    isLead() {\n      const stack = this.getStack();\n      return stack ? stack.lead === this : true;\n    }\n\n    getLead() {\n      var _a;\n\n      const {\n        layoutId\n      } = this.options;\n      return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n    }\n\n    getPrevLead() {\n      var _a;\n\n      const {\n        layoutId\n      } = this.options;\n      return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n    }\n\n    getStack() {\n      const {\n        layoutId\n      } = this.options;\n      if (layoutId) return this.root.sharedNodes.get(layoutId);\n    }\n\n    promote() {\n      let {\n        needsReset,\n        transition,\n        preserveFollowOpacity\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const stack = this.getStack();\n      if (stack) stack.promote(this, preserveFollowOpacity);\n\n      if (needsReset) {\n        this.projectionDelta = undefined;\n        this.needsReset = true;\n      }\n\n      if (transition) this.setOptions({\n        transition\n      });\n    }\n\n    relegate() {\n      const stack = this.getStack();\n\n      if (stack) {\n        return stack.relegate(this);\n      } else {\n        return false;\n      }\n    }\n\n    resetRotation() {\n      const {\n        visualElement\n      } = this.options;\n      if (!visualElement) return; // If there's no detected rotation values, we can early return without a forced render.\n\n      let hasRotate = false; // Keep a record of all the values we've reset\n\n      const resetValues = {}; // Check the rotate value of all axes and reset to 0\n\n      for (let i = 0; i < transformAxes.length; i++) {\n        const axis = transformAxes[i];\n        const key = \"rotate\" + axis; // If this rotation doesn't exist as a motion value, then we don't\n        // need to reset it\n\n        if (!visualElement.getStaticValue(key)) {\n          continue;\n        }\n\n        hasRotate = true; // Record the rotation and then temporarily set it to 0\n\n        resetValues[key] = visualElement.getStaticValue(key);\n        visualElement.setStaticValue(key, 0);\n      } // If there's no rotation values, we don't need to do any more.\n\n\n      if (!hasRotate) return; // Force a render of this element to apply the transform with all rotations\n      // set to 0.\n\n      visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender(); // Put back all the values we reset\n\n      for (const key in resetValues) {\n        visualElement.setStaticValue(key, resetValues[key]);\n      } // Schedule a render for the next frame. This ensures we won't visually\n      // see the element with the reset rotate value applied.\n\n\n      visualElement.scheduleRender();\n    }\n\n    getProjectionStyles() {\n      let styleProp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _a, _b, _c, _d, _e, _f; // TODO: Return lifecycle-persistent object\n\n\n      const styles = {};\n      if (!this.instance || this.isSVG) return styles;\n\n      if (!this.isVisible) {\n        return {\n          visibility: \"hidden\"\n        };\n      } else {\n        styles.visibility = \"\";\n      }\n\n      const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n\n      if (this.needsReset) {\n        this.needsReset = false;\n        styles.opacity = \"\";\n        styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || \"\";\n        styles.transform = transformTemplate ? transformTemplate(this.latestValues, \"\") : \"none\";\n        return styles;\n      }\n\n      const lead = this.getLead();\n\n      if (!this.projectionDelta || !this.layout || !lead.target) {\n        const emptyStyles = {};\n\n        if (this.options.layoutId) {\n          emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n          emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || \"\";\n        }\n\n        if (this.hasProjected && !hasTransform(this.latestValues)) {\n          emptyStyles.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\";\n          this.hasProjected = false;\n        }\n\n        return emptyStyles;\n      }\n\n      const valuesToRender = lead.animationValues || lead.latestValues;\n      this.applyTransformsToTarget();\n      styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n\n      if (transformTemplate) {\n        styles.transform = transformTemplate(valuesToRender, styles.transform);\n      }\n\n      const {\n        x,\n        y\n      } = this.projectionDelta;\n      styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n\n      if (lead.animationValues) {\n        /**\n         * If the lead component is animating, assign this either the entering/leaving\n         * opacity\n         */\n        styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;\n      } else {\n        /**\n         * Or we're not animating at all, set the lead component to its actual\n         * opacity and other components to hidden.\n         */\n        styles.opacity = lead === this ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n      }\n      /**\n       * Apply scale correction\n       */\n\n\n      for (const key in scaleCorrectors) {\n        if (valuesToRender[key] === undefined) continue;\n        const {\n          correct,\n          applyTo\n        } = scaleCorrectors[key];\n        const corrected = correct(valuesToRender[key], lead);\n\n        if (applyTo) {\n          const num = applyTo.length;\n\n          for (let i = 0; i < num; i++) {\n            styles[applyTo[i]] = corrected;\n          }\n        } else {\n          styles[key] = corrected;\n        }\n      }\n      /**\n       * Disable pointer events on follow components. This is to ensure\n       * that if a follow component covers a lead component it doesn't block\n       * pointer events on the lead.\n       */\n\n\n      if (this.options.layoutId) {\n        styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || \"\" : \"none\";\n      }\n\n      return styles;\n    }\n\n    clearSnapshot() {\n      this.resumeFrom = this.snapshot = undefined;\n    } // Only run on root\n\n\n    resetTree() {\n      this.root.nodes.forEach(node => {\n        var _a;\n\n        return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n      });\n      this.root.nodes.forEach(clearMeasurements);\n      this.root.sharedNodes.clear();\n    }\n\n  };\n}\n\nfunction updateLayout(node) {\n  node.updateLayout();\n}\n\nfunction notifyLayoutUpdate(node) {\n  var _a, _b, _c, _d;\n\n  const snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n\n  if (node.isLead() && node.layout && snapshot && node.hasListeners(\"didUpdate\")) {\n    const {\n      actual: layout,\n      measured: measuredLayout\n    } = node.layout; // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n    // animations for instance if layout=\"size\" and an element has only changed position\n\n    if (node.options.animationType === \"size\") {\n      eachAxis(axis => {\n        const axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n        const length = calcLength(axisSnapshot);\n        axisSnapshot.min = layout[axis].min;\n        axisSnapshot.max = axisSnapshot.min + length;\n      });\n    } else if (node.options.animationType === \"position\") {\n      eachAxis(axis => {\n        const axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n        const length = calcLength(layout[axis]);\n        axisSnapshot.max = axisSnapshot.min + length;\n      });\n    }\n\n    const layoutDelta = createDelta();\n    calcBoxDelta(layoutDelta, layout, snapshot.layout);\n    const visualDelta = createDelta();\n\n    if (snapshot.isShared) {\n      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n    } else {\n      calcBoxDelta(visualDelta, layout, snapshot.layout);\n    }\n\n    const hasLayoutChanged = !isDeltaZero(layoutDelta);\n    let hasRelativeTargetChanged = false;\n\n    if (!node.resumeFrom) {\n      node.relativeParent = node.getClosestProjectingParent();\n      /**\n       * If the relativeParent is itself resuming from a different element then\n       * the relative snapshot is not relavent\n       */\n\n      if (node.relativeParent && !node.relativeParent.resumeFrom) {\n        const {\n          snapshot: parentSnapshot,\n          layout: parentLayout\n        } = node.relativeParent;\n\n        if (parentSnapshot && parentLayout) {\n          const relativeSnapshot = createBox();\n          calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n          const relativeLayout = createBox();\n          calcRelativePosition(relativeLayout, layout, parentLayout.actual);\n\n          if (!boxEquals(relativeSnapshot, relativeLayout)) {\n            hasRelativeTargetChanged = true;\n          }\n        }\n      }\n    }\n\n    node.notifyListeners(\"didUpdate\", {\n      layout,\n      snapshot,\n      delta: visualDelta,\n      layoutDelta,\n      hasLayoutChanged,\n      hasRelativeTargetChanged\n    });\n  } else if (node.isLead()) {\n    (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n  }\n  /**\n   * Clearing transition\n   * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n   * and why we need it at all\n   */\n\n\n  node.options.transition = undefined;\n}\n\nfunction clearSnapshot(node) {\n  node.clearSnapshot();\n}\n\nfunction clearMeasurements(node) {\n  node.clearMeasurements();\n}\n\nfunction resetTransformStyle(node) {\n  const {\n    visualElement\n  } = node.options;\n\n  if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n    visualElement.notifyBeforeLayoutMeasure();\n  }\n\n  node.resetTransform();\n}\n\nfunction finishAnimation(node) {\n  node.finishAnimation();\n  node.targetDelta = node.relativeTarget = node.target = undefined;\n}\n\nfunction resolveTargetDelta(node) {\n  node.resolveTargetDelta();\n}\n\nfunction calcProjection(node) {\n  node.calcProjection();\n}\n\nfunction resetRotation(node) {\n  node.resetRotation();\n}\n\nfunction removeLeadSnapshots(stack) {\n  stack.removeLeadSnapshot();\n}\n\nfunction mixAxisDelta(output, delta, p) {\n  output.translate = popmotion.mix(delta.translate, 0, p);\n  output.scale = popmotion.mix(delta.scale, 1, p);\n  output.origin = delta.origin;\n  output.originPoint = delta.originPoint;\n}\n\nfunction mixAxis(output, from, to, p) {\n  output.min = popmotion.mix(from.min, to.min, p);\n  output.max = popmotion.mix(from.max, to.max, p);\n}\n\nfunction mixBox(output, from, to, p) {\n  mixAxis(output.x, from.x, to.x, p);\n  mixAxis(output.y, from.y, to.y, p);\n}\n\nfunction hasOpacityCrossfade(node) {\n  return node.animationValues && node.animationValues.opacityExit !== undefined;\n}\n\nconst defaultLayoutTransition = {\n  duration: 0.45,\n  ease: [0.4, 0, 0.1, 1]\n};\n\nfunction mountNodeEarly(node, id) {\n  /**\n   * Rather than searching the DOM from document we can search the\n   * path for the deepest mounted ancestor and search from there\n   */\n  let searchNode = node.root;\n\n  for (let i = node.path.length - 1; i >= 0; i--) {\n    if (Boolean(node.path[i].instance)) {\n      searchNode = node.path[i];\n      break;\n    }\n  }\n\n  const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n  const element = searchElement.querySelector(`[data-projection-id=\"${id}\"]`);\n  if (element) node.mount(element, true);\n}\n\nfunction roundAxis(axis) {\n  axis.min = Math.round(axis.min);\n  axis.max = Math.round(axis.max);\n}\n\nfunction roundBox(box) {\n  roundAxis(box.x);\n  roundAxis(box.y);\n}\n\nconst DocumentProjectionNode = createProjectionNode({\n  attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n  measureScroll: () => ({\n    x: document.documentElement.scrollLeft || document.body.scrollLeft,\n    y: document.documentElement.scrollTop || document.body.scrollTop\n  }),\n  checkIsScrollRoot: () => true\n});\nconst rootProjectionNode = {\n  current: undefined\n};\nconst HTMLProjectionNode = createProjectionNode({\n  measureScroll: instance => ({\n    x: instance.scrollLeft,\n    y: instance.scrollTop\n  }),\n  defaultParent: () => {\n    if (!rootProjectionNode.current) {\n      const documentNode = new DocumentProjectionNode(0, {});\n      documentNode.mount(window);\n      documentNode.setOptions({\n        layoutScroll: true\n      });\n      rootProjectionNode.current = documentNode;\n    }\n\n    return rootProjectionNode.current;\n  },\n  resetTransform: (instance, value) => {\n    instance.style.transform = value !== null && value !== void 0 ? value : \"none\";\n  },\n  checkIsScrollRoot: instance => Boolean(window.getComputedStyle(instance).position === \"fixed\")\n});\nconst featureBundle = Object.assign(Object.assign(Object.assign(Object.assign({}, animations), gestureAnimations), drag), layoutFeatures);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\n\nconst motion = /*@__PURE__*/createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\n\nfunction createDomMotionComponent(key) {\n  return createMotionComponent(createDomMotionConfig(key, {\n    forwardMotionProps: false\n  }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n/**\n * @public\n */\n\n\nconst m = createMotionProxy(createDomMotionConfig);\n\nfunction useIsMounted() {\n  const isMounted = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n}\n\nfunction useForceUpdate() {\n  const isMounted = useIsMounted();\n  const [forcedRenderCount, setForcedRenderCount] = React.useState(0);\n  const forceRender = React.useCallback(() => {\n    isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n  /**\n   * Defer this to the end of the next animation frame in case there are multiple\n   * synchronous calls.\n   */\n\n  const deferredForceRender = React.useCallback(() => sync__default[\"default\"].postRender(forceRender), [forceRender]);\n  return [deferredForceRender, forcedRenderCount];\n}\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\n\n\nclass PopChildMeasure extends React__namespace.Component {\n  getSnapshotBeforeUpdate(prevProps) {\n    const element = this.props.childRef.current;\n\n    if (element && prevProps.isPresent && !this.props.isPresent) {\n      const size = this.props.sizeRef.current;\n      size.height = element.offsetHeight || 0;\n      size.width = element.offsetWidth || 0;\n      size.top = element.offsetTop;\n      size.left = element.offsetLeft;\n    }\n\n    return null;\n  }\n  /**\n   * Required with getSnapshotBeforeUpdate to stop React complaining.\n   */\n\n\n  componentDidUpdate() {}\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nfunction PopChild(_ref55) {\n  let {\n    children,\n    isPresent\n  } = _ref55;\n  const id = React.useId();\n  const ref = React.useRef(null);\n  const size = React.useRef({\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  });\n  /**\n   * We create and inject a style block so we can apply this explicit\n   * sizing in a non-destructive manner by just deleting the style block.\n   *\n   * We can't apply size via render as the measurement happens\n   * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n   * styles directly on the DOM node, we might be overwriting\n   * styles set via the style prop.\n   */\n\n  React.useInsertionEffect(() => {\n    var _a;\n\n    const {\n      width,\n      height,\n      top,\n      left\n    } = size.current;\n    if (isPresent || !ref.current || !width || !height) return;\n    ref.current.dataset.motionPopId = id;\n    const style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    (_a = style.sheet) === null || _a === void 0 ? void 0 : _a.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, [isPresent]);\n  return React__namespace.createElement(PopChildMeasure, {\n    isPresent: isPresent,\n    childRef: ref,\n    sizeRef: size\n  }, React__namespace.cloneElement(children, {\n    ref\n  }));\n}\n\nconst PresenceChild = _ref56 => {\n  let {\n    children,\n    initial,\n    isPresent,\n    onExitComplete,\n    custom,\n    presenceAffectsLayout,\n    mode\n  } = _ref56;\n  const presenceChildren = useConstant(newChildrenMap);\n  const id = React.useId();\n  const context = React.useMemo(() => ({\n    id,\n    initial,\n    isPresent,\n    custom,\n    onExitComplete: childId => {\n      presenceChildren.set(childId, true);\n\n      for (const isComplete of presenceChildren.values()) {\n        if (!isComplete) return; // can stop searching when any is incomplete\n      }\n\n      onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n    },\n    register: childId => {\n      presenceChildren.set(childId, false);\n      return () => presenceChildren.delete(childId);\n    }\n  }),\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? undefined : [isPresent]);\n  React.useMemo(() => {\n    presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n\n  React__namespace.useEffect(() => {\n    !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n  }, [isPresent]);\n\n  if (mode === \"popLayout\") {\n    children = React__namespace.createElement(PopChild, {\n      isPresent: isPresent\n    }, children);\n  }\n\n  return React__namespace.createElement(PresenceContext.Provider, {\n    value: context\n  }, children);\n};\n\nfunction newChildrenMap() {\n  return new Map();\n}\n\nconst getChildKey = child => child.key || \"\";\n\nfunction updateChildLookup(children, allChildren) {\n  children.forEach(child => {\n    const key = getChildKey(child);\n    allChildren.set(key, child);\n  });\n}\n\nfunction onlyElements(children) {\n  const filtered = []; // We use forEach here instead of map as map mutates the component key by preprending `.$`\n\n  React.Children.forEach(children, child => {\n    if (React.isValidElement(child)) filtered.push(child);\n  });\n  return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\n\n\nconst AnimatePresence = _ref57 => {\n  let {\n    children,\n    custom,\n    initial = true,\n    onExitComplete,\n    exitBeforeEnter,\n    presenceAffectsLayout = true,\n    mode = \"sync\"\n  } = _ref57;\n\n  // Support deprecated exitBeforeEnter prop\n  if (exitBeforeEnter) {\n    mode = \"wait\";\n    warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n  } // We want to force a re-render once all exiting animations have finished. We\n  // either use a local forceRender function, or one from a parent context if it exists.\n\n\n  let [forceRender] = useForceUpdate();\n  const forceRenderLayoutGroup = React.useContext(LayoutGroupContext).forceRender;\n  if (forceRenderLayoutGroup) forceRender = forceRenderLayoutGroup;\n  const isMounted = useIsMounted(); // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n\n  const filteredChildren = onlyElements(children);\n  let childrenToRender = filteredChildren;\n  const exiting = new Set(); // Keep a living record of the children we're actually rendering so we\n  // can diff to figure out which are entering and exiting\n\n  const presentChildren = React.useRef(childrenToRender); // A lookup table to quickly reference components by key\n\n  const allChildren = React.useRef(new Map()).current; // If this is the initial component render, just deal with logic surrounding whether\n  // we play onMount animations or not.\n\n  const isInitialRender = React.useRef(true);\n  useIsomorphicLayoutEffect(() => {\n    isInitialRender.current = false;\n    updateChildLookup(filteredChildren, allChildren);\n    presentChildren.current = childrenToRender;\n  });\n  useUnmountEffect(() => {\n    isInitialRender.current = true;\n    allChildren.clear();\n    exiting.clear();\n  });\n\n  if (isInitialRender.current) {\n    return React__namespace.createElement(React__namespace.Fragment, null, childrenToRender.map(child => React__namespace.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: true,\n      initial: initial ? undefined : false,\n      presenceAffectsLayout: presenceAffectsLayout,\n      mode: mode\n    }, child)));\n  } // If this is a subsequent render, deal with entering and exiting children\n\n\n  childrenToRender = [...childrenToRender]; // Diff the keys of the currently-present and target children to update our\n  // exiting list.\n\n  const presentKeys = presentChildren.current.map(getChildKey);\n  const targetKeys = filteredChildren.map(getChildKey); // Diff the present children with our target children and mark those that are exiting\n\n  const numPresent = presentKeys.length;\n\n  for (let i = 0; i < numPresent; i++) {\n    const key = presentKeys[i];\n\n    if (targetKeys.indexOf(key) === -1) {\n      exiting.add(key);\n    }\n  } // If we currently have exiting children, and we're deferring rendering incoming children\n  // until after all current children have exiting, empty the childrenToRender array\n\n\n  if (mode === \"wait\" && exiting.size) {\n    childrenToRender = [];\n  } // Loop through all currently exiting components and clone them to overwrite `animate`\n  // with any `exit` prop they might have defined.\n\n\n  exiting.forEach(key => {\n    // If this component is actually entering again, early return\n    if (targetKeys.indexOf(key) !== -1) return;\n    const child = allChildren.get(key);\n    if (!child) return;\n    const insertionIndex = presentKeys.indexOf(key);\n\n    const onExit = () => {\n      allChildren.delete(key);\n      exiting.delete(key); // Remove this child from the present children\n\n      const removeIndex = presentChildren.current.findIndex(presentChild => presentChild.key === key);\n      presentChildren.current.splice(removeIndex, 1); // Defer re-rendering until all exiting children have indeed left\n\n      if (!exiting.size) {\n        presentChildren.current = filteredChildren;\n        if (isMounted.current === false) return;\n        forceRender();\n        onExitComplete && onExitComplete();\n      }\n    };\n\n    childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: false,\n      onExitComplete: onExit,\n      custom: custom,\n      presenceAffectsLayout: presenceAffectsLayout,\n      mode: mode\n    }, child));\n  }); // Add `MotionContext` even to children that don't need it to ensure we're rendering\n  // the same tree between renders\n\n  childrenToRender = childrenToRender.map(child => {\n    const key = child.key;\n    return exiting.has(key) ? child : React__namespace.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: true,\n      presenceAffectsLayout: presenceAffectsLayout,\n      mode: mode\n    }, child);\n  });\n\n  if (env !== \"production\" && mode === \"wait\" && childrenToRender.length > 1) {\n    console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n  }\n\n  return React__namespace.createElement(React__namespace.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(child => React.cloneElement(child)));\n};\n/**\n * @deprecated\n */\n\n\nconst DeprecatedLayoutGroupContext = React.createContext(null);\n\nconst notify = node => !node.isLayoutDirty && node.willUpdate(false);\n\nfunction nodeGroup() {\n  const nodes = new Set();\n  const subscriptions = new WeakMap();\n\n  const dirtyAll = () => nodes.forEach(notify);\n\n  return {\n    add: node => {\n      nodes.add(node);\n      subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n    },\n    remove: node => {\n      var _a;\n\n      nodes.delete(node);\n      (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();\n      subscriptions.delete(node);\n      dirtyAll();\n    },\n    dirty: dirtyAll\n  };\n}\n\nconst shouldInheritGroup = inherit => inherit === true;\n\nconst shouldInheritId = inherit => shouldInheritGroup(inherit === true) || inherit === \"id\";\n\nconst LayoutGroup = _ref58 => {\n  let {\n    children,\n    id,\n    inheritId,\n    inherit = true\n  } = _ref58;\n\n  var _a, _b; // Maintain backwards-compatibility with inheritId until 7.0\n\n\n  if (inheritId !== undefined) inherit = inheritId;\n  const layoutGroupContext = React.useContext(LayoutGroupContext);\n  const deprecatedLayoutGroupContext = React.useContext(DeprecatedLayoutGroupContext);\n  const [forceRender, key] = useForceUpdate();\n  const context = React.useRef(null);\n  const upstreamId = (_a = layoutGroupContext.id) !== null && _a !== void 0 ? _a : deprecatedLayoutGroupContext;\n\n  if (context.current === null) {\n    if (shouldInheritId(inherit) && upstreamId) {\n      id = id ? upstreamId + \"-\" + id : upstreamId;\n    }\n\n    context.current = {\n      id,\n      group: shouldInheritGroup(inherit) ? (_b = layoutGroupContext === null || layoutGroupContext === void 0 ? void 0 : layoutGroupContext.group) !== null && _b !== void 0 ? _b : nodeGroup() : nodeGroup()\n    };\n  }\n\n  const memoizedContext = React.useMemo(() => Object.assign(Object.assign({}, context.current), {\n    forceRender\n  }), [key]);\n  return React__namespace.createElement(LayoutGroupContext.Provider, {\n    value: memoizedContext\n  }, children);\n};\n\nlet id = 0;\n\nconst AnimateSharedLayout = _ref59 => {\n  let {\n    children\n  } = _ref59;\n  React__namespace.useEffect(() => {\n    heyListen.warning(false, \"AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations\");\n  }, []);\n  return React__namespace.createElement(LayoutGroup, {\n    id: useConstant(() => `asl-${id++}`)\n  }, children);\n};\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\n\n\nfunction MotionConfig(_a) {\n  var {\n    children,\n    isValidProp\n  } = _a,\n      config = tslib.__rest(_a, [\"children\", \"isValidProp\"]);\n\n  isValidProp && loadExternalIsValidProp(isValidProp);\n  /**\n   * Inherit props from any parent MotionConfig components\n   */\n\n  config = Object.assign(Object.assign({}, React.useContext(MotionConfigContext)), config);\n  /**\n   * Don't allow isStatic to change between renders as it affects how many hooks\n   * motion components fire.\n   */\n\n  config.isStatic = useConstant(() => config.isStatic);\n  /**\n   * Creating a new config context object will re-render every `motion` component\n   * every time it renders. So we only want to create a new one sparingly.\n   */\n\n  const context = React.useMemo(() => config, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n  return React__namespace.createElement(MotionConfigContext.Provider, {\n    value: context\n  }, children);\n}\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\n\n\nfunction LazyMotion(_ref60) {\n  let {\n    children,\n    features,\n    strict = false\n  } = _ref60;\n  const [, setIsLoaded] = React.useState(!isLazyBundle(features));\n  const loadedRenderer = React.useRef(undefined);\n  /**\n   * If this is a synchronous load, load features immediately\n   */\n\n  if (!isLazyBundle(features)) {\n    const {\n      renderer\n    } = features,\n          loadedFeatures = tslib.__rest(features, [\"renderer\"]);\n\n    loadedRenderer.current = renderer;\n    loadFeatures(loadedFeatures);\n  }\n\n  React.useEffect(() => {\n    if (isLazyBundle(features)) {\n      features().then(_a => {\n        var {\n          renderer\n        } = _a,\n            loadedFeatures = tslib.__rest(_a, [\"renderer\"]);\n\n        loadFeatures(loadedFeatures);\n        loadedRenderer.current = renderer;\n        setIsLoaded(true);\n      });\n    }\n  }, []);\n  return React__namespace.createElement(LazyContext.Provider, {\n    value: {\n      renderer: loadedRenderer.current,\n      strict\n    }\n  }, children);\n}\n\nfunction isLazyBundle(features) {\n  return typeof features === \"function\";\n}\n\nconst ReorderContext = React.createContext(null);\n\nfunction checkReorder(order, value, offset, velocity) {\n  if (!velocity) return order;\n  const index = order.findIndex(item => item.value === value);\n  if (index === -1) return order;\n  const nextOffset = velocity > 0 ? 1 : -1;\n  const nextItem = order[index + nextOffset];\n  if (!nextItem) return order;\n  const item = order[index];\n  const nextLayout = nextItem.layout;\n  const nextItemCenter = popmotion.mix(nextLayout.min, nextLayout.max, 0.5);\n\n  if (nextOffset === 1 && item.layout.max + offset > nextItemCenter || nextOffset === -1 && item.layout.min + offset < nextItemCenter) {\n    return moveItem(order, index, index + nextOffset);\n  }\n\n  return order;\n}\n\nfunction ReorderGroup(_a, externalRef) {\n  var {\n    children,\n    as = \"ul\",\n    axis = \"y\",\n    onReorder,\n    values\n  } = _a,\n      props = tslib.__rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n\n  const Component = useConstant(() => motion(as));\n  const order = [];\n  const isReordering = React.useRef(false);\n  heyListen.invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n  const context = {\n    axis,\n    registerItem: (value, layout) => {\n      /**\n       * Ensure entries can't add themselves more than once\n       */\n      if (layout && order.findIndex(entry => value === entry.value) === -1) {\n        order.push({\n          value,\n          layout: layout[axis]\n        });\n        order.sort(compareMin);\n      }\n    },\n    updateOrder: (id, offset, velocity) => {\n      if (isReordering.current) return;\n      const newOrder = checkReorder(order, id, offset, velocity);\n\n      if (order !== newOrder) {\n        isReordering.current = true;\n        onReorder(newOrder.map(getValue).filter(value => values.indexOf(value) !== -1));\n      }\n    }\n  };\n  React.useEffect(() => {\n    isReordering.current = false;\n  });\n  return React__namespace.createElement(Component, Object.assign({}, props, {\n    ref: externalRef\n  }), React__namespace.createElement(ReorderContext.Provider, {\n    value: context\n  }, children));\n}\n\nconst Group = React.forwardRef(ReorderGroup);\n\nfunction getValue(item) {\n  return item.value;\n}\n\nfunction compareMin(a, b) {\n  return a.layout.min - b.layout.min;\n}\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\n\nfunction useMotionValue(initial) {\n  const value = useConstant(() => motionValue(initial));\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  const {\n    isStatic\n  } = React.useContext(MotionConfigContext);\n\n  if (isStatic) {\n    const [, setLatest] = React.useState(initial);\n    React.useEffect(() => value.onChange(setLatest), []);\n  }\n\n  return value;\n}\n\nconst isCustomValueType = v => {\n  return typeof v === \"object\" && v.mix;\n};\n\nconst getMixer = v => isCustomValueType(v) ? v.mix : undefined;\n\nfunction transform() {\n  const useImmediate = !Array.isArray(arguments.length <= 0 ? undefined : arguments[0]);\n  const argOffset = useImmediate ? 0 : -1;\n  const inputValue = 0 + argOffset < 0 || arguments.length <= 0 + argOffset ? undefined : arguments[0 + argOffset];\n  const inputRange = 1 + argOffset < 0 || arguments.length <= 1 + argOffset ? undefined : arguments[1 + argOffset];\n  const outputRange = 2 + argOffset < 0 || arguments.length <= 2 + argOffset ? undefined : arguments[2 + argOffset];\n  const options = 3 + argOffset < 0 || arguments.length <= 3 + argOffset ? undefined : arguments[3 + argOffset];\n  const interpolator = popmotion.interpolate(inputRange, outputRange, Object.assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useOnChange(value, callback) {\n  useIsomorphicLayoutEffect(() => {\n    if (isMotionValue(value)) return value.onChange(callback);\n  }, [callback]);\n}\n\nfunction useMultiOnChange(values, handler) {\n  useIsomorphicLayoutEffect(() => {\n    const subscriptions = values.map(value => value.onChange(handler));\n    return () => subscriptions.forEach(unsubscribe => unsubscribe());\n  });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  const value = useMotionValue(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n\n  const updateValue = () => value.set(combineValues());\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n\n\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n\n  useMultiOnChange(values, () => sync__default[\"default\"].update(updateValue, false, true));\n  return value;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  const transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], _ref61 => {\n    let [latest] = _ref61;\n    return transformer(latest);\n  });\n}\n\nfunction useListTransform(values, transformer) {\n  const latest = useConstant(() => []);\n  return useCombineMotionValues(values, () => {\n    latest.length = 0;\n    const numValues = values.length;\n\n    for (let i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n\n    return transformer(latest);\n  });\n}\n\nfunction useDefaultMotionValue(value) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\n\nfunction ReorderItem(_a, externalRef) {\n  var {\n    children,\n    style,\n    value,\n    as = \"li\",\n    onDrag,\n    layout = true\n  } = _a,\n      props = tslib.__rest(_a, [\"children\", \"style\", \"value\", \"as\", \"onDrag\", \"layout\"]);\n\n  const Component = useConstant(() => motion(as));\n  const context = React.useContext(ReorderContext);\n  const point = {\n    x: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.x),\n    y: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.y)\n  };\n  const zIndex = useTransform([point.x, point.y], _ref62 => {\n    let [latestX, latestY] = _ref62;\n    return latestX || latestY ? 1 : \"unset\";\n  });\n  const measuredLayout = React.useRef(null);\n  heyListen.invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n  const {\n    axis,\n    registerItem,\n    updateOrder\n  } = context;\n  React.useEffect(() => {\n    registerItem(value, measuredLayout.current);\n  }, [context]);\n  return React__namespace.createElement(Component, Object.assign({\n    drag: axis\n  }, props, {\n    dragSnapToOrigin: true,\n    style: Object.assign(Object.assign({}, style), {\n      x: point.x,\n      y: point.y,\n      zIndex\n    }),\n    layout: layout,\n    onDrag: (event, gesturePoint) => {\n      const {\n        velocity\n      } = gesturePoint;\n      velocity[axis] && updateOrder(value, point[axis].get(), velocity[axis]);\n      onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);\n    },\n    onLayoutMeasure: measured => {\n      measuredLayout.current = measured;\n    },\n    ref: externalRef\n  }), children);\n}\n\nconst Item = React.forwardRef(ReorderItem);\nconst Reorder = {\n  Group,\n  Item\n};\n/**\n * @public\n */\n\nconst domAnimation = Object.assign(Object.assign({\n  renderer: createDomVisualElement\n}, animations), gestureAnimations);\n/**\n * @public\n */\n\nconst domMax = Object.assign(Object.assign(Object.assign(Object.assign({}, domAnimation), drag), layoutFeatures), {\n  projectionNodeConstructor: HTMLProjectionNode\n});\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\n\nfunction useMotionTemplate(fragments) {\n  for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    values[_key2 - 1] = arguments[_key2];\n  }\n\n  /**\n   * Create a function that will build a string from the latest motion values.\n   */\n  const numFragments = fragments.length;\n\n  function buildValue() {\n    let output = ``;\n\n    for (let i = 0; i < numFragments; i++) {\n      output += fragments[i];\n      const value = values[i];\n      if (value) output += values[i].get();\n    }\n\n    return output;\n  }\n\n  return useCombineMotionValues(values, buildValue);\n}\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\n\n\nfunction useSpring(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    isStatic\n  } = React.useContext(MotionConfigContext);\n  const activeSpringAnimation = React.useRef(null);\n  const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  React.useMemo(() => {\n    return value.attach((v, set) => {\n      /**\n       * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n       * at that level, but this will work for now\n       */\n      if (isStatic) return set(v);\n\n      if (activeSpringAnimation.current) {\n        activeSpringAnimation.current.stop();\n      }\n\n      activeSpringAnimation.current = popmotion.animate(Object.assign(Object.assign({\n        from: value.get(),\n        to: v,\n        velocity: value.getVelocity()\n      }, config), {\n        onUpdate: set\n      }));\n      return value.get();\n    });\n  }, [JSON.stringify(config)]);\n  useOnChange(source, v => value.set(parseFloat(v)));\n  return value;\n}\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\n\n\nfunction useVelocity(value) {\n  const velocity = useMotionValue(value.getVelocity());\n  React.useEffect(() => {\n    return value.velocityUpdateSubscribers.add(newVelocity => {\n      velocity.set(newVelocity);\n    });\n  }, [value]);\n  return velocity;\n}\n\nconst createScrollMotionValues = () => ({\n  scrollX: motionValue(0),\n  scrollY: motionValue(0),\n  scrollXProgress: motionValue(0),\n  scrollYProgress: motionValue(0)\n});\n\nfunction useScroll() {\n  let _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var {\n    container,\n    target\n  } = _a,\n      options = tslib.__rest(_a, [\"container\", \"target\"]);\n\n  const values = useConstant(createScrollMotionValues);\n  useIsomorphicLayoutEffect(() => {\n    return dom.scroll(_ref63 => {\n      let {\n        x,\n        y\n      } = _ref63;\n      values.scrollX.set(x.current);\n      values.scrollXProgress.set(x.progress);\n      values.scrollY.set(y.current);\n      values.scrollYProgress.set(y.progress);\n    }, Object.assign(Object.assign({}, options), {\n      container: (container === null || container === void 0 ? void 0 : container.current) || undefined,\n      target: (target === null || target === void 0 ? void 0 : target.current) || undefined\n    }));\n  }, []);\n  return values;\n}\n/**\n * @deprecated useElementScroll is deprecated. Convert to useScroll({ container: ref })\n */\n\n\nfunction useElementScroll(ref) {\n  warnOnce(false, \"useElementScroll is deprecated. Convert to useScroll({ container: ref }).\");\n  return useScroll({\n    container: ref\n  });\n}\n/**\n * @deprecated useViewportScroll is deprecated. Convert to useScroll()\n */\n\n\nfunction useViewportScroll() {\n  warnOnce(false, \"useViewportScroll is deprecated. Convert to useScroll().\");\n  return useScroll();\n}\n\nfunction useAnimationFrame(callback) {\n  const initialTimestamp = React.useRef(0);\n  const {\n    isStatic\n  } = React.useContext(MotionConfigContext);\n  React.useEffect(() => {\n    if (isStatic) return;\n\n    const provideTimeSinceStart = _ref64 => {\n      let {\n        timestamp\n      } = _ref64;\n      if (!initialTimestamp.current) initialTimestamp.current = timestamp;\n      callback(timestamp - initialTimestamp.current);\n    };\n\n    sync__default[\"default\"].update(provideTimeSinceStart, true);\n    return () => sync.cancelSync.update(provideTimeSinceStart);\n  }, [callback]);\n}\n\nfunction useTime() {\n  const time = useMotionValue(0);\n  useAnimationFrame(t => time.set(t));\n  return time;\n}\n\nclass WillChangeMotionValue extends MotionValue {\n  constructor() {\n    super(...arguments);\n    this.members = [];\n    this.transforms = new Set();\n  }\n\n  add(name) {\n    let memberName;\n\n    if (isTransformProp(name)) {\n      this.transforms.add(name);\n      memberName = \"transform\";\n    } else if (!isTransformOriginProp(name) && !isCSSVariable$1(name) && name !== \"willChange\") {\n      memberName = camelToDash(name);\n    }\n\n    if (memberName) {\n      addUniqueItem(this.members, memberName);\n      this.update();\n    }\n  }\n\n  remove(name) {\n    if (isTransformProp(name)) {\n      this.transforms.delete(name);\n\n      if (!this.transforms.size) {\n        removeItem(this.members, \"transform\");\n      }\n    } else {\n      removeItem(this.members, camelToDash(name));\n    }\n\n    this.update();\n  }\n\n  update() {\n    this.set(this.members.length ? this.members.join(\", \") : \"auto\");\n  }\n\n}\n\nfunction useWillChange() {\n  return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n/**\n * @public\n */\n\n\nfunction animationControls() {\n  /**\n   * Track whether the host component has mounted.\n   */\n  let hasMounted = false;\n  /**\n   * Pending animations that are started before a component is mounted.\n   * TODO: Remove this as animations should only run in effects\n   */\n\n  const pendingAnimations = [];\n  /**\n   * A collection of linked component animation controls.\n   */\n\n  const subscribers = new Set();\n  const controls = {\n    subscribe(visualElement) {\n      subscribers.add(visualElement);\n      return () => void subscribers.delete(visualElement);\n    },\n\n    start(definition, transitionOverride) {\n      /**\n       * TODO: We only perform this hasMounted check because in Framer we used to\n       * encourage the ability to start an animation within the render phase. This\n       * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n       * we can ditch this.\n       */\n      if (hasMounted) {\n        const animations = [];\n        subscribers.forEach(visualElement => {\n          animations.push(animateVisualElement(visualElement, definition, {\n            transitionOverride\n          }));\n        });\n        return Promise.all(animations);\n      } else {\n        return new Promise(resolve => {\n          pendingAnimations.push({\n            animation: [definition, transitionOverride],\n            resolve\n          });\n        });\n      }\n    },\n\n    set(definition) {\n      heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n      return subscribers.forEach(visualElement => {\n        setValues(visualElement, definition);\n      });\n    },\n\n    stop() {\n      subscribers.forEach(visualElement => {\n        stopAnimation(visualElement);\n      });\n    },\n\n    mount() {\n      hasMounted = true;\n      pendingAnimations.forEach(_ref65 => {\n        let {\n          animation,\n          resolve\n        } = _ref65;\n        controls.start(...animation).then(resolve);\n      });\n      return () => {\n        hasMounted = false;\n        controls.stop();\n      };\n    }\n\n  };\n  return controls;\n}\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\n\n\nfunction useAnimationControls() {\n  const controls = useConstant(animationControls);\n  React.useEffect(controls.mount, []);\n  return controls;\n}\n\nconst useAnimation = useAnimationControls;\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\n\nfunction useCycle() {\n  for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    items[_key3] = arguments[_key3];\n  }\n\n  const index = React.useRef(0);\n  const [item, setItem] = React.useState(items[index.current]);\n  const runCycle = React.useCallback(next => {\n    index.current = typeof next !== \"number\" ? popmotion.wrap(0, items.length, index.current + 1) : next;\n    setItem(items[index.current]);\n  }, // The array will change on each call, but by putting items.length at\n  // the front of this array, we guarantee the dependency comparison will match up\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [items.length, ...items]);\n  return [item, runCycle];\n}\n\nfunction useInView(ref) {\n  let {\n    root,\n    margin,\n    amount,\n    once = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const [isInView, setInView] = React.useState(false);\n  React.useEffect(() => {\n    var _a;\n\n    if (!ref.current || once && isInView) return;\n\n    const onEnter = () => {\n      setInView(true);\n      return once ? undefined : () => setInView(false);\n    };\n\n    const options = {\n      root: (_a = root === null || root === void 0 ? void 0 : root.current) !== null && _a !== void 0 ? _a : undefined,\n      margin,\n      amount: amount === \"some\" ? \"any\" : amount\n    };\n    return dom.inView(ref.current, onEnter, options);\n  }, [root, ref, margin, once]);\n  return isInView;\n}\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\n\n\nclass DragControls {\n  constructor() {\n    this.componentControls = new Set();\n  }\n  /**\n   * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n   *\n   * @internal\n   */\n\n\n  subscribe(controls) {\n    this.componentControls.add(controls);\n    return () => this.componentControls.delete(controls);\n  }\n  /**\n   * Start a drag gesture on every `motion` component that has this set of drag controls\n   * passed into it via the `dragControls` prop.\n   *\n   * ```jsx\n   * dragControls.start(e, {\n   *   snapToCursor: true\n   * })\n   * ```\n   *\n   * @param event - PointerEvent\n   * @param options - Options\n   *\n   * @public\n   */\n\n\n  start(event, options) {\n    this.componentControls.forEach(controls => {\n      controls.start(event.nativeEvent || event, options);\n    });\n  }\n\n}\n\nconst createDragControls = () => new DragControls();\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\n\n\nfunction useDragControls() {\n  return useConstant(createDragControls);\n}\n\nfunction useInstantLayoutTransition() {\n  return startTransition;\n}\n\nfunction startTransition(cb) {\n  if (!rootProjectionNode.current) return;\n  rootProjectionNode.current.isUpdating = false;\n  rootProjectionNode.current.blockUpdate();\n  cb === null || cb === void 0 ? void 0 : cb();\n}\n\nfunction useInstantTransition() {\n  const [forceUpdate, forcedRenderCount] = useForceUpdate();\n  const startInstantLayoutTransition = useInstantLayoutTransition();\n  React.useEffect(() => {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    sync__default[\"default\"].postRender(() => sync__default[\"default\"].postRender(() => instantAnimationState.current = false));\n  }, [forcedRenderCount]);\n  return callback => {\n    startInstantLayoutTransition(() => {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n    });\n  };\n}\n\nfunction useResetProjection() {\n  const reset = React__namespace.useCallback(() => {\n    const root = rootProjectionNode.current;\n    if (!root) return;\n    root.resetTree();\n  }, []);\n  return reset;\n}\n\nconst createObject = () => ({});\n\nconst stateVisualElement = visualElement({\n  build() {},\n\n  measureViewportBox: createBox,\n\n  resetTransform() {},\n\n  restoreTransform() {},\n\n  removeValueFromRenderState() {},\n\n  render() {},\n\n  scrapeMotionValuesFromProps: createObject,\n\n  readValueFromInstance(_state, key, options) {\n    return options.initialState[key] || 0;\n  },\n\n  makeTargetAnimatable(element, _a) {\n    var {\n      transition,\n      transitionEnd\n    } = _a,\n        target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    const origin = getOrigin(target, transition || {}, element);\n    checkTargetForNewValues(element, target, origin);\n    return Object.assign({\n      transition,\n      transitionEnd\n    }, target);\n  }\n\n});\nconst useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\n\nfunction useAnimatedState(initialState) {\n  const [animationState, setAnimationState] = React.useState(initialState);\n  const visualState = useVisualState({}, false);\n  const element = useConstant(() => stateVisualElement({\n    props: {},\n    visualState\n  }, {\n    initialState\n  }));\n  React.useEffect(() => {\n    element.mount({});\n    return element.unmount;\n  }, [element]);\n  React.useEffect(() => {\n    element.setProps({\n      onUpdate: v => {\n        setAnimationState(Object.assign({}, v));\n      }\n    });\n  }, [setAnimationState, element]);\n  const startAnimation = useConstant(() => animationDefinition => {\n    return animateVisualElement(element, animationDefinition);\n  });\n  return [animationState, startAnimation];\n} // Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\n\n\nconst maxScale = 100000;\n\nconst invertScale = scale => scale > 0.001 ? 1 / scale : maxScale;\n\nlet hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @deprecated\n */\n\nfunction useInvertedScale(scale) {\n  let parentScaleX = useMotionValue(1);\n  let parentScaleY = useMotionValue(1);\n  const visualElement = useVisualElementContext();\n  heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n  heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n  hasWarned = true;\n\n  if (scale) {\n    parentScaleX = scale.scaleX || parentScaleX;\n    parentScaleY = scale.scaleY || parentScaleY;\n  } else if (visualElement) {\n    parentScaleX = visualElement.getValue(\"scaleX\", 1);\n    parentScaleY = visualElement.getValue(\"scaleY\", 1);\n  }\n\n  const scaleX = useTransform(parentScaleX, invertScale);\n  const scaleY = useTransform(parentScaleY, invertScale);\n  return {\n    scaleX,\n    scaleY\n  };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DeprecatedLayoutGroupContext = DeprecatedLayoutGroupContext;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.LayoutGroup = LayoutGroup;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionContext = MotionContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.Reorder = Reorder;\nexports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;\nexports.addPointerEvent = addPointerEvent;\nexports.addScaleCorrector = addScaleCorrector;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.animations = animations;\nexports.calcLength = calcLength;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.createBox = createBox;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.filterProps = filterProps;\nexports.isBrowser = isBrowser;\nexports.isDragActive = isDragActive;\nexports.isMotionValue = isMotionValue;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.makeUseVisualState = makeUseVisualState;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.resolveMotionValue = resolveMotionValue;\nexports.transform = transform;\nexports.useAnimation = useAnimation;\nexports.useAnimationControls = useAnimationControls;\nexports.useAnimationFrame = useAnimationFrame;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useForceUpdate = useForceUpdate;\nexports.useInView = useInView;\nexports.useInstantLayoutTransition = useInstantLayoutTransition;\nexports.useInstantTransition = useInstantTransition;\nexports.useIsPresent = useIsPresent;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useReducedMotionConfig = useReducedMotionConfig;\nexports.useResetProjection = useResetProjection;\nexports.useScroll = useScroll;\nexports.useSpring = useSpring;\nexports.useTime = useTime;\nexports.useTransform = useTransform;\nexports.useUnmountEffect = useUnmountEffect;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.useVisualElementContext = useVisualElementContext;\nexports.useWillChange = useWillChange;\nexports.visualElement = visualElement;\nexports.wrapHandler = wrapHandler;","map":{"version":3,"names":["Object","defineProperty","exports","value","React","require","heyListen","styleValueTypes","tslib","popmotion","sync","dom","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","React__namespace","React__default","sync__default","defaultEnvironment","env","process","undefined","NODE_ENV","createDefinition","propNames","isEnabled","props","some","name","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","loadFeatures","features","key","projectionNodeConstructor","Component","LazyContext","createContext","strict","featureNames","numFeatures","length","useFeatures","visualElement","preloadedFeatures","lazyContext","useContext","invariant","i","push","createElement","assign","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","useVisualElementContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","prefersReducedMotion","current","hasDetected","initPrefersReducedMotion","window","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","useReducedMotion","shouldReduceMotion","useState","useReducedMotionConfig","reducedMotionPreference","useVisualElement","visualState","createVisualElement","parent","presenceContext","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","initial","syncRender","_a","animationState","animateChanges","notifyUnmount","isRefObject","ref","prototype","hasOwnProperty","call","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabels","v","Array","isArray","isVariantLabel","getCurrent","forEachValue","getVelocity$1","velocity","getVelocity","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","variants","resolveVariant","getProps","checkIfControllingVariants","animate","start","whileHover","whileDrag","whileTap","whileFocus","checkIfVariantNode","Boolean","getCurrentTreeVariants","context","inherit","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","join","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id$1","useProjectionId","LayoutGroupContext","SwitchLayoutGroupContext","useProjection","projectionId","ProjectionNodeConstructor","layoutId","layout","dragConstraints","layoutScroll","initialPromotionConfig","projection","getLatestValues","setOptions","alwaysMeasureLayout","scheduleRender","animationType","VisualElementHandler","getSnapshotBeforeUpdate","updateProps","componentDidUpdate","setProps","render","children","createMotionComponent","useRender","useVisualState","MotionComponent","useLayoutId","config","Provider","forwardRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","addScaleCorrector","correctors","transformAxes","order","transformProps","operationKey","axesKey","sortTransformProps","a","b","transformPropSet","Set","isTransformProp","transformOriginProps","isTransformOriginProp","isForcedMotionValue","isMotionValue","translateAlias","x","y","z","transformPerspective","buildTransform","transformIsDefault","transformTemplate","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformString","sort","transformHasZ","numTransformKeys","trim","buildTransformOrigin","originX","originY","originZ","isCSSVariable$1","startsWith","getValueAsType","type","int","number","Math","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin$1","origin","offset","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","array","camelKeys","buildSVGPath","attrs","spacing","useDashCase","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","__rest","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","useVisualProps","elementProps","CAMEL_CASE_PATTERN","REPLACE_TEMPLATE","camelToDash","str","replace","toLowerCase","renderHTML","element","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","newValues","scrapeMotionValuesFromProps","targetKey","toUpperCase","isAnimationControls","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","scrapeMotionValues","values","motionValues","isControllingVariants","isVariantNode","initialAnimationIsBlocked","variantToSet","list","resolved","transitionEnd","transition","valueTarget","index","svgMotionConfig","getBBox","getBoundingClientRect","htmlMotionConfig","createDomMotionConfig","baseConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","useFocusGesture","onFocus","setActive","Focus","onBlur","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","hasTouches","touches","filterPrimaryPointer","eventHandler","isPrimaryPointer","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","Hover","useHoverGesture","onHoverStart","onHoverEnd","isNodeOrChild","child","parentElement","useUnmountEffect","useTapGesture","onTap","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","getInstance","onPointerCancel","pipe","warned","warnOnce","condition","message","console","warn","add","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","observeIntersection","rootInteresectionObserver","observe","delete","unobserve","useViewport","whileInView","onViewportEnter","onViewportLeave","viewport","hasEnteredView","isInView","shouldObserve","once","useObserver","useMissingIntersectionObserver","useIntersectionObserver","thresholdNames","all","rootMargin","amount","threshold","intersectionCallback","isIntersecting","InView","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","usePresence","isPresent","onExitComplete","register","useId","safeToRemove","useIsPresent","shallowCompare","next","prev","prevLength","secondsToMilliseconds","seconds","easingLookup","linear","easeIn","easeInOut","easeOut","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","bounceIn","bounceInOut","bounceOut","easingDefinitionToFunction","x1","y1","x2","y2","cubicBezier","isEasingArray","ease","isAnimatable","complex","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","duration","keyframes","defaultTransitions","backgroundColor","color","getDefaultTransition","valueKey","transitionFactory","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","filter","WebkitFilter","getDefaultValueType","getAnimatableNone","defaultValueType","instantAnimationState","isTransitionDefined","legacyRepeatWarning","convertTransitionToAnimationOptions","times","yoyo","flip","loop","repeatDelay","map","warning","repeatType","repeat","getDelayFromTransition","_b","valueTransition","getValueTransition","delay","hydrateKeyframes","from","getPopmotionAnimationOptions","getAnimation","onComplete","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","onUpdate","inertia","finalTarget","stop","parseFloat","potentialUnitType","startAnimation","delayTimer","controls","setTimeout","clearTimeout","isNumericalString","isZeroValueString","addUniqueItem","arr","item","removeItem","splice","moveItem","fromIndex","toIndex","startIndex","endIndex","SubscriptionManager","constructor","subscriptions","notify","c","numSubscriptions","getSize","clear","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","delta","timestamp","getFrameData","postRender","scheduleVelocityCheck","velocityCheck","hasAnimated","onChange","subscription","clearListeners","onRenderRequest","attach","passiveEffect","getPrevious","velocityPerSecond","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","motionValue","testValueType","auto","parse","dimensionValueTypes","percent","vw","vh","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","setVariants","variantLabels","reversedLabels","reverse","variant","getVariant","variantChildren","setValues","checkTargetForNewValues","_c","_d","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","isWillChangeMotionValue","animateVisualElement","notifyAnimationStart","animations","animateVariant","resolvedDefinition","animateTarget","notifyAnimationComplete","transitionOverride","getChildAnimations","forwardDelay","delayChildren","staggerChildren","staggerDirection","animateChildren","when","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","setAnimateFunction","makeAnimator","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","createTypeState","subscribe","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","cancelSync","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","sourceLength","targetLength","progress","clamp","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","hasTranslate","scalePoint","distanceFromOrigin","scaled","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","projectionDelta","display","scroll","transformBox","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys$1","yKeys$1","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","hasMutatedConstraints","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","actual","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","resolveRefConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","timeConstant","restDelta","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","lockThreshold","abs","useDrag","dragControls","groupDragControls","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","names","createLifecycles","managers","propSubscriptions","lifecycles","clearAllListeners","manager","updatePropListeners","on","propListener","updateMotionValuesFromProps","nextValue","prevValue","existingValue","getStaticValue","removeValue","treeType","build","renderInstance","readValueFromInstance","removeValueFromRenderState","isMounted","valueSubscriptions","prevMotionValues","baseTarget","removeFromVariantTree","triggerBuild","notifyUpdate","bindToMotionValue","removeOnChange","latestValue","removeOnRenderRequest","initialMotionValues","depth","isVisible","newInstance","addVariantChild","closestVariantNode","getClosestVariantNode","other","getLayoutId","setStaticValue","setVisibility","visibility","canMutate","defaultValue","newProps","startAtParent","numVariantProps","variantProps","isCSSVariable","cssVariableRegex","parseCSSVariable","match","exec","token","maxDepth","getVariableValue","getComputedStyle","getPropertyValue","resolveCSSVariables","Element","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","scrollY","pageYOffset","convertedTarget","scrollTo","unitConversion","parseDomVariant","getComputedStyle$1","htmlConfig","domElement","defaultType","computedStyle","compareDocumentPosition","resetTransform","restoreTransform","mutableState","parsed","htmlVisualElement","svgVisualElement","getAttribute","_element","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","varToken","correctBoxShadow","original","containsCSSVariables","cssVariables","shadow","template","createTransformer","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","canMix","radiusName","compress","easing","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","relativeProgress","removeAxisTransforms","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isShared","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","identityProjection","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","ProjectionNode","isTreeAnimating","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","resolveTargetDelta","calcProjection","hasProjected","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","unblockTimeout","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","onPlay","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","updateWasBlocked","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measured","measure","removeTransform","removeElementScroll","roundBox","prevLayout","layoutCorrected","notifyLayoutMeasure","isScrollRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","nodeBox","setTargetDelta","targetDelta","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","attemptToResolveRelativeTarget","pendingAnimation","getLead","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixBox","completeAnimation","applyTransformsToTarget","stack","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","_f","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","notifyBeforeLayoutMeasure","mixAxis","searchNode","searchElement","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","createDomMotionComponent","m","useIsMounted","useForceUpdate","forcedRenderCount","setForcedRenderCount","forceRender","deferredForceRender","PopChildMeasure","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","useInsertionEffect","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","_","getChildKey","updateChildLookup","allChildren","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","forceRenderLayoutGroup","filteredChildren","childrenToRender","exiting","presentChildren","Fragment","presentKeys","targetKeys","numPresent","insertionIndex","onExit","removeIndex","presentChild","DeprecatedLayoutGroupContext","nodeGroup","dirtyAll","dirty","shouldInheritGroup","shouldInheritId","LayoutGroup","inheritId","layoutGroupContext","deprecatedLayoutGroupContext","upstreamId","memoizedContext","AnimateSharedLayout","MotionConfig","LazyMotion","setIsLoaded","isLazyBundle","loadedRenderer","loadedFeatures","ReorderContext","checkReorder","nextOffset","nextItem","nextLayout","nextItemCenter","ReorderGroup","as","onReorder","isReordering","registerItem","compareMin","updateOrder","newOrder","Group","useMotionValue","setLatest","isCustomValueType","getMixer","useImmediate","argOffset","inputValue","inputRange","outputRange","interpolator","interpolate","mixer","useOnChange","useMultiOnChange","unsubscribe","useCombineMotionValues","combineValues","updateValue","useTransform","input","inputRangeOrTransformer","transformer","useListTransform","numValues","useDefaultMotionValue","ReorderItem","latestX","latestY","gesturePoint","onLayoutMeasure","Item","Reorder","domAnimation","domMax","useMotionTemplate","fragments","numFragments","buildValue","useSpring","activeSpringAnimation","useVelocity","newVelocity","createScrollMotionValues","scrollX","scrollXProgress","scrollYProgress","useScroll","container","useElementScroll","useViewportScroll","useAnimationFrame","initialTimestamp","provideTimeSinceStart","useTime","t","WillChangeMotionValue","arguments","memberName","useWillChange","animationControls","hasMounted","pendingAnimations","subscribers","useAnimationControls","useAnimation","useCycle","items","setItem","runCycle","wrap","useInView","setInView","onEnter","DragControls","componentControls","nativeEvent","createDragControls","useDragControls","useInstantLayoutTransition","startTransition","cb","useInstantTransition","forceUpdate","startInstantLayoutTransition","useResetProjection","reset","createObject","stateVisualElement","_state","initialState","useAnimatedState","setAnimationState","animationDefinition","maxScale","invertScale","hasWarned","useInvertedScale","parentScaleX","parentScaleY","useDeprecatedAnimatedState","useDeprecatedInvertedScale"],"sources":["/home/haluk/react-website-v1/node_modules/framer-motion-3d/node_modules/framer-motion/dist/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar heyListen = require('hey-listen');\nvar styleValueTypes = require('style-value-types');\nvar tslib = require('tslib');\nvar popmotion = require('popmotion');\nvar sync = require('framesync');\nvar dom = require('@motionone/dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\n/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nconst createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (features[key] === null)\n            continue;\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nconst LazyContext = React.createContext({ strict: false });\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    const features = [];\n    const lazyContext = React.useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (env !== \"production\" && preloadedFeatures && lazyContext.strict) {\n        heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (let i = 0; i < numFeatures; i++) {\n        const name = featureNames[i];\n        const { isEnabled, Component } = featureDefinitions[name];\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React__namespace.createElement(Component, Object.assign({ key: name }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\n/**\n * @public\n */\nconst MotionConfigContext = React.createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nconst MotionContext = React.createContext({});\nfunction useVisualElementContext() {\n    return React.useContext(MotionContext).visualElement;\n}\n\n/**\n * @public\n */\nconst PresenceContext = React.createContext(null);\n\nconst isBrowser = typeof document !== \"undefined\";\n\nconst useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nlet hasDetected = false;\nfunction initPrefersReducedMotion() {\n    hasDetected = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !hasDetected && initPrefersReducedMotion();\n    const [shouldReduceMotion] = React.useState(prefersReducedMotion.current);\n    /**\n     * TODO See if people miss automatically updating shouldReduceMotion setting\n     */\n    return shouldReduceMotion;\n}\nfunction useReducedMotionConfig() {\n    const reducedMotionPreference = useReducedMotion();\n    const { reducedMotion } = React.useContext(MotionConfigContext);\n    if (reducedMotion === \"never\") {\n        return false;\n    }\n    else if (reducedMotion === \"always\") {\n        return true;\n    }\n    else {\n        return reducedMotionPreference;\n    }\n}\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const lazyContext = React.useContext(LazyContext);\n    const parent = useVisualElementContext();\n    const presenceContext = React.useContext(PresenceContext);\n    const shouldReduceMotion = useReducedMotionConfig();\n    const visualElementRef = React.useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n            shouldReduceMotion,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n    });\n    React.useEffect(() => {\n        var _a;\n        (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(), []);\n    return visualElement;\n}\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return React.useCallback((instance) => {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\n/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.forEachValue((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity$1(visualElement) {\n    const velocity = {};\n    visualElement.forEachValue((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    var _a;\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, React.useContext(MotionContext));\n    return React.useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = React.useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\n/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nlet id$1 = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id$1++;\n        }\n    });\n}\n\nconst LayoutGroupContext = React.createContext({});\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = React.createContext({});\n\nfunction useProjection(projectionId, { layoutId, layout, drag, dragConstraints, layoutScroll }, visualElement, ProjectionNodeConstructor) {\n    var _a;\n    const initialPromotionConfig = React.useContext(SwitchLayoutGroupContext);\n    if (!ProjectionNodeConstructor ||\n        !visualElement ||\n        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n        return;\n    }\n    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_a = visualElement.parent) === null || _a === void 0 ? void 0 : _a.projection);\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n    });\n}\n\nclass VisualElementHandler extends React__default[\"default\"].Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        this.updateProps();\n        return null;\n    }\n    componentDidUpdate() { }\n    updateProps() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n    }\n    render() {\n        return this.props.children;\n    }\n}\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const layoutId = useLayoutId(props);\n        props = Object.assign(Object.assign({}, props), { layoutId });\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        const config = React.useContext(MotionConfigContext);\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = config.isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, config.isStatic);\n        if (!config.isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, Object.assign(Object.assign({}, config), props), createVisualElement);\n            useProjection(projectionId, props, context.visualElement, projectionNodeConstructor ||\n                featureDefinitions.projectionNodeConstructor);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React__namespace.createElement(VisualElementHandler, { visualElement: context.visualElement, props: Object.assign(Object.assign({}, config), props) },\n            features,\n            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))));\n    }\n    return React.forwardRef(MotionComponent);\n}\nfunction useLayoutId({ layoutId }) {\n    var _a;\n    const layoutGroupId = (_a = React.useContext(LayoutGroupContext)) === null || _a === void 0 ? void 0 : _a.id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach((operationKey) => transformAxes.forEach((axesKey) => transformProps.push(operationKey + axesKey)));\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\nconst transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n    return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\nconst transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (isTransformProp(key) ||\n        isTransformOriginProp(key) ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nconst isMotionValue = (value) => {\n    return Boolean(value !== null && typeof value === \"object\" && value.getVelocity);\n};\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    let transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    const numTransformKeys = transformKeys.length;\n    for (let i = 0; i < numTransformKeys; i++) {\n        const key = transformKeys[i];\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n        if (key === \"z\")\n            transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\nfunction buildTransformOrigin({ originX = \"50%\", originY = \"50%\", originZ = 0, }) {\n    return `${originX} ${originY} ${originZ}`;\n}\n\n/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable$1(key) {\n    return key.startsWith(\"--\");\n}\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nconst int = Object.assign(Object.assign({}, styleValueTypes.number), { transform: Math.round });\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: styleValueTypes.px,\n    borderTopWidth: styleValueTypes.px,\n    borderRightWidth: styleValueTypes.px,\n    borderBottomWidth: styleValueTypes.px,\n    borderLeftWidth: styleValueTypes.px,\n    borderRadius: styleValueTypes.px,\n    radius: styleValueTypes.px,\n    borderTopLeftRadius: styleValueTypes.px,\n    borderTopRightRadius: styleValueTypes.px,\n    borderBottomRightRadius: styleValueTypes.px,\n    borderBottomLeftRadius: styleValueTypes.px,\n    // Positioning props\n    width: styleValueTypes.px,\n    maxWidth: styleValueTypes.px,\n    height: styleValueTypes.px,\n    maxHeight: styleValueTypes.px,\n    size: styleValueTypes.px,\n    top: styleValueTypes.px,\n    right: styleValueTypes.px,\n    bottom: styleValueTypes.px,\n    left: styleValueTypes.px,\n    // Spacing props\n    padding: styleValueTypes.px,\n    paddingTop: styleValueTypes.px,\n    paddingRight: styleValueTypes.px,\n    paddingBottom: styleValueTypes.px,\n    paddingLeft: styleValueTypes.px,\n    margin: styleValueTypes.px,\n    marginTop: styleValueTypes.px,\n    marginRight: styleValueTypes.px,\n    marginBottom: styleValueTypes.px,\n    marginLeft: styleValueTypes.px,\n    // Transform props\n    rotate: styleValueTypes.degrees,\n    rotateX: styleValueTypes.degrees,\n    rotateY: styleValueTypes.degrees,\n    rotateZ: styleValueTypes.degrees,\n    scale: styleValueTypes.scale,\n    scaleX: styleValueTypes.scale,\n    scaleY: styleValueTypes.scale,\n    scaleZ: styleValueTypes.scale,\n    skew: styleValueTypes.degrees,\n    skewX: styleValueTypes.degrees,\n    skewY: styleValueTypes.degrees,\n    distance: styleValueTypes.px,\n    translateX: styleValueTypes.px,\n    translateY: styleValueTypes.px,\n    translateZ: styleValueTypes.px,\n    x: styleValueTypes.px,\n    y: styleValueTypes.px,\n    z: styleValueTypes.px,\n    perspective: styleValueTypes.px,\n    transformPerspective: styleValueTypes.px,\n    opacity: styleValueTypes.alpha,\n    originX: styleValueTypes.progressPercentage,\n    originY: styleValueTypes.progressPercentage,\n    originZ: styleValueTypes.px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: styleValueTypes.alpha,\n    strokeOpacity: styleValueTypes.alpha,\n    numOctaves: int,\n};\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    var _a;\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable$1(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (hasTransform) {\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n    }\n    else if (transformTemplate) {\n        style.transform = transformTemplate({}, \"\");\n    }\n    else if (!latestValues.transform && style.transform) {\n        style.transform = \"none\";\n    }\n    if (hasTransformOrigin) {\n        style.transformOrigin = buildTransformOrigin(transformOrigin);\n    }\n}\n\nconst createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return React.useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        const { vars, style } = state;\n        return Object.assign(Object.assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    let style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag) && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n    \"layoutScroll\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : styleValueTypes.px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = styleValueTypes.px.transform(-offset);\n    // Build the dash array\n    const pathLength = styleValueTypes.px.transform(length);\n    const pathSpacing = styleValueTypes.px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, options, transformTemplate) {\n    var { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0 } = _a, \n    // This is object creation, which we try to avoid per-frame.\n    latest = tslib.__rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nconst createSvgRenderState = () => (Object.assign(Object.assign({}, createHtmlRenderState()), { attrs: {} }));\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = React.useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return Object.assign(Object.assign({}, state.attrs), { style: Object.assign({}, state.style) });\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = Object.assign(Object.assign({}, rawStyles), visualProps.style);\n    }\n    return visualProps;\n}\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Object.assign(Object.assign(Object.assign({}, filteredProps), visualProps), { ref });\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return React.createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nconst CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nconst REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n\nfunction renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nconst isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = React.useContext(MotionContext);\n    const presenceContext = React.useContext(PresenceContext);\n    return isStatic\n        ? makeState(config, props, context, presenceContext)\n        : useConstant(() => makeState(config, props, context, presenceContext));\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants = checkIfControllingVariants(props);\n    const isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    const initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n    const variantToSet = initialAnimationIsBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition } = resolved, target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = initialAnimationIsBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return Object.assign(Object.assign({}, baseConfig), { preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement,\n        projectionNodeConstructor,\n        Component });\n}\n\nexports.AnimationType = void 0;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(exports.AnimationType || (exports.AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    React.useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement }) {\n    const onFocus = () => {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Hover, isActive);\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nfunction useUnmountEffect(callback) {\n    return React.useEffect(() => () => callback(), []);\n}\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = React.useRef(false);\n    const cancelPointerEndListeners = React.useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, true);\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nconst warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    var _a;\n    (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver(_a) {\n    var { root } = _a, options = tslib.__rest(_a, [\"root\"]);\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, Object.assign({ root }, options));\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = React.useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    React.useEffect(() => {\n        if (!shouldObserve)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            var _a;\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, isIntersecting);\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback === null || callback === void 0 ? void 0 : callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    React.useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            var _a;\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, true);\n        });\n    }, [shouldObserve]);\n}\n\nconst makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = React.useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = React.useId();\n    React.useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(React.useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nfunction shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nconst easingLookup = {\n    linear: popmotion.linear,\n    easeIn: popmotion.easeIn,\n    easeInOut: popmotion.easeInOut,\n    easeOut: popmotion.easeOut,\n    circIn: popmotion.circIn,\n    circInOut: popmotion.circInOut,\n    circOut: popmotion.circOut,\n    backIn: popmotion.backIn,\n    backInOut: popmotion.backInOut,\n    backOut: popmotion.backOut,\n    anticipate: popmotion.anticipate,\n    bounceIn: popmotion.bounceIn,\n    bounceInOut: popmotion.bounceInOut,\n    bounceOut: popmotion.bounceOut,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        heyListen.invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return popmotion.cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        heyListen.invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return Object.assign({ to }, transitionFactory(to));\n};\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = Object.assign(Object.assign({}, numberValueTypes), { \n    // Color props\n    color: styleValueTypes.color, backgroundColor: styleValueTypes.color, outlineColor: styleValueTypes.color, fill: styleValueTypes.color, stroke: styleValueTypes.color, \n    // Border props\n    borderColor: styleValueTypes.color, borderTopColor: styleValueTypes.color, borderRightColor: styleValueTypes.color, borderBottomColor: styleValueTypes.color, borderLeftColor: styleValueTypes.color, filter: styleValueTypes.filter, WebkitFilter: styleValueTypes.filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== styleValueTypes.filter)\n        defaultValueType = styleValueTypes.complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nconst instantAnimationState = {\n    current: false,\n};\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var { ease, times, yoyo, flip, loop } = _a, transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    const options = Object.assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = Object.assign(Object.assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return Object.assign(Object.assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    const valueTransition = getValueTransition(transition, key);\n    let origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    heyListen.warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? popmotion.inertia(Object.assign(Object.assign({}, options), valueTransition))\n            : popmotion.animate(Object.assign(Object.assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: (v) => {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: () => {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a, _b;\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);\n        (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let delayTimer;\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delay = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        if (delay) {\n            delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return () => {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nfunction addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.2.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = sync.getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync__default[\"default\"].postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync__default[\"default\"].postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                popmotion.velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\n/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\n/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, styleValueTypes.color, styleValueTypes.complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, { transitionEnd = {}, transition = {} } = _a, target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = Object.assign(Object.assign({}, target), transitionEnd);\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    const origin = {};\n    for (const key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notifyAnimationStart(definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notifyAnimationComplete(definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let _b = visualElement.makeTargetAnimatable(definition), { transition = visualElement.getDefaultTransition(), transitionEnd } = _b, target = tslib.__rest(_b, [\"transition\", \"transitionEnd\"]);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = Object.assign({ delay }, transition);\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && isTransformProp(key)) {\n            valueTransition = Object.assign(Object.assign({}, valueTransition), { type: false, delay: 0 });\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, Object.assign(Object.assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(() => child.notifyAnimationComplete(variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nconst variantPriorityOrder = [\n    exports.AnimationType.Animate,\n    exports.AnimationType.InView,\n    exports.AnimationType.Focus,\n    exports.AnimationType.Hover,\n    exports.AnimationType.Tap,\n    exports.AnimationType.Drag,\n    exports.AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd } = resolved, target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = Object.assign(Object.assign(Object.assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = Object.assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = Object.assign(Object.assign({}, prevResolvedValues), resolvedValues);\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = Object.assign(Object.assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: Object.assign({ type }, options),\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [exports.AnimationType.Animate]: createTypeState(true),\n        [exports.AnimationType.InView]: createTypeState(),\n        [exports.AnimationType.Hover]: createTypeState(),\n        [exports.AnimationType.Tap]: createTypeState(),\n        [exports.AnimationType.Drag]: createTypeState(),\n        [exports.AnimationType.Focus]: createTypeState(),\n        [exports.AnimationType.Exit]: createTypeState(),\n    };\n}\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            React.useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = React.useContext(PresenceContext);\n        React.useEffect(() => {\n            var _a, _b;\n            visualElement.isPresent = isPresent;\n            const animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n        }, [isPresent]);\n    }),\n};\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = popmotion.distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = sync.getFrameData();\n            this.history.push(Object.assign(Object.assign({}, point), { timestamp }));\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync__default[\"default\"].update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = sync.getFrameData();\n        this.history = [Object.assign(Object.assign({}, point), { timestamp })];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = popmotion.pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        sync.cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return popmotion.distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = popmotion.progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = popmotion.progress(source.min, source.max - targetLength, target.min);\n    }\n    return popmotion.clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nconst createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nfunction eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nfunction isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        hasTranslate(values.x) ||\n        hasTranslate(values.y) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction hasTranslate(value) {\n    return value && value !== \"0%\";\n}\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys$1 = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys$1 = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys$1);\n    transformAxis(box.y, transform, yKeys$1);\n}\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.x);\n        translateAxis(viewportBox.y, scroll.y);\n    }\n    return viewportBox;\n}\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (styleValueTypes.percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.syncRender();\n            /**\n             * This must fire after the syncRender call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(exports.AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = Object.assign(Object.assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness,\n                bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.actual[axis];\n                axisValue.set(point[axis] - popmotion.mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.getInstance().style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(popmotion.mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.syncRender();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return Object.assign(Object.assign({}, props), { drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum });\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    React.useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    React.useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = React.useRef(null);\n    const { transformPagePoint } = React.useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    React.useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nconst names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"LayoutAnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    const managers = names.map(() => new SubscriptionManager());\n    const propSubscriptions = {};\n    const lifecycles = {\n        clearAllListeners: () => managers.forEach((manager) => manager.clear()),\n        updatePropListeners: (props) => {\n            names.forEach((name) => {\n                var _a;\n                const on = \"on\" + name;\n                const propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach((manager, i) => {\n        lifecycles[\"on\" + names[i]] = (handler) => manager.add(handler);\n        lifecycles[\"notify\" + names[i]] = (...args) => manager.notify(...args);\n    });\n    return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.2.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.2.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nconst visualElement = ({ treeType = \"\", build, getBaseTarget, makeTargetAnimatable, measureViewportBox, render: renderInstance, readValueFromInstance, removeValueFromRenderState, sortNodePosition, scrapeMotionValuesFromProps, }) => ({ parent, props, presenceId, blockInitialAnimation, visualState, shouldReduceMotion, }, options = {}) => {\n    let isMounted = false;\n    const { latestValues, renderState } = visualState;\n    /**\n     * The instance of the render-specific node that will be hydrated by the\n     * exposed React ref. So for example, this visual element can host a\n     * HTMLElement, plain object, or Three.js object. The functions provided\n     * in VisualElementConfig allow us to interface with this instance.\n     */\n    let instance;\n    /**\n     * Manages the subscriptions for a visual element's lifecycle, for instance\n     * onRender\n     */\n    const lifecycles = createLifecycles();\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n    const values = new Map();\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n    const valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n    let prevMotionValues = {};\n    /**\n     * When values are removed from all animation props we need to search\n     * for a fallback value to animate to. These values are tracked in baseTarget.\n     */\n    const baseTarget = Object.assign({}, latestValues);\n    // Internal methods ========================\n    /**\n     * On mount, this will be hydrated with a callback to disconnect\n     * this visual element from its parent on unmount.\n     */\n    let removeFromVariantTree;\n    /**\n     * Render the element with the latest styles outside of the React\n     * render lifecycle\n     */\n    function render() {\n        if (!instance || !isMounted)\n            return;\n        triggerBuild();\n        renderInstance(instance, renderState, props.style, element.projection);\n    }\n    function triggerBuild() {\n        build(element, renderState, latestValues, options, props);\n    }\n    function update() {\n        lifecycles.notifyUpdate(latestValues);\n    }\n    /**\n     *\n     */\n    function bindToMotionValue(key, value) {\n        const removeOnChange = value.onChange((latestValue) => {\n            latestValues[key] = latestValue;\n            props.onUpdate && sync__default[\"default\"].update(update, false, true);\n        });\n        const removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n        valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n    const _a = scrapeMotionValuesFromProps(props), { willChange } = _a, initialMotionValues = tslib.__rest(_a, [\"willChange\"]);\n    for (const key in initialMotionValues) {\n        const value = initialMotionValues[key];\n        if (latestValues[key] !== undefined && isMotionValue(value)) {\n            value.set(latestValues[key], false);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n        }\n    }\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n    const isControllingVariants = checkIfControllingVariants(props);\n    const isVariantNode = checkIfVariantNode(props);\n    const element = Object.assign(Object.assign({ treeType, \n        /**\n         * This is a mirror of the internal instance prop, which keeps\n         * VisualElement type-compatible with React's RefObject.\n         */\n        current: null, \n        /**\n         * The depth of this visual element within the visual element tree.\n         */\n        depth: parent ? parent.depth + 1 : 0, parent, children: new Set(), \n        /**\n         *\n         */\n        presenceId,\n        shouldReduceMotion, \n        /**\n         * If this component is part of the variant tree, it should track\n         * any children that are also part of the tree. This is essentially\n         * a shadow tree to simplify logic around how to stagger over children.\n         */\n        variantChildren: isVariantNode ? new Set() : undefined, \n        /**\n         * Whether this instance is visible. This can be changed imperatively\n         * by the projection tree, is analogous to CSS's visibility in that\n         * hidden elements should take up layout, and needs enacting by the configured\n         * render function.\n         */\n        isVisible: undefined, \n        /**\n         * Normally, if a component is controlled by a parent's variants, it can\n         * rely on that ancestor to trigger animations further down the tree.\n         * However, if a component is created after its parent is mounted, the parent\n         * won't trigger that mount animation so the child needs to.\n         *\n         * TODO: This might be better replaced with a method isParentMounted\n         */\n        manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n        /**\n         * This can be set by AnimatePresence to force components that mount\n         * at the same time as it to mount as if they have initial={false} set.\n         */\n        blockInitialAnimation, \n        /**\n         * Determine whether this component has mounted yet. This is mostly used\n         * by variant children to determine whether they need to trigger their\n         * own animations on mount.\n         */\n        isMounted: () => Boolean(instance), mount(newInstance) {\n            isMounted = true;\n            instance = element.current = newInstance;\n            if (element.projection) {\n                element.projection.mount(newInstance);\n            }\n            if (isVariantNode && parent && !isControllingVariants) {\n                removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n            }\n            values.forEach((value, key) => bindToMotionValue(key, value));\n            parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            element.setProps(props);\n        },\n        /**\n         *\n         */\n        unmount() {\n            var _a;\n            (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n            sync.cancelSync.update(update);\n            sync.cancelSync.render(render);\n            valueSubscriptions.forEach((remove) => remove());\n            removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n            parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n            lifecycles.clearAllListeners();\n            instance = undefined;\n            isMounted = false;\n        },\n        /**\n         * Add a child visual element to our set of children.\n         */\n        addVariantChild(child) {\n            var _a;\n            const closestVariantNode = element.getClosestVariantNode();\n            if (closestVariantNode) {\n                (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                return () => closestVariantNode.variantChildren.delete(child);\n            }\n        },\n        sortNodePosition(other) {\n            /**\n             * If these nodes aren't even of the same type we can't compare their depth.\n             */\n            if (!sortNodePosition || treeType !== other.treeType)\n                return 0;\n            return sortNodePosition(element.getInstance(), other.getInstance());\n        }, \n        /**\n         * Returns the closest variant node in the tree starting from\n         * this visual element.\n         */\n        getClosestVariantNode: () => isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode(), \n        /**\n         * Expose the latest layoutId prop.\n         */\n        getLayoutId: () => props.layoutId, \n        /**\n         * Returns the current instance.\n         */\n        getInstance: () => instance, \n        /**\n         * Get/set the latest static values.\n         */\n        getStaticValue: (key) => latestValues[key], setStaticValue: (key, value) => (latestValues[key] = value), \n        /**\n         * Returns the latest motion value state. Currently only used to take\n         * a snapshot of the visual element - perhaps this can return the whole\n         * visual state\n         */\n        getLatestValues: () => latestValues, \n        /**\n         * Set the visiblity of the visual element. If it's changed, schedule\n         * a render to reflect these changes.\n         */\n        setVisibility(visibility) {\n            if (element.isVisible === visibility)\n                return;\n            element.isVisible = visibility;\n            element.scheduleRender();\n        },\n        /**\n         * Make a target animatable by Popmotion. For instance, if we're\n         * trying to animate width from 100px to 100vw we need to measure 100vw\n         * in pixels to determine what we really need to animate to. This is also\n         * pluggable to support Framer's custom value types like Color,\n         * and CSS variables.\n         */\n        makeTargetAnimatable(target, canMutate = true) {\n            return makeTargetAnimatable(element, target, props, canMutate);\n        },\n        /**\n         * Measure the current viewport box with or without transforms.\n         * Only measures axis-aligned boxes, rotate and skew must be manually\n         * removed with a re-render to work.\n         */\n        measureViewportBox() {\n            return measureViewportBox(instance, props);\n        },\n        // Motion values ========================\n        /**\n         * Add a motion value and bind it to this visual element.\n         */\n        addValue(key, value) {\n            // Remove existing value if it exists\n            if (element.hasValue(key))\n                element.removeValue(key);\n            values.set(key, value);\n            latestValues[key] = value.get();\n            bindToMotionValue(key, value);\n        },\n        /**\n         * Remove a motion value and unbind any active subscriptions.\n         */\n        removeValue(key) {\n            var _a;\n            values.delete(key);\n            (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n            valueSubscriptions.delete(key);\n            delete latestValues[key];\n            removeValueFromRenderState(key, renderState);\n        }, \n        /**\n         * Check whether we have a motion value for this key\n         */\n        hasValue: (key) => values.has(key), \n        /**\n         * Get a motion value for this key. If called with a default\n         * value, we'll create one if none exists.\n         */\n        getValue(key, defaultValue) {\n            let value = values.get(key);\n            if (value === undefined && defaultValue !== undefined) {\n                value = motionValue(defaultValue);\n                element.addValue(key, value);\n            }\n            return value;\n        }, \n        /**\n         * Iterate over our motion values.\n         */\n        forEachValue: (callback) => values.forEach(callback), \n        /**\n         * If we're trying to animate to a previously unencountered value,\n         * we need to check for it in our state and as a last resort read it\n         * directly from the instance (which might have performance implications).\n         */\n        readValue: (key) => {\n            var _a;\n            return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n        }, \n        /**\n         * Set the base target to later animate back to. This is currently\n         * only hydrated on creation and when we first read a value.\n         */\n        setBaseTarget(key, value) {\n            baseTarget[key] = value;\n        },\n        /**\n         * Find the base target for a value thats been removed from all animation\n         * props.\n         */\n        getBaseTarget(key) {\n            if (getBaseTarget) {\n                const target = getBaseTarget(props, key);\n                if (target !== undefined && !isMotionValue(target))\n                    return target;\n            }\n            return baseTarget[key];\n        } }, lifecycles), { \n        /**\n         * Build the renderer state based on the latest visual state.\n         */\n        build() {\n            triggerBuild();\n            return renderState;\n        },\n        /**\n         * Schedule a render on the next animation frame.\n         */\n        scheduleRender() {\n            sync__default[\"default\"].render(render, false, true);\n        }, \n        /**\n         * Synchronously fire render. It's prefered that we batch renders but\n         * in many circumstances, like layout measurement, we need to run this\n         * synchronously. However in those instances other measures should be taken\n         * to batch reads/writes.\n         */\n        syncRender: render, \n        /**\n         * Update the provided props. Ensure any newly-added motion values are\n         * added to our map, old ones removed, and listeners updated.\n         */\n        setProps(newProps) {\n            if (newProps.transformTemplate || props.transformTemplate) {\n                element.scheduleRender();\n            }\n            props = newProps;\n            lifecycles.updatePropListeners(newProps);\n            prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n        }, getProps: () => props, \n        // Variants ==============================\n        /**\n         * Returns the variant definition with a given name.\n         */\n        getVariant: (name) => { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n        /**\n         * Returns the defined default transition on this component.\n         */\n        getDefaultTransition: () => props.transition, getTransformPagePoint: () => {\n            return props.transformPagePoint;\n        }, \n        /**\n         * Used by child variant nodes to get the closest ancestor variant props.\n         */\n        getVariantContext(startAtParent = false) {\n            if (startAtParent)\n                return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n            if (!isControllingVariants) {\n                const context = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                if (props.initial !== undefined) {\n                    context.initial = props.initial;\n                }\n                return context;\n            }\n            const context = {};\n            for (let i = 0; i < numVariantProps; i++) {\n                const name = variantProps[i];\n                const prop = props[name];\n                if (isVariantLabel(prop) || prop === false) {\n                    context[name] = prop;\n                }\n            }\n            return context;\n        } });\n    return element;\n};\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    heyListen.invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = tslib.__rest(_a, []);\n    const element = visualElement.getInstance();\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = Object.assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target, transitionEnd };\n}\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === styleValueTypes.number || v === styleValueTypes.px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformProps.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.getInstance();\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = Object.assign({}, target);\n    transitionEnd = Object.assign({}, transitionEnd);\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    heyListen.invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === styleValueTypes.px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nfunction getComputedStyle$1(element) {\n    return window.getComputedStyle(element);\n}\nconst htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance(domElement, key) {\n        if (isTransformProp(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle$1(domElement);\n            const value = (isCSSVariable$1(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    },\n    sortNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox(element, { transformPagePoint }) {\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform(element, domElement, props) {\n        const { transformTemplate } = props;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform(instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable(element, _a, _b, isMounted) {\n        var { transition, transitionEnd } = _a, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        let origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            const parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return Object.assign({ transition,\n            transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n    build(element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nconst htmlVisualElement = visualElement(htmlConfig);\n\nconst svgVisualElement = visualElement(Object.assign(Object.assign({}, htmlConfig), { getBaseTarget(props, key) {\n        return props[key];\n    },\n    readValueFromInstance(domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps,\n    build(_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (styleValueTypes.px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = styleValueTypes.complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = styleValueTypes.complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = popmotion.mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nclass MeasureLayoutWithContext extends React__default[\"default\"].Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions(Object.assign(Object.assign({}, projection.options), { onExitComplete: () => this.safeToRemove() }));\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync__default[\"default\"].postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = React.useContext(LayoutGroupContext);\n    return (React__default[\"default\"].createElement(MeasureLayoutWithContext, Object.assign({}, props, { layoutGroup: layoutGroup, switchLayoutGroup: React.useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove })));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: Object.assign(Object.assign({}, correctBorderRadius), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || styleValueTypes.px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = popmotion.mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(popmotion.progress(min, max, p));\n    };\n}\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (styleValueTypes.percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n                node.snapshot.isShared = true;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nconst identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    let transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    return transform === identityProjection ? \"none\" : transform;\n}\n\nconst compareByDepth = (a, b) => a.depth - b.depth;\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(id, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to actually\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            this.updateProjection = () => {\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.id = id;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            id && this.root.registerPotentialNode(id, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(id, node) {\n            this.potentialNodes.set(id, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.getInstance()) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.id && this.root.potentialNodes.delete(this.id);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let unblockTimeout;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    clearTimeout(unblockTimeout);\n                    unblockTimeout = window.setTimeout(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = Object.assign(Object.assign({}, getValueTransition(layoutTransition, \"layout\")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            this.finishAnimation();\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            sync.cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                /**\n                 * TODO: Check we haven't updated the scroll\n                 * since the last didUpdate\n                 */\n                node.updateScroll();\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            sync.flushSync.update();\n            sync.flushSync.preRender();\n            sync.flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync__default[\"default\"].preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync__default[\"default\"].postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            const measured = this.measure();\n            const layout = this.removeTransform(this.removeElementScroll(measured));\n            roundBox(layout);\n            this.snapshot = {\n                measured,\n                layout,\n                latestValues: {},\n            };\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const measured = this.measure();\n            roundBox(measured);\n            const prevLayout = this.layout;\n            this.layout = {\n                measured,\n                actual: this.removeElementScroll(measured),\n            };\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.actual);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n        }\n        updateScroll() {\n            if (this.options.layoutScroll && this.instance) {\n                this.isScrollRoot = checkIsScrollRoot(this.instance);\n                this.scroll = measureScroll(this.instance);\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.x);\n                translateAxis(box.y, scroll.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options, isScrollRoot } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (isScrollRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.x);\n                    translateAxis(boxWithoutScroll.y, scroll.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.x,\n                        y: -node.scroll.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measure();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            var _a;\n            this.options = Object.assign(Object.assign(Object.assign({}, this.options), options), { crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true });\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent && this.relativeParent.layout) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.actual);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.actual);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.actual);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent &&\n                    Boolean(this.relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !this.relativeParent.options.layoutScroll &&\n                    this.relativeParent.target) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent || hasTransform(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            const lead = this.getLead();\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.actual);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = Object.assign({}, this.latestValues);\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n            const isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.actual, this.relativeParent.layout.actual);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                sync.cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync__default[\"default\"].update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, Object.assign(Object.assign({}, options), { onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    }, onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    } }));\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const { targetWithTransforms, target, layout, latestValues } = this.getLead();\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its actual layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            // Keep a record of all the values we've reset\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const axis = transformAxes[i];\n                const key = \"rotate\" + axis;\n                // If this rotation doesn't exist as a motion value, then we don't\n                // need to reset it\n                if (!visualElement.getStaticValue(key)) {\n                    continue;\n                }\n                hasRotate = true;\n                // Record the rotation and then temporarily set it to 0\n                resetValues[key] = visualElement.getStaticValue(key);\n                visualElement.setStaticValue(key, 0);\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c, _d, _e, _f;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its actual\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\"\n                        : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c, _d;\n    const snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { actual: layout, measured: measuredLayout } = node.layout;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (node.options.animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (node.options.animationType === \"position\") {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layout);\n        const visualDelta = createDelta();\n        if (snapshot.isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layout);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            node.relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (node.relativeParent && !node.relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = node.relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.actual);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notifyBeforeLayoutMeasure();\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = popmotion.mix(delta.translate, 0, p);\n    output.scale = popmotion.mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = popmotion.mix(from.min, to.min, p);\n    output.max = popmotion.mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${id}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== null && value !== void 0 ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nconst featureBundle = Object.assign(Object.assign(Object.assign(Object.assign({}, animations), gestureAnimations), drag), layoutFeatures);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\n/**\n * @public\n */\nconst m = createMotionProxy(createDomMotionConfig);\n\nfunction useIsMounted() {\n    const isMounted = React.useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = React.useState(0);\n    const forceRender = React.useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = React.useCallback(() => sync__default[\"default\"].postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React__namespace.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = React.useId();\n    const ref = React.useRef(null);\n    const size = React.useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    React.useInsertionEffect(() => {\n        var _a;\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        (_a = style.sheet) === null || _a === void 0 ? void 0 : _a.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React__namespace.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React__namespace.cloneElement(children, { ref })));\n}\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = React.useId();\n    const context = React.useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    React.useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React__namespace.useEffect(() => {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React__namespace.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React__namespace.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    React.Children.forEach(children, (child) => {\n        if (React.isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = React.useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = React.useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = React.useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = React.useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React__namespace.createElement(React__namespace.Fragment, null, childrenToRender.map((child) => (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (env !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => React.cloneElement(child))));\n};\n\n/**\n * @deprecated\n */\nconst DeprecatedLayoutGroupContext = React.createContext(null);\n\nconst notify = (node) => !node.isLayoutDirty && node.willUpdate(false);\nfunction nodeGroup() {\n    const nodes = new Set();\n    const subscriptions = new WeakMap();\n    const dirtyAll = () => nodes.forEach(notify);\n    return {\n        add: (node) => {\n            nodes.add(node);\n            subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n        },\n        remove: (node) => {\n            var _a;\n            nodes.delete(node);\n            (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();\n            subscriptions.delete(node);\n            dirtyAll();\n        },\n        dirty: dirtyAll,\n    };\n}\n\nconst shouldInheritGroup = (inherit) => inherit === true;\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = ({ children, id, inheritId, inherit = true, }) => {\n    var _a, _b;\n    // Maintain backwards-compatibility with inheritId until 7.0\n    if (inheritId !== undefined)\n        inherit = inheritId;\n    const layoutGroupContext = React.useContext(LayoutGroupContext);\n    const deprecatedLayoutGroupContext = React.useContext(DeprecatedLayoutGroupContext);\n    const [forceRender, key] = useForceUpdate();\n    const context = React.useRef(null);\n    const upstreamId = (_a = layoutGroupContext.id) !== null && _a !== void 0 ? _a : deprecatedLayoutGroupContext;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id,\n            group: shouldInheritGroup(inherit)\n                ? (_b = layoutGroupContext === null || layoutGroupContext === void 0 ? void 0 : layoutGroupContext.group) !== null && _b !== void 0 ? _b : nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    const memoizedContext = React.useMemo(() => (Object.assign(Object.assign({}, context.current), { forceRender })), [key]);\n    return (React__namespace.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\n};\n\nlet id = 0;\nconst AnimateSharedLayout = ({ children, }) => {\n    React__namespace.useEffect(() => {\n        heyListen.warning(false, \"AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations\");\n    }, []);\n    return (React__namespace.createElement(LayoutGroup, { id: useConstant(() => `asl-${id++}`) }, children));\n};\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var { children, isValidProp } = _a, config = tslib.__rest(_a, [\"children\", \"isValidProp\"]);\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = Object.assign(Object.assign({}, React.useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = React.useMemo(() => config, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n    return (React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = React.useState(!isLazyBundle(features));\n    const loadedRenderer = React.useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer } = features, loadedFeatures = tslib.__rest(features, [\"renderer\"]);\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    React.useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then((_a) => {\n                var { renderer } = _a, loadedFeatures = tslib.__rest(_a, [\"renderer\"]);\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nconst ReorderContext = React.createContext(null);\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = popmotion.mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nfunction ReorderGroup(_a, externalRef) {\n    var { children, as = \"ul\", axis = \"y\", onReorder, values } = _a, props = tslib.__rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = React.useRef(false);\n    heyListen.invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex((entry) => value === entry.value) === -1) {\n                order.push({ value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: (id, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    React.useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React__namespace.createElement(Component, Object.assign({}, props, { ref: externalRef }),\n        React__namespace.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = React.forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = React.useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = React.useState(initial);\n        React.useEffect(() => value.onChange(setLatest), []);\n    }\n    return value;\n}\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = popmotion.interpolate(inputRange, outputRange, Object.assign({ mixer: getMixer(outputRange[0]) }, options));\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    useIsomorphicLayoutEffect(() => {\n        const subscriptions = values.map((value) => value.onChange(handler));\n        return () => subscriptions.forEach((unsubscribe) => unsubscribe());\n    });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, () => sync__default[\"default\"].update(updateValue, false, true));\n    return value;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem(_a, externalRef) {\n    var { children, style, value, as = \"li\", onDrag, layout = true } = _a, props = tslib.__rest(_a, [\"children\", \"style\", \"value\", \"as\", \"onDrag\", \"layout\"]);\n    const Component = useConstant(() => motion(as));\n    const context = React.useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.x),\n        y: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    const measuredLayout = React.useRef(null);\n    heyListen.invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    React.useEffect(() => {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React__namespace.createElement(Component, Object.assign({ drag: axis }, props, { dragSnapToOrigin: true, style: Object.assign(Object.assign({}, style), { x: point.x, y: point.y, zIndex }), layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => {\n            measuredLayout.current = measured;\n        }, ref: externalRef }), children));\n}\nconst Item = React.forwardRef(ReorderItem);\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\n/**\n * @public\n */\nconst domAnimation = Object.assign(Object.assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\n/**\n * @public\n */\nconst domMax = Object.assign(Object.assign(Object.assign(Object.assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = React.useContext(MotionConfigContext);\n    const activeSpringAnimation = React.useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    React.useMemo(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = popmotion.animate(Object.assign(Object.assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, (v) => value.set(parseFloat(v)));\n    return value;\n}\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    const velocity = useMotionValue(value.getVelocity());\n    React.useEffect(() => {\n        return value.velocityUpdateSubscribers.add((newVelocity) => {\n            velocity.set(newVelocity);\n        });\n    }, [value]);\n    return velocity;\n}\n\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll(_a = {}) {\n    var { container, target } = _a, options = tslib.__rest(_a, [\"container\", \"target\"]);\n    const values = useConstant(createScrollMotionValues);\n    useIsomorphicLayoutEffect(() => {\n        return dom.scroll(({ x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, Object.assign(Object.assign({}, options), { container: (container === null || container === void 0 ? void 0 : container.current) || undefined, target: (target === null || target === void 0 ? void 0 : target.current) || undefined }));\n    }, []);\n    return values;\n}\n\n/**\n * @deprecated useElementScroll is deprecated. Convert to useScroll({ container: ref })\n */\nfunction useElementScroll(ref) {\n    warnOnce(false, \"useElementScroll is deprecated. Convert to useScroll({ container: ref }).\");\n    return useScroll({ container: ref });\n}\n\n/**\n * @deprecated useViewportScroll is deprecated. Convert to useScroll()\n */\nfunction useViewportScroll() {\n    warnOnce(false, \"useViewportScroll is deprecated. Convert to useScroll().\");\n    return useScroll();\n}\n\nfunction useAnimationFrame(callback) {\n    const initialTimestamp = React.useRef(0);\n    const { isStatic } = React.useContext(MotionConfigContext);\n    React.useEffect(() => {\n        if (isStatic)\n            return;\n        const provideTimeSinceStart = ({ timestamp }) => {\n            if (!initialTimestamp.current)\n                initialTimestamp.current = timestamp;\n            callback(timestamp - initialTimestamp.current);\n        };\n        sync__default[\"default\"].update(provideTimeSinceStart, true);\n        return () => sync.cancelSync.update(provideTimeSinceStart);\n    }, [callback]);\n}\n\nfunction useTime() {\n    const time = useMotionValue(0);\n    useAnimationFrame((t) => time.set(t));\n    return time;\n}\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.members = [];\n        this.transforms = new Set();\n    }\n    add(name) {\n        let memberName;\n        if (isTransformProp(name)) {\n            this.transforms.add(name);\n            memberName = \"transform\";\n        }\n        else if (!isTransformOriginProp(name) &&\n            !isCSSVariable$1(name) &&\n            name !== \"willChange\") {\n            memberName = camelToDash(name);\n        }\n        if (memberName) {\n            addUniqueItem(this.members, memberName);\n            this.update();\n        }\n    }\n    remove(name) {\n        if (isTransformProp(name)) {\n            this.transforms.delete(name);\n            if (!this.transforms.size) {\n                removeItem(this.members, \"transform\");\n            }\n        }\n        else {\n            removeItem(this.members, camelToDash(name));\n        }\n        this.update();\n    }\n    update() {\n        this.set(this.members.length ? this.members.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    const pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                const animations = [];\n                subscribers.forEach((visualElement) => {\n                    animations.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride,\n                    }));\n                });\n                return Promise.all(animations);\n            }\n            else {\n                return new Promise((resolve) => {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve,\n                    });\n                });\n            }\n        },\n        set(definition) {\n            heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            pendingAnimations.forEach(({ animation, resolve }) => {\n                controls.start(...animation).then(resolve);\n            });\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    React.useEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle(...items) {\n    const index = React.useRef(0);\n    const [item, setItem] = React.useState(items[index.current]);\n    const runCycle = React.useCallback((next) => {\n        index.current =\n            typeof next !== \"number\"\n                ? popmotion.wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, \n    // The array will change on each call, but by putting items.length at\n    // the front of this array, we guarantee the dependency comparison will match up\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items.length, ...items]);\n    return [item, runCycle];\n}\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = React.useState(false);\n    React.useEffect(() => {\n        var _a;\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (_a = root === null || root === void 0 ? void 0 : root.current) !== null && _a !== void 0 ? _a : undefined,\n            margin,\n            amount: amount === \"some\" ? \"any\" : amount,\n        };\n        return dom.inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once]);\n    return isInView;\n}\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nclass DragControls {\n    constructor() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    subscribe(controls) {\n        this.componentControls.add(controls);\n        return () => this.componentControls.delete(controls);\n    }\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    start(event, options) {\n        this.componentControls.forEach((controls) => {\n            controls.start(event.nativeEvent || event, options);\n        });\n    }\n}\nconst createDragControls = () => new DragControls();\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nfunction useInstantLayoutTransition() {\n    return startTransition;\n}\nfunction startTransition(cb) {\n    if (!rootProjectionNode.current)\n        return;\n    rootProjectionNode.current.isUpdating = false;\n    rootProjectionNode.current.blockUpdate();\n    cb === null || cb === void 0 ? void 0 : cb();\n}\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    React.useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        sync__default[\"default\"].postRender(() => sync__default[\"default\"].postRender(() => (instantAnimationState.current = false)));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n        });\n    };\n}\n\nfunction useResetProjection() {\n    const reset = React__namespace.useCallback(() => {\n        const root = rootProjectionNode.current;\n        if (!root)\n            return;\n        root.resetTree();\n    }, []);\n    return reset;\n}\n\nconst createObject = () => ({});\nconst stateVisualElement = visualElement({\n    build() { },\n    measureViewportBox: createBox,\n    resetTransform() { },\n    restoreTransform() { },\n    removeValueFromRenderState() { },\n    render() { },\n    scrapeMotionValuesFromProps: createObject,\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable(element, _a) {\n        var { transition, transitionEnd } = _a, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        const origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return Object.assign({ transition, transitionEnd }, target);\n    },\n});\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = React.useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => stateVisualElement({ props: {}, visualState }, { initialState }));\n    React.useEffect(() => {\n        element.mount({});\n        return element.unmount;\n    }, [element]);\n    React.useEffect(() => {\n        element.setProps({\n            onUpdate: (v) => {\n                setAnimationState(Object.assign({}, v));\n            },\n        });\n    }, [setAnimationState, element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nconst maxScale = 100000;\nconst invertScale = (scale) => scale > 0.001 ? 1 / scale : maxScale;\nlet hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @deprecated\n */\nfunction useInvertedScale(scale) {\n    let parentScaleX = useMotionValue(1);\n    let parentScaleY = useMotionValue(1);\n    const visualElement = useVisualElementContext();\n    heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    const scaleX = useTransform(parentScaleX, invertScale);\n    const scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX, scaleY };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DeprecatedLayoutGroupContext = DeprecatedLayoutGroupContext;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.LayoutGroup = LayoutGroup;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionContext = MotionContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.Reorder = Reorder;\nexports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;\nexports.addPointerEvent = addPointerEvent;\nexports.addScaleCorrector = addScaleCorrector;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.animations = animations;\nexports.calcLength = calcLength;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.createBox = createBox;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.filterProps = filterProps;\nexports.isBrowser = isBrowser;\nexports.isDragActive = isDragActive;\nexports.isMotionValue = isMotionValue;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.makeUseVisualState = makeUseVisualState;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.resolveMotionValue = resolveMotionValue;\nexports.transform = transform;\nexports.useAnimation = useAnimation;\nexports.useAnimationControls = useAnimationControls;\nexports.useAnimationFrame = useAnimationFrame;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useForceUpdate = useForceUpdate;\nexports.useInView = useInView;\nexports.useInstantLayoutTransition = useInstantLayoutTransition;\nexports.useInstantTransition = useInstantTransition;\nexports.useIsPresent = useIsPresent;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useReducedMotionConfig = useReducedMotionConfig;\nexports.useResetProjection = useResetProjection;\nexports.useScroll = useScroll;\nexports.useSpring = useSpring;\nexports.useTime = useTime;\nexports.useTransform = useTransform;\nexports.useUnmountEffect = useUnmountEffect;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.useVisualElementContext = useVisualElementContext;\nexports.useWillChange = useWillChange;\nexports.visualElement = visualElement;\nexports.wrapHandler = wrapHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}