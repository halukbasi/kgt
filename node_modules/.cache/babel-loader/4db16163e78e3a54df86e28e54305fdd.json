{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletProvider = void 0;\n\nconst wallet_adapter_base_1 = require(\"@solana/wallet-adapter-base\");\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst errors_1 = require(\"./errors\");\n\nconst useLocalStorage_1 = require(\"./useLocalStorage\");\n\nconst useWallet_1 = require(\"./useWallet\");\n\nconst initialState = {\n  wallet: null,\n  adapter: null,\n  publicKey: null,\n  connected: false\n};\n\nconst WalletProvider = _ref => {\n  let {\n    children,\n    wallets: adapters,\n    autoConnect = false,\n    onError,\n    localStorageKey = 'walletName'\n  } = _ref;\n  const [name, setName] = (0, useLocalStorage_1.useLocalStorage)(localStorageKey, null);\n  const [{\n    wallet,\n    adapter,\n    publicKey,\n    connected\n  }, setState] = (0, react_1.useState)(initialState);\n  const readyState = (adapter === null || adapter === void 0 ? void 0 : adapter.readyState) || wallet_adapter_base_1.WalletReadyState.Unsupported;\n  const [connecting, setConnecting] = (0, react_1.useState)(false);\n  const [disconnecting, setDisconnecting] = (0, react_1.useState)(false);\n  const isConnecting = (0, react_1.useRef)(false);\n  const isDisconnecting = (0, react_1.useRef)(false);\n  const isUnloading = (0, react_1.useRef)(false); // Wrap adapters to conform to the `Wallet` interface\n\n  const [wallets, setWallets] = (0, react_1.useState)(() => adapters.map(adapter => ({\n    adapter,\n    readyState: adapter.readyState\n  }))); // When the wallets change, start to listen for changes to their `readyState`\n\n  (0, react_1.useEffect)(() => {\n    function handleReadyStateChange(readyState) {\n      setWallets(prevWallets => {\n        const walletIndex = prevWallets.findIndex(_ref2 => {\n          let {\n            adapter\n          } = _ref2;\n          return adapter.name === this.name;\n        });\n        if (walletIndex === -1) return prevWallets;\n        return [...prevWallets.slice(0, walletIndex), Object.assign(Object.assign({}, prevWallets[walletIndex]), {\n          readyState\n        }), ...prevWallets.slice(walletIndex + 1)];\n      });\n    }\n\n    for (const adapter of adapters) {\n      adapter.on('readyStateChange', handleReadyStateChange, adapter);\n    }\n\n    return () => {\n      for (const adapter of adapters) {\n        adapter.off('readyStateChange', handleReadyStateChange, adapter);\n      }\n    };\n  }, [adapters]); // When the selected wallet changes, initialize the state\n\n  (0, react_1.useEffect)(() => {\n    const wallet = wallets.find(_ref3 => {\n      let {\n        adapter\n      } = _ref3;\n      return adapter.name === name;\n    });\n\n    if (wallet) {\n      setState({\n        wallet,\n        adapter: wallet.adapter,\n        connected: wallet.adapter.connected,\n        publicKey: wallet.adapter.publicKey\n      });\n    } else {\n      setState(initialState);\n    }\n  }, [name, wallets]); // If autoConnect is enabled, try to connect when the adapter changes and is ready\n\n  (0, react_1.useEffect)(() => {\n    if (isConnecting.current || connecting || connected || !autoConnect || !adapter || !(readyState === wallet_adapter_base_1.WalletReadyState.Installed || readyState === wallet_adapter_base_1.WalletReadyState.Loadable)) return;\n\n    (function () {\n      return __awaiter(this, void 0, void 0, function* () {\n        isConnecting.current = true;\n        setConnecting(true);\n\n        try {\n          yield adapter.connect();\n        } catch (error) {\n          // Clear the selected wallet\n          setName(null); // Don't throw error, but handleError will still be called\n        } finally {\n          setConnecting(false);\n          isConnecting.current = false;\n        }\n      });\n    })();\n  }, [isConnecting, connecting, connected, autoConnect, adapter, readyState]); // If the window is closing or reloading, ignore disconnect and error events from the adapter\n\n  (0, react_1.useEffect)(() => {\n    function listener() {\n      isUnloading.current = true;\n    }\n\n    window.addEventListener('beforeunload', listener);\n    return () => window.removeEventListener('beforeunload', listener);\n  }, [isUnloading]); // Handle the adapter's connect event\n\n  const handleConnect = (0, react_1.useCallback)(() => {\n    if (!adapter) return;\n    setState(state => Object.assign(Object.assign({}, state), {\n      connected: adapter.connected,\n      publicKey: adapter.publicKey\n    }));\n  }, [adapter]); // Handle the adapter's disconnect event\n\n  const handleDisconnect = (0, react_1.useCallback)(() => {\n    // Clear the selected wallet unless the window is unloading\n    if (!isUnloading.current) setName(null);\n  }, [isUnloading]); // Handle the adapter's error event, and local errors\n\n  const handleError = (0, react_1.useCallback)(error => {\n    // Call onError unless the window is unloading\n    if (!isUnloading.current) (onError || console.error)(error);\n    return error;\n  }, [isUnloading, onError]); // Setup and teardown event listeners when the adapter changes\n\n  (0, react_1.useEffect)(() => {\n    if (adapter) {\n      adapter.on('connect', handleConnect);\n      adapter.on('disconnect', handleDisconnect);\n      adapter.on('error', handleError);\n      return () => {\n        adapter.off('connect', handleConnect);\n        adapter.off('disconnect', handleDisconnect);\n        adapter.off('error', handleError);\n      };\n    }\n  }, [adapter, handleConnect, handleDisconnect, handleError]); // When the adapter changes, disconnect the old one\n\n  (0, react_1.useEffect)(() => {\n    return () => {\n      adapter === null || adapter === void 0 ? void 0 : adapter.disconnect();\n    };\n  }, [adapter]); // Connect the adapter to the wallet\n\n  const connect = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {\n    if (isConnecting.current || connecting || disconnecting || connected) return;\n    if (!adapter) throw handleError(new errors_1.WalletNotSelectedError());\n\n    if (!(readyState === wallet_adapter_base_1.WalletReadyState.Installed || readyState === wallet_adapter_base_1.WalletReadyState.Loadable)) {\n      // Clear the selected wallet\n      setName(null);\n\n      if (typeof window !== 'undefined') {\n        window.open(adapter.url, '_blank');\n      }\n\n      throw handleError(new wallet_adapter_base_1.WalletNotReadyError());\n    }\n\n    isConnecting.current = true;\n    setConnecting(true);\n\n    try {\n      yield adapter.connect();\n    } catch (error) {\n      // Clear the selected wallet\n      setName(null); // Rethrow the error, and handleError will also be called\n\n      throw error;\n    } finally {\n      setConnecting(false);\n      isConnecting.current = false;\n    }\n  }), [isConnecting, connecting, disconnecting, connected, adapter, readyState, handleError]); // Disconnect the adapter from the wallet\n\n  const disconnect = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {\n    if (isDisconnecting.current || disconnecting) return;\n    if (!adapter) return setName(null);\n    isDisconnecting.current = true;\n    setDisconnecting(true);\n\n    try {\n      yield adapter.disconnect();\n    } catch (error) {\n      // Clear the selected wallet\n      setName(null); // Rethrow the error, and handleError will also be called\n\n      throw error;\n    } finally {\n      setDisconnecting(false);\n      isDisconnecting.current = false;\n    }\n  }), [isDisconnecting, disconnecting, adapter]); // Send a transaction using the provided connection\n\n  const sendTransaction = (0, react_1.useCallback)((transaction, connection, options) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!adapter) throw handleError(new errors_1.WalletNotSelectedError());\n    if (!connected) throw handleError(new wallet_adapter_base_1.WalletNotConnectedError());\n    return yield adapter.sendTransaction(transaction, connection, options);\n  }), [adapter, handleError, connected]); // Sign a transaction if the wallet supports it\n\n  const signTransaction = (0, react_1.useMemo)(() => adapter && 'signTransaction' in adapter ? transaction => __awaiter(void 0, void 0, void 0, function* () {\n    if (!connected) throw handleError(new wallet_adapter_base_1.WalletNotConnectedError());\n    return yield adapter.signTransaction(transaction);\n  }) : undefined, [adapter, handleError, connected]); // Sign multiple transactions if the wallet supports it\n\n  const signAllTransactions = (0, react_1.useMemo)(() => adapter && 'signAllTransactions' in adapter ? transactions => __awaiter(void 0, void 0, void 0, function* () {\n    if (!connected) throw handleError(new wallet_adapter_base_1.WalletNotConnectedError());\n    return yield adapter.signAllTransactions(transactions);\n  }) : undefined, [adapter, handleError, connected]); // Sign an arbitrary message if the wallet supports it\n\n  const signMessage = (0, react_1.useMemo)(() => adapter && 'signMessage' in adapter ? message => __awaiter(void 0, void 0, void 0, function* () {\n    if (!connected) throw handleError(new wallet_adapter_base_1.WalletNotConnectedError());\n    return yield adapter.signMessage(message);\n  }) : undefined, [adapter, handleError, connected]);\n  return react_1.default.createElement(useWallet_1.WalletContext.Provider, {\n    value: {\n      autoConnect,\n      wallets,\n      wallet,\n      publicKey,\n      connected,\n      connecting,\n      disconnecting,\n      select: setName,\n      connect,\n      disconnect,\n      sendTransaction,\n      signTransaction,\n      signAllTransactions,\n      signMessage\n    }\n  }, children);\n};\n\nexports.WalletProvider = WalletProvider;","map":{"version":3,"mappings":"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","names":["initialState","wallet","adapter","publicKey","connected","WalletProvider","children","wallets","adapters","autoConnect","onError","localStorageKey","name","setName","setState","readyState","wallet_adapter_base_1","Unsupported","connecting","setConnecting","disconnecting","setDisconnecting","isConnecting","isDisconnecting","isUnloading","setWallets","map","handleReadyStateChange","prevWallets","walletIndex","findIndex","slice","on","off","find","current","Installed","Loadable","connect","error","listener","window","addEventListener","removeEventListener","handleConnect","state","Object","handleDisconnect","handleError","console","disconnect","__awaiter","errors_1","open","url","sendTransaction","transaction","connection","options","signTransaction","undefined","signAllTransactions","transactions","signMessage","message","react_1","useWallet_1","Provider","value","select","exports"],"sourceRoot":"","sources":["../../src/WalletProvider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}